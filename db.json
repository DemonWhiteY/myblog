{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/pic/p1.png","path":"pic/p1.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/简单动态规划.md","hash":"7e11a3201c8534a427e3ec5913576eecaf4afbbe","modified":1686143076528},{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1682553551937},{"_id":"source/categories/index.md","hash":"7fb163bd2ed46b2dc556df68bc5cc553d44b8586","modified":1682556108175},{"_id":"source/_posts/welcome-to-Demonwhite-world.md","hash":"5aa4699c343f032fe1b98b540a8a3bf4c5ed8d55","modified":1682553618715},{"_id":"source/tags/index.md","hash":"bb337aa5b8bf9abbed2002624822fc5c4c0c9c12","modified":1682575626677},{"_id":"themes/butterfly/README_CN.md","hash":"b95c89559c429049caa3f9f461a2b41ae98c0d68","modified":1682553708280},{"_id":"themes/butterfly/README.md","hash":"46869886ed9ce4beedaad5b064789fd15861566e","modified":1682553708274},{"_id":"themes/butterfly/package.json","hash":"1206cdcf23b9203476da79d3ac7897ffc8738d80","modified":1682553708310},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1682553708274},{"_id":"themes/butterfly/_config.yml","hash":"8cbfadf3cf4e99f94d47030e160e6b2269bc9810","modified":1682575958871},{"_id":"themes/butterfly/plugins.yml","hash":"2d04afe05470194935fbb6b7544793e2b242d1a8","modified":1682553708310},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1682553708281},{"_id":"themes/butterfly/languages/default.yml","hash":"d444cbb5c5456aaf27f3fb1b4308634689c7bb53","modified":1682553708281},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1682553708281},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1682553708310},{"_id":"themes/butterfly/languages/en.yml","hash":"4957fd976c99745d3aa24000a85b2955e8d1cf81","modified":1682553708281},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"cc8672dc0c2762b694f689cbeb6e34810f1c194e","modified":1682553708281},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1682553708310},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1682553708310},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1682553708310},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"145ec301db185c8a06de1f34a77ca391e1d2729b","modified":1682553708281},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1682553708274},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1682553708274},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"92683cb785a29e5a73701b33dba73d3afac268c3","modified":1682553708274},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1682553708274},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"50eea5aa78cdeb6c72dd22f0aeabc407cc0f712e","modified":1682553708281},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1682553708281},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1682553708274},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1682553708281},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c5c58714fb3cb839653e5c32e6094784c8662935","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"b50b0afdc41c54279587410c3f82c8cb3c5ff46d","modified":1682553708281},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"96df62e34661d8ca4a45267286127479e5178a79","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"5f96a28a4eac046b68ccc10e8c24ab01525e3245","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1682553708292},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1682553708334},{"_id":"themes/butterfly/source/css/var.styl","hash":"e1e37a2e932163886789b72624c7348545003f1d","modified":1682553708334},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1682553708310},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1682553708334},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1682553708334},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1682553708334},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"95479790234c291b064d031577d71214cdd1d820","modified":1682553708310},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1682553708316},{"_id":"themes/butterfly/scripts/events/init.js","hash":"72605a00bf623b6cbc9fa0f90069ea2ae584c5c0","modified":1682553708310},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1682553708310},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1682553708316},{"_id":"themes/butterfly/source/js/main.js","hash":"ab1eb2ae2fc7937aa0579d5293432fa986bf49b2","modified":1682553708334},{"_id":"themes/butterfly/source/js/utils.js","hash":"6b6052cceadd791487b1b3e1da61e7e8cd1e2702","modified":1682553708340},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1682553708316},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"c4dac81869b33fa1590fae60a45b2e915a59c3ec","modified":1682553708334},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1682553708316},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"8ff03b35385f9162e1eb54dceb5fa7f781306caf","modified":1682553708316},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"7222102f9919f8e961d4f1688425845fb7775ada","modified":1682553708316},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"6005907245dd74b153f03afdccfae1abb66bb482","modified":1682553708316},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"76343ac8422c9c8539082e77eda6ffee4b877eb2","modified":1682553708316},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1682553708316},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1682553708316},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1682553708316},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"b8d95ac1851c37f1dce4b1dd4a1d3ffdff501a03","modified":1682553708316},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a3323fcb11cfd3f3e21230737341beb5d76b40aa","modified":1682553708316},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1682553708316},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1682553708316},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1682553708316},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1682553708316},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1682553708316},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"fc5a80707cf522378be3cf8638ef78bccc88c510","modified":1682553708316},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1682553708316},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1682553708316},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"c8dbdfe6145a0bc6f7691c9551be8169a2698f0a","modified":1682553708284},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c7666a10448edd93f5ace37296051b7670495f1b","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"ed582d2e0b41970c99e38e964b3cd821997fadea","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fd55f0e09827ef40c53c48d184a553464aac3e03","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"e9f952f1b66a0116fccb812b14db0f229666e586","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"962ee70a35e60a13c31eea47d16b9f98069fe417","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"39c205027296dbd9fc9eb3cfd9d033bc5bd031b7","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"7a641b5dd45b970e1dafd1433eb32ea149e55cf2","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"9155f01d4c644a2e19b2b13b2d3c6d5e34dd0abf","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"f530f8c2b0a7d048cdb8933b0fbe5380843006ff","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"a60d9cc9083142e3d92b618561abd557fcab502b","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"a6fde4835d6460ce7baf792fd5e1977fad73db25","modified":1682553708285},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"12be059c536490af216a397e8f2a7abbf6d4610e","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"558456d85100606c14e0a59801b0ee2ee67aadd9","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"d4836a2ce1c87a59cfa8e4986346bf353710277f","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1682553708304},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"fde51780f525b002885c9f189cccc459542f5dc6","modified":1682553708323},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"6a7a926b72c5083aa14051a0eca8d49e1c6261f1","modified":1682553708323},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"ba94ceb40d7c81372a76103d958dcc2cc6a84f00","modified":1682553708310},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1682553708310},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1682553708323},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1682553708324},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"3969f599e8657adf8c3ce287d83f5d0a23f276a9","modified":1682553708324},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"077ce6932261cf51696834a25d1d988fec6cd7d0","modified":1682553708324},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1682553708324},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1682553708324},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"d33f2d9001a82d9a72d6f4088743762fbd016e4c","modified":1682553708324},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1682553708324},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1682553708328},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1682553708328},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1682553708328},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"92fd3128edc339ce570c2b1b134b9fc99e830789","modified":1682553708328},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"824b2b2d2ee72583b9e009c0bb13e29e806534cc","modified":1682553708328},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1682553708328},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"d13bda30a5db542f7ff24c7938659c3869758c64","modified":1682553708328},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"01ba993e7bd384827c0f5499ae0c5f82e068d844","modified":1682553708328},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"d072872714854cdc3d2975fb131ac31cb82b13e3","modified":1682553708328},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1682553708328},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5dd1ba997741d02894ff846eda939ad8051c0bb2","modified":1682553708328},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1682553708328},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1682553708328},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"bfa8bdd6b014018551ce0b83e962f61b3b25e2a5","modified":1682553708328},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d83389e07f8851f1b9afafe0eacd1bf10ad334ef","modified":1682553708328},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1682553708328},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"37db99299af380e9111dce2a78a5049b301b13e0","modified":1682553708328},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1682553708334},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"cf90ea339fbb7f345212319627fcd68964024e40","modified":1682553708328},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"eda63ed2c2e461883090c0b154368e353be3b011","modified":1682553708328},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"7c463ba25b3b54f0f46dfd75971d792816e942a8","modified":1682553708334},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1682553708334},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1682553708334},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1682553708334},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1682553708334},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1682553708334},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1682553708334},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1682553708334},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1682553708334},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"bbe930d8425bdaee2a5ba3cade42b617cee42934","modified":1682553708334},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"27a4a8428d95473f6f4c6d36eb39b803aef4c093","modified":1682553708334},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"645087801624a73cbee63269cfd399e9da39c663","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"0010c7a10d265c4329f0fd4db85b4a9ea7ba06b5","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"d59d43a8caad801222608a341f6845c6f8d1b265","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4b98145d6584d586cabf033493282afc72ae816a","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"38b85d216d9377ddbaa2e5867e2f03805227237c","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3f59333064c4fc754c638f13a417b7be2569ca09","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1682553708292},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"306b7aa7d86e46df28fa52f75cead4f9d71cacb2","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"1157118db9f5d7c0c5a0fc7c346f6e934ca00d52","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"3b551ab7618b36795480015b5cf565288df5b957","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"d6a2a828689d619943838d42f2c3a45551e2c6c4","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"ed4af213570dd7d3e2165f830f45b3e57f04afd4","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"ca1337586aafc85e7f6d730ed0a1984a1a12aba7","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"a29b1faa7a394ed13b101849eb67fba5e7c90347","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"77729ecfae68ad21ff1d22ff2c8aa212f4d405c6","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"5b44b4e5f2445260811de81edd3eeeb97d8bb583","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f04263a3bd7efb7f1b250cfee112e82f49805492","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"ccb5c3f2a821b87986998595743387d7c997c16e","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"bf6b1453096dd7f53d81cde078c233d301e14304","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"d48d59ebf8c0142fb3c4592a0d35874f85e6fd4c","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fad70676346f194f166ac4e714ac6ff37cbf50ea","modified":1682553708298},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"75ebfe533dd7ee59113b84c2972694cadd92c6a9","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"297d34d83e7bff8ec3b8bc19bb0f4d901c35fe5a","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"bc207dcb771fc2c2c329f29d01708ff6b18443da","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"33368c0b80e4c4e78f3c7ee9bec0fed70ad838ca","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"f434dce30f8faee0db5a8e4d2c81196b0e3605f4","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"90338ac4cd114d324fe1caaaeea8be9ca05d6a46","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"ba04174d977da988a1d49c06641262c413352346","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"91a72e94743befa21a7b1c557fbb3751efb87ab0","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"3adcf28a8d205ea3ee19828eda0e668702fac07a","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"4b9c35375e0eb9cf99ad246d5ca838eca64a635d","modified":1682553708304},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1682553708324},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"8106bd031586f075a994956ee4438eb13be25d7b","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1682553708304},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1682553708304},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1682553708324},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1682553708324},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1682553708324},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1682553708324},{"_id":"public/tags/index.html","hash":"87c80d0392c6976d5cc406dfb25a678756b9d1c2","modified":1703511925568},{"_id":"public/categories/index.html","hash":"5de1093a9be7bf8257ec2f25955dbdada225100d","modified":1703511925568},{"_id":"public/2023/04/27/简单动态规划/index.html","hash":"42741eaf932a833830bf86ca31976ebe3f10f2c2","modified":1703509582357},{"_id":"public/2023/04/27/welcome-to-Demonwhite-world/index.html","hash":"c4d8daa4a68309fb993b409cf441fa5f0d84fb37","modified":1703509582357},{"_id":"public/archives/index.html","hash":"906ec4bc3b81719c7e27e92a1e906ec7a41e6db7","modified":1703511925568},{"_id":"public/index.html","hash":"c7375dd8943d7c45ffcdf8e48704e113d86d7eef","modified":1703511925568},{"_id":"public/archives/2023/index.html","hash":"5690f9f1026a7b9a751bc70ab448a91b241cdce3","modified":1703511925568},{"_id":"public/archives/2023/04/index.html","hash":"d6036b8d367796dac81bfe67af70092f90c67be5","modified":1703511925568},{"_id":"public/2023/04/27/hello-world/index.html","hash":"639dcaa1a2f273f35bb7741951760717d7c38be8","modified":1703509582357},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1682557215491},{"_id":"public/css/index.css","hash":"93671a33562136eb8ba7ee1b4b1afa55a13ef362","modified":1682557215491},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1682557215491},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1682557215491},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1682557215491},{"_id":"public/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1682557215491},{"_id":"public/js/utils.js","hash":"2e74fe8ae5ac20067668a18df5985459faf419f9","modified":1682557215491},{"_id":"public/js/search/local-search.js","hash":"8a0547ecb33ad2939450152adf54fca58e22a424","modified":1682557215491},{"_id":"public/js/main.js","hash":"05c825962e365af62096d3f1b4d7c9ee1b5fc2f5","modified":1682557215491},{"_id":"public/js/tw_cn.js","hash":"76d0c5c172cae44b34b0bd3125fd068b2c3cbd4a","modified":1682557215491},{"_id":"source/_posts/cscode-配置unity代码无法自动补全问题的解决.md","hash":"fd2ad784a53b664e4de8bec5faa79e4af8708478","modified":1682590736735},{"_id":"public/2023/04/27/cscode-配置unity代码无法自动补全问题的解决/index.html","hash":"fbf15a212bf48f08abf0740e33c0c7a91539c30d","modified":1703509582357},{"_id":"public/tags/环境配置/index.html","hash":"11b51fc3dfee7b2245c45bad417922ffa5137002","modified":1703511925568},{"_id":"public/tags/Unity2D/index.html","hash":"6ad6beb401a8a9aaeefa9e4a0e85b001580090de","modified":1703511925568},{"_id":"public/categories/游戏引擎，unity/index.html","hash":"a81eecccb1f46c493f5821a11ee9fee72a72b1d9","modified":1682589668762},{"_id":"public/categories/游戏引擎，unity/2D/index.html","hash":"a78eb77a7eab5a0fe1ce653cd87f7c0960adbea2","modified":1682589668762},{"_id":"public/tags/算法，动态规划，入门/index.html","hash":"5d1de068cee45664dcd81f007aca53a5ceea0318","modified":1682589668762},{"_id":"public/tags/环境配置，游戏，C/index.html","hash":"1992e4660145294d221b0281f9407977af8764d7","modified":1682589668762},{"_id":"public/categories/游戏引擎/index.html","hash":"1d07eb787b3e720afece444cb758dc240f7117e0","modified":1703511925568},{"_id":"public/categories/游戏引擎/unity/index.html","hash":"022ff385f75a2611dae64fee00f30cfd98e37a45","modified":1703511925568},{"_id":"public/categories/游戏引擎/unity/2D/index.html","hash":"d2b7a20c1b416019a64518b4ddecca74880aac75","modified":1703511925568},{"_id":"public/tags/游戏/index.html","hash":"df0e57c1f582e3f9d040ca5f825d6fdf4c7f3d18","modified":1703511925568},{"_id":"public/tags/C/index.html","hash":"423c9e57dcd8482cf7dad5ea8465da905a5a611f","modified":1703511925568},{"_id":"public/tags/算法/index.html","hash":"da0ba47548a34c8a2fe9e08be2b0e8f98dd2a3a0","modified":1683091653461},{"_id":"public/tags/动态规划/index.html","hash":"35b84c8d34d0da16bb61b413b8806e4754d3cc72","modified":1683091653461},{"_id":"public/tags/入门/index.html","hash":"a60f5cecccc9eb67392f229f0852e82d13353f61","modified":1703511925568},{"_id":"public/categories/数据结构和算法/index.html","hash":"e7cbb18716f9ec251ed8da436477f359f10f0fe8","modified":1683091653461},{"_id":"public/categories/数据结构和算法/动态规划/index.html","hash":"94c3e354c048391a4dbb4cd084ace3404fc91aae","modified":1683091653461},{"_id":"source/_posts/如何用unity与git远程协作.md","hash":"fb4b8ea3867c059b8eb2821fa8f12e4dece2b8ca","modified":1683091647716},{"_id":"public/2023/05/03/如何用unity与git远程协作/index.html","hash":"f5b8037af72e39d27304550b790a107b38bbd31b","modified":1703509582357},{"_id":"public/archives/2023/05/index.html","hash":"3aa2f2083d39cc8d02a7b2c15b6ffb7a1b1ee762","modified":1703511925568},{"_id":"public/categories/C/index.html","hash":"5d421ccd7bc21d0884e6817f25fa25dafb9785f6","modified":1703511925568},{"_id":"public/categories/C/入门/index.html","hash":"c902b7c8c2f7126225a38bc0b8a8f42f7c66d345","modified":1703511925568},{"_id":"source/_posts/JAVA网络编程.md","hash":"80470329d3b77bc6aef6df871b7e7108e81a9a8a","modified":1703391858074},{"_id":"source/_posts/屏幕截图 2023-12-23 235445.png","hash":"3315eedca2d5e8462f2f737e4b5b490e3b23f471","modified":1703347018758},{"_id":"source/pic/p1.png","hash":"3315eedca2d5e8462f2f737e4b5b490e3b23f471","modified":1703346885013},{"_id":"public/pic/p1.png","hash":"3315eedca2d5e8462f2f737e4b5b490e3b23f471","modified":1703348089417},{"_id":"public/2023/12/23/JAVA网络编程/index.html","hash":"1cd4996264792b09be7f6c149435b2f578cd9edc","modified":1703496133195},{"_id":"public/archives/2023/12/index.html","hash":"9df76ca52769f005407b9554803b93c55e8363fc","modified":1703511925568},{"_id":"public/tags/JAVA/index.html","hash":"457a906dd861a1a7194c0c458428bb5192b5fe9d","modified":1703511925568},{"_id":"source/_posts/JAVA联机五子棋（二）.md","hash":"675fa8a0475706b980c87eb03331a0c031978765","modified":1703509566298},{"_id":"public/2023/12/24/JAVA联机五子棋（二）/index.html","hash":"23879b5cc4002e285dcd081dac7ec00d1494867d","modified":1703509582357},{"_id":"source/_posts/JAVA-联机五子棋（三）.md","hash":"21c55364934cf52f6181198c62ffd577c8dcf31f","modified":1703495075820},{"_id":"public/2023/12/24/JAVA-联机五子棋（三）/index.html","hash":"d387fe27574cbabd41b4117f36f0271e2c8bfafd","modified":1703509582357},{"_id":"source/_posts/JAVA联机五子棋（四）.md","hash":"ab66a51c18be51f3001654a26dcc09adcb9bf9b2","modified":1703511906036},{"_id":"public/2023/12/25/JAVA联机五子棋（四）/index.html","hash":"6ec8dfdeed90a0dc9038933e21b164087015ac08","modified":1703511925568},{"_id":"source/_posts/JAVA联机五子棋（一）.md","hash":"afa979bb3305fd1949f5efa27a2c5cbfe576a134","modified":1703511870099},{"_id":"public/2023/12/23/JAVA联机五子棋（一）/index.html","hash":"d6b11d6d665a23c54c88a8aba862b1e5fd4cac19","modified":1703511925568}],"Category":[{"name":"游戏引擎，unity","_id":"clgyyccoi0001o8dyd6qx39r3"},{"name":"2D","parent":"clgyyccoi0001o8dyd6qx39r3","_id":"clgyyccoj0003o8dy30fu1alb"},{"name":"游戏引擎","_id":"clgyyinl40001todyevbxa7nz"},{"name":"unity","parent":"clgyyinl40001todyevbxa7nz","_id":"clgyyinl50003todyek653qsw"},{"name":"2D","parent":"clgyyinl50003todyek653qsw","_id":"clgyyinl60007todyah9v7psg"},{"name":"数据结构和算法","_id":"clgyyyt3y0000fwdy0atdfjqp"},{"name":"动态规划","parent":"clgyyyt3y0000fwdy0atdfjqp","_id":"clgyyyt3z0001fwdy7suc8pks"},{"name":"C++","_id":"clilotsre00015wdyexrr5h9j"},{"name":"入门","parent":"clilotsre00015wdyexrr5h9j","_id":"clilotsre00035wdy8j0s6v46"}],"Data":[],"Page":[{"title":"tags","date":"2023-04-27T00:38:41.000Z","type":"tags","orderby":"random","order":1,"_content":"# Unity2D\n# Unreal\n## pytorch\n## tensorflow\n## HTML\n### CSS\n### Javascript\n#### 热更新\n#### vue\n## C++\n### leetcode\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-04-27 08:38:41\ntype: \"tags\"\norderby: random\norder: 1\n---\n# Unity2D\n# Unreal\n## pytorch\n## tensorflow\n## HTML\n### CSS\n### Javascript\n#### 热更新\n#### vue\n## C++\n### leetcode\n","updated":"2023-04-27T06:07:54.355Z","path":"tags/index.html","_id":"clgyf4gsg0000vcdyh62hedpg","comments":1,"layout":"page","content":"<h1 id=\"Unity2D\"><a href=\"#Unity2D\" class=\"headerlink\" title=\"Unity2D\"></a>Unity2D</h1><h1 id=\"Unreal\"><a href=\"#Unreal\" class=\"headerlink\" title=\"Unreal\"></a>Unreal</h1><h2 id=\"pytorch\"><a href=\"#pytorch\" class=\"headerlink\" title=\"pytorch\"></a>pytorch</h2><h2 id=\"tensorflow\"><a href=\"#tensorflow\" class=\"headerlink\" title=\"tensorflow\"></a>tensorflow</h2><h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><h3 id=\"Javascript\"><a href=\"#Javascript\" class=\"headerlink\" title=\"Javascript\"></a>Javascript</h3><h4 id=\"热更新\"><a href=\"#热更新\" class=\"headerlink\" title=\"热更新\"></a>热更新</h4><h4 id=\"vue\"><a href=\"#vue\" class=\"headerlink\" title=\"vue\"></a>vue</h4><h2 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C++\"></a>C++</h2><h3 id=\"leetcode\"><a href=\"#leetcode\" class=\"headerlink\" title=\"leetcode\"></a>leetcode</h3>","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"Unity2D\"><a href=\"#Unity2D\" class=\"headerlink\" title=\"Unity2D\"></a>Unity2D</h1><h1 id=\"Unreal\"><a href=\"#Unreal\" class=\"headerlink\" title=\"Unreal\"></a>Unreal</h1><h2 id=\"pytorch\"><a href=\"#pytorch\" class=\"headerlink\" title=\"pytorch\"></a>pytorch</h2><h2 id=\"tensorflow\"><a href=\"#tensorflow\" class=\"headerlink\" title=\"tensorflow\"></a>tensorflow</h2><h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><h3 id=\"Javascript\"><a href=\"#Javascript\" class=\"headerlink\" title=\"Javascript\"></a>Javascript</h3><h4 id=\"热更新\"><a href=\"#热更新\" class=\"headerlink\" title=\"热更新\"></a>热更新</h4><h4 id=\"vue\"><a href=\"#vue\" class=\"headerlink\" title=\"vue\"></a>vue</h4><h2 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C++\"></a>C++</h2><h3 id=\"leetcode\"><a href=\"#leetcode\" class=\"headerlink\" title=\"leetcode\"></a>leetcode</h3>"},{"title":"分类","date":"2023-04-27T00:40:56.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2023-04-27 08:40:56\ntype: \"categories\"\n---\n","updated":"2023-04-27T00:41:48.175Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clgyf4gsl0002vcdy9u19h9f2","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""}],"Post":[{"title":"welcome to Demonwhite'world","date":"2023-04-27T00:00:18.000Z","_content":"","source":"_posts/welcome-to-Demonwhite-world.md","raw":"---\ntitle: welcome to Demonwhite'world\ndate: 2023-04-27 08:00:18\ntags:\n---\n","slug":"welcome-to-Demonwhite-world","published":1,"updated":"2023-04-27T00:00:18.715Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgyf4gsi0001vcdy1me2cxva","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-04-26T23:59:11.937Z","updated":"2023-04-26T23:59:11.937Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clgyf4gsm0003vcdy3u1choqh","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"入门小白必须知道的——C++三原则","date":"2023-04-27T00:32:54.000Z","top_img":"https://xinzhuobu.com/wp-content/uploads/2022/06/20220611004.jpg","_content":"## 面向对象的那些坑\n刚刚接触C++面向对象编程的时候，大家肯能会对一些新的概念感到很陌生，比如说析构函数，拷贝构造函数这些东西，往往会说——“我也不用这些东西呀，要这有什么用呢”，但是，确实啊，不得不说，比如说析构函数，在大一的阶段里基本上是用不到的，有些题要是硬用析构函数可能还会给你抛个异常，但是如果咱们实实力见长以后又会这其实是比较重要的东西，直接关系了你程序的崩溃与否，今天就来从我最近犯的一个错误来和大家聊聊C++中著名的三原则。\n\n先放上让我犯错的代码\n{% codeblock lang:cpp %}\n    #include<iostream>\n    using namespace std;\n    template<class T>\n    class Array\n    {\n        private:\n        \n    public:\n        int size;\n        T* element ;\n        Array(int newsize) :size(newsize){\n            element = new T[size];\n        }\n        ~Array() {\n            delete[] element;\n            cout << \"析构函数调用\" << endl;\n        };\n        Array(const Array& p) {\n            size = p.size;\n            element = new T[p.size];\n            for (int i = 0; i < p.size; i++)\n            {\n                element[i] = p.element[i];\n            }\n            cout << \"拷贝构造函数调用\" << endl;\n        }\n\n        Array &operator=(const Array& p)\n        {\n            cout << \"赋值运算符重载调用\" << endl;\n            size = p.size;\n                if (element != NULL)\n                {\n                    delete[] element;\n                    element = NULL;\t\n            }\n                else {\n                    element = new T[p.size];\n                    for (int i = 0; i < p.size; i++)\n                    {\n                        element[i] = p.element[i];\n                    }\n                \n                }\n        }\n\n        friend istream &operator>>(istream &input,Array& inarray){\n            for (int i = 0; i < inarray.size; i++)\n            {\n                input >> inarray.element[i];\n            }\n            return input;\n        }\n        friend ostream &operator<<(ostream & output,Array outarray){\n            for (int i = 0; i <outarray.size ; i++)\n            {\n                output << outarray.element[i] << \" \";\n            }\n            return output;\n        }\n\n        void mysort() {\n\n            for (int i = 0; i < size; i++)\n            {\n                for (int j = i + 1; j < size;j++)\n                {\n                    if (element[i] > element[j])\n                    {\n                        T temp;\n                        temp = element[i];\n                        element[i] = element[j];\n                        element[j] = temp;\n                    }\n                }\n            }\n\n            cout << *this;\n            cout << endl;\n        }\n\n    };\n\n    class student\n    {\n    public:\n        int id;\n        string name;\n        int grade;\n\n        bool operator >(student& s2)\n        {\n            return this->grade > s2.grade ? true : false;\n        }\n        friend ostream& operator <<(ostream& out, student& st)\n        {\n            out << st.id;\n            return out;\n            \n        }\n        friend istream& operator >>(istream& in, student& st)\n        {\n            in>>st.id>>st.name>>st.grade;\n            return in;\n\n        }\n    };\n\n\n    int main()\n    {\n        \n            int num; cin >> num;\n\n            Array<int> intnum(num);\n            cin >> intnum;\n\n            Array<double> doublenum(num);\n            cin >> doublenum;\n\n            Array<char> charnum(num);\n            cin >> charnum;\n\n            Array<student> stnum(num);\n            cin >> stnum;\n\n            intnum.mysort();\n            \n            doublenum.mysort();\n            charnum.mysort();\n            stnum.mysort();\n        return 0;\n    }\n{% endcodeblock %}\n\n\n代码其实还蛮简单的哈，就是让你创建一个模板数组类，这个类里面有输入输出还有排序，然后分别处理下int double char和student的排序就行。\n\n其实我的问题一开始也不是析构函数这出问题了，一开始的问题在于，输出函数忘了加引用了，因此导致了一系列的问题。\n{% codeblock lang:cpp %}\n\n    friend ostream &operator<<(ostream & output,Array outarray){\n            for (int i = 0; i <outarray.size ; i++)\n            {\n                output << outarray.element[i] << \" \";\n            }\n            return output;\n        }\n\n\n{% endcodeblock %}\n\n但是我一开始也没有意识到，所以咱们来看看如果这里不加引用会发生什么，然后引出咱们今天的主角C++三原则\n\n首先我们知道按引用传递和按值传递的区别，按引用传递函数体内用到的还是原来的值，按值传递的话，编译器会先给你创造一个临时变量，然后把要传输的值复制给临时变量，既然说到复制了，那自然得想到拷贝构造函数，没错这个复制过程正是通过拷贝构造函数实现的，大家执行代码可以发现输出如下\n{% codeblock lang:cpp %}\n        3\n    3 2 1\n    1.2 1.1 1.3\n    c b a\n    10000 zhao 92\n    20000 li 93\n    30000 zhao 94\n    拷贝构造函数调用\n    1 2 3 析构函数调用\n\n    拷贝构造函数调用\n    1.1 1.2 1.3 析构函数调用\n\n    拷贝构造函数调用\n    a b c 析构函数调用\n\n    拷贝构造函数调用\n    10000 20000 30000 析构函数调用\n\n    析构函数调用\n    析构函数调用\n    析构函数调用\n    析构函数调用\n{% endcodeblock %}\n没错，在每一次进行输出前，都会调用一次拷贝构造函数，在执行输出后还要调用一次析构函数，这个析构函数也很好理解，临时变量需要删掉嘛，自然需要析构一下。\n\n但这个时候问题来了，如果我们一开始没有定义拷贝构造函数，那么就会用编译器提供的默认拷贝构造函数来使用，但是默认的拷贝构造是潜拷贝，这就导致了临时变量没有new 一个新内存，而是直接指向原来变量的地址。\n\n那么这个时候问题就出了，既然临时变量指向的内存就是原始数据的内存，那么，临时变量的析构函数岂不是直接把原始数据给析构了？\n\n但这个时候原始数据还没有到达生命周期，于是乎原始数据自己到达生命周期时忽然发现，wc我居然已经没了？于是这个时候就出现了异常。\n\n这也就引出了我们今天的主角————C++三原则\n## 需要析构函数的类也需要拷贝构造函数和拷贝赋值函数\n## 需要拷贝操作的类也需要赋值操作，反之亦然\n## 析构函数不能是私有的\n这三个思想呢大概就是个啥意思捏，用到析构函数，证明用到堆中的内存，一旦涉及堆中的内存，原来的默认浅拷贝这个时候就失效了，需要我们手工写一个深拷贝来表示。\n\n\n\n\n\n\n","source":"_posts/简单动态规划.md","raw":"---\ntitle: 入门小白必须知道的——C++三原则\ndate: 2023-04-27 08:32:54\ntags: [C++,入门]\ncategories:\n- [C++,入门]\ntop_img: https://xinzhuobu.com/wp-content/uploads/2022/06/20220611004.jpg\n---\n## 面向对象的那些坑\n刚刚接触C++面向对象编程的时候，大家肯能会对一些新的概念感到很陌生，比如说析构函数，拷贝构造函数这些东西，往往会说——“我也不用这些东西呀，要这有什么用呢”，但是，确实啊，不得不说，比如说析构函数，在大一的阶段里基本上是用不到的，有些题要是硬用析构函数可能还会给你抛个异常，但是如果咱们实实力见长以后又会这其实是比较重要的东西，直接关系了你程序的崩溃与否，今天就来从我最近犯的一个错误来和大家聊聊C++中著名的三原则。\n\n先放上让我犯错的代码\n{% codeblock lang:cpp %}\n    #include<iostream>\n    using namespace std;\n    template<class T>\n    class Array\n    {\n        private:\n        \n    public:\n        int size;\n        T* element ;\n        Array(int newsize) :size(newsize){\n            element = new T[size];\n        }\n        ~Array() {\n            delete[] element;\n            cout << \"析构函数调用\" << endl;\n        };\n        Array(const Array& p) {\n            size = p.size;\n            element = new T[p.size];\n            for (int i = 0; i < p.size; i++)\n            {\n                element[i] = p.element[i];\n            }\n            cout << \"拷贝构造函数调用\" << endl;\n        }\n\n        Array &operator=(const Array& p)\n        {\n            cout << \"赋值运算符重载调用\" << endl;\n            size = p.size;\n                if (element != NULL)\n                {\n                    delete[] element;\n                    element = NULL;\t\n            }\n                else {\n                    element = new T[p.size];\n                    for (int i = 0; i < p.size; i++)\n                    {\n                        element[i] = p.element[i];\n                    }\n                \n                }\n        }\n\n        friend istream &operator>>(istream &input,Array& inarray){\n            for (int i = 0; i < inarray.size; i++)\n            {\n                input >> inarray.element[i];\n            }\n            return input;\n        }\n        friend ostream &operator<<(ostream & output,Array outarray){\n            for (int i = 0; i <outarray.size ; i++)\n            {\n                output << outarray.element[i] << \" \";\n            }\n            return output;\n        }\n\n        void mysort() {\n\n            for (int i = 0; i < size; i++)\n            {\n                for (int j = i + 1; j < size;j++)\n                {\n                    if (element[i] > element[j])\n                    {\n                        T temp;\n                        temp = element[i];\n                        element[i] = element[j];\n                        element[j] = temp;\n                    }\n                }\n            }\n\n            cout << *this;\n            cout << endl;\n        }\n\n    };\n\n    class student\n    {\n    public:\n        int id;\n        string name;\n        int grade;\n\n        bool operator >(student& s2)\n        {\n            return this->grade > s2.grade ? true : false;\n        }\n        friend ostream& operator <<(ostream& out, student& st)\n        {\n            out << st.id;\n            return out;\n            \n        }\n        friend istream& operator >>(istream& in, student& st)\n        {\n            in>>st.id>>st.name>>st.grade;\n            return in;\n\n        }\n    };\n\n\n    int main()\n    {\n        \n            int num; cin >> num;\n\n            Array<int> intnum(num);\n            cin >> intnum;\n\n            Array<double> doublenum(num);\n            cin >> doublenum;\n\n            Array<char> charnum(num);\n            cin >> charnum;\n\n            Array<student> stnum(num);\n            cin >> stnum;\n\n            intnum.mysort();\n            \n            doublenum.mysort();\n            charnum.mysort();\n            stnum.mysort();\n        return 0;\n    }\n{% endcodeblock %}\n\n\n代码其实还蛮简单的哈，就是让你创建一个模板数组类，这个类里面有输入输出还有排序，然后分别处理下int double char和student的排序就行。\n\n其实我的问题一开始也不是析构函数这出问题了，一开始的问题在于，输出函数忘了加引用了，因此导致了一系列的问题。\n{% codeblock lang:cpp %}\n\n    friend ostream &operator<<(ostream & output,Array outarray){\n            for (int i = 0; i <outarray.size ; i++)\n            {\n                output << outarray.element[i] << \" \";\n            }\n            return output;\n        }\n\n\n{% endcodeblock %}\n\n但是我一开始也没有意识到，所以咱们来看看如果这里不加引用会发生什么，然后引出咱们今天的主角C++三原则\n\n首先我们知道按引用传递和按值传递的区别，按引用传递函数体内用到的还是原来的值，按值传递的话，编译器会先给你创造一个临时变量，然后把要传输的值复制给临时变量，既然说到复制了，那自然得想到拷贝构造函数，没错这个复制过程正是通过拷贝构造函数实现的，大家执行代码可以发现输出如下\n{% codeblock lang:cpp %}\n        3\n    3 2 1\n    1.2 1.1 1.3\n    c b a\n    10000 zhao 92\n    20000 li 93\n    30000 zhao 94\n    拷贝构造函数调用\n    1 2 3 析构函数调用\n\n    拷贝构造函数调用\n    1.1 1.2 1.3 析构函数调用\n\n    拷贝构造函数调用\n    a b c 析构函数调用\n\n    拷贝构造函数调用\n    10000 20000 30000 析构函数调用\n\n    析构函数调用\n    析构函数调用\n    析构函数调用\n    析构函数调用\n{% endcodeblock %}\n没错，在每一次进行输出前，都会调用一次拷贝构造函数，在执行输出后还要调用一次析构函数，这个析构函数也很好理解，临时变量需要删掉嘛，自然需要析构一下。\n\n但这个时候问题来了，如果我们一开始没有定义拷贝构造函数，那么就会用编译器提供的默认拷贝构造函数来使用，但是默认的拷贝构造是潜拷贝，这就导致了临时变量没有new 一个新内存，而是直接指向原来变量的地址。\n\n那么这个时候问题就出了，既然临时变量指向的内存就是原始数据的内存，那么，临时变量的析构函数岂不是直接把原始数据给析构了？\n\n但这个时候原始数据还没有到达生命周期，于是乎原始数据自己到达生命周期时忽然发现，wc我居然已经没了？于是这个时候就出现了异常。\n\n这也就引出了我们今天的主角————C++三原则\n## 需要析构函数的类也需要拷贝构造函数和拷贝赋值函数\n## 需要拷贝操作的类也需要赋值操作，反之亦然\n## 析构函数不能是私有的\n这三个思想呢大概就是个啥意思捏，用到析构函数，证明用到堆中的内存，一旦涉及堆中的内存，原来的默认浅拷贝这个时候就失效了，需要我们手工写一个深拷贝来表示。\n\n\n\n\n\n\n","slug":"简单动态规划","published":1,"updated":"2023-06-07T13:04:36.528Z","_id":"clgyf4gsw0004vcdybyqn9cig","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"面向对象的那些坑\"><a href=\"#面向对象的那些坑\" class=\"headerlink\" title=\"面向对象的那些坑\"></a>面向对象的那些坑</h2><p>刚刚接触C++面向对象编程的时候，大家肯能会对一些新的概念感到很陌生，比如说析构函数，拷贝构造函数这些东西，往往会说——“我也不用这些东西呀，要这有什么用呢”，但是，确实啊，不得不说，比如说析构函数，在大一的阶段里基本上是用不到的，有些题要是硬用析构函数可能还会给你抛个异常，但是如果咱们实实力见长以后又会这其实是比较重要的东西，直接关系了你程序的崩溃与否，今天就来从我最近犯的一个错误来和大家聊聊C++中著名的三原则。</p>\n<p>先放上让我犯错的代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> <span class=\"title class_\">T</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Array</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>:</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> size;</span><br><span class=\"line\">    T* element ;</span><br><span class=\"line\">    <span class=\"built_in\">Array</span>(<span class=\"type\">int</span> newsize) :<span class=\"built_in\">size</span>(newsize)&#123;</span><br><span class=\"line\">        element = <span class=\"keyword\">new</span> T[size];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ~<span class=\"built_in\">Array</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">delete</span>[] element;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"built_in\">Array</span>(<span class=\"type\">const</span> Array&amp; p) &#123;</span><br><span class=\"line\">        size = p.size;</span><br><span class=\"line\">        element = <span class=\"keyword\">new</span> T[p.size];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; p.size; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            element[i] = p.element[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;拷贝构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Array &amp;<span class=\"keyword\">operator</span>=(<span class=\"type\">const</span> Array&amp; p)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;赋值运算符重载调用&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        size = p.size;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (element != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">delete</span>[] element;</span><br><span class=\"line\">                element = <span class=\"literal\">NULL</span>;\t</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                element = <span class=\"keyword\">new</span> T[p.size];</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; p.size; i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    element[i] = p.element[i];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">friend</span> istream &amp;<span class=\"keyword\">operator</span>&gt;&gt;(istream &amp;input,Array&amp; inarray)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; inarray.size; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            input &gt;&gt; inarray.element[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> input;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> ostream &amp;<span class=\"keyword\">operator</span>&lt;&lt;(ostream &amp; output,Array outarray)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;outarray.size ; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            output &lt;&lt; outarray.element[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">mysort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt; size;j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (element[i] &gt; element[j])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    T temp;</span><br><span class=\"line\">                    temp = element[i];</span><br><span class=\"line\">                    element[i] = element[j];</span><br><span class=\"line\">                    element[j] = temp;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        cout &lt;&lt; *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> id;</span><br><span class=\"line\">    string name;</span><br><span class=\"line\">    <span class=\"type\">int</span> grade;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">bool</span> <span class=\"keyword\">operator</span> &gt;(student&amp; s2)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>-&gt;grade &gt; s2.grade ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> ostream&amp; <span class=\"keyword\">operator</span> &lt;&lt;(ostream&amp; out, student&amp; st)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        out &lt;&lt; st.id;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> out;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> istream&amp; <span class=\"keyword\">operator</span> &gt;&gt;(istream&amp; in, student&amp; st)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        in&gt;&gt;st.id&gt;&gt;st.name&gt;&gt;st.grade;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> in;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"type\">int</span> num; cin &gt;&gt; num;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">Array&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">intnum</span><span class=\"params\">(num)</span></span>;</span><br><span class=\"line\">        cin &gt;&gt; intnum;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">Array&lt;<span class=\"type\">double</span>&gt; <span class=\"title\">doublenum</span><span class=\"params\">(num)</span></span>;</span><br><span class=\"line\">        cin &gt;&gt; doublenum;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">Array&lt;<span class=\"type\">char</span>&gt; <span class=\"title\">charnum</span><span class=\"params\">(num)</span></span>;</span><br><span class=\"line\">        cin &gt;&gt; charnum;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">Array&lt;student&gt; <span class=\"title\">stnum</span><span class=\"params\">(num)</span></span>;</span><br><span class=\"line\">        cin &gt;&gt; stnum;</span><br><span class=\"line\"></span><br><span class=\"line\">        intnum.<span class=\"built_in\">mysort</span>();</span><br><span class=\"line\">        </span><br><span class=\"line\">        doublenum.<span class=\"built_in\">mysort</span>();</span><br><span class=\"line\">        charnum.<span class=\"built_in\">mysort</span>();</span><br><span class=\"line\">        stnum.<span class=\"built_in\">mysort</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>代码其实还蛮简单的哈，就是让你创建一个模板数组类，这个类里面有输入输出还有排序，然后分别处理下int double char和student的排序就行。</p>\n<p>其实我的问题一开始也不是析构函数这出问题了，一开始的问题在于，输出函数忘了加引用了，因此导致了一系列的问题。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">friend</span> ostream &amp;<span class=\"keyword\">operator</span>&lt;&lt;(ostream &amp; output,Array outarray)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;outarray.size ; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            output &lt;&lt; outarray.element[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>但是我一开始也没有意识到，所以咱们来看看如果这里不加引用会发生什么，然后引出咱们今天的主角C++三原则</p>\n<p>首先我们知道按引用传递和按值传递的区别，按引用传递函数体内用到的还是原来的值，按值传递的话，编译器会先给你创造一个临时变量，然后把要传输的值复制给临时变量，既然说到复制了，那自然得想到拷贝构造函数，没错这个复制过程正是通过拷贝构造函数实现的，大家执行代码可以发现输出如下</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">3</span> <span class=\"number\">2</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">1.2</span> <span class=\"number\">1.1</span> <span class=\"number\">1.3</span></span><br><span class=\"line\">c b a</span><br><span class=\"line\"><span class=\"number\">10000</span> zhao <span class=\"number\">92</span></span><br><span class=\"line\"><span class=\"number\">20000</span> li <span class=\"number\">93</span></span><br><span class=\"line\"><span class=\"number\">30000</span> zhao <span class=\"number\">94</span></span><br><span class=\"line\">拷贝构造函数调用</span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> 析构函数调用</span><br><span class=\"line\"></span><br><span class=\"line\">拷贝构造函数调用</span><br><span class=\"line\"><span class=\"number\">1.1</span> <span class=\"number\">1.2</span> <span class=\"number\">1.3</span> 析构函数调用</span><br><span class=\"line\"></span><br><span class=\"line\">拷贝构造函数调用</span><br><span class=\"line\">a b c 析构函数调用</span><br><span class=\"line\"></span><br><span class=\"line\">拷贝构造函数调用</span><br><span class=\"line\"><span class=\"number\">10000</span> <span class=\"number\">20000</span> <span class=\"number\">30000</span> 析构函数调用</span><br><span class=\"line\"></span><br><span class=\"line\">析构函数调用</span><br><span class=\"line\">析构函数调用</span><br><span class=\"line\">析构函数调用</span><br><span class=\"line\">析构函数调用</span><br></pre></td></tr></table></figure>\n<p>没错，在每一次进行输出前，都会调用一次拷贝构造函数，在执行输出后还要调用一次析构函数，这个析构函数也很好理解，临时变量需要删掉嘛，自然需要析构一下。</p>\n<p>但这个时候问题来了，如果我们一开始没有定义拷贝构造函数，那么就会用编译器提供的默认拷贝构造函数来使用，但是默认的拷贝构造是潜拷贝，这就导致了临时变量没有new 一个新内存，而是直接指向原来变量的地址。</p>\n<p>那么这个时候问题就出了，既然临时变量指向的内存就是原始数据的内存，那么，临时变量的析构函数岂不是直接把原始数据给析构了？</p>\n<p>但这个时候原始数据还没有到达生命周期，于是乎原始数据自己到达生命周期时忽然发现，wc我居然已经没了？于是这个时候就出现了异常。</p>\n<p>这也就引出了我们今天的主角————C++三原则</p>\n<h2 id=\"需要析构函数的类也需要拷贝构造函数和拷贝赋值函数\"><a href=\"#需要析构函数的类也需要拷贝构造函数和拷贝赋值函数\" class=\"headerlink\" title=\"需要析构函数的类也需要拷贝构造函数和拷贝赋值函数\"></a>需要析构函数的类也需要拷贝构造函数和拷贝赋值函数</h2><h2 id=\"需要拷贝操作的类也需要赋值操作，反之亦然\"><a href=\"#需要拷贝操作的类也需要赋值操作，反之亦然\" class=\"headerlink\" title=\"需要拷贝操作的类也需要赋值操作，反之亦然\"></a>需要拷贝操作的类也需要赋值操作，反之亦然</h2><h2 id=\"析构函数不能是私有的\"><a href=\"#析构函数不能是私有的\" class=\"headerlink\" title=\"析构函数不能是私有的\"></a>析构函数不能是私有的</h2><p>这三个思想呢大概就是个啥意思捏，用到析构函数，证明用到堆中的内存，一旦涉及堆中的内存，原来的默认浅拷贝这个时候就失效了，需要我们手工写一个深拷贝来表示。</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h2 id=\"面向对象的那些坑\"><a href=\"#面向对象的那些坑\" class=\"headerlink\" title=\"面向对象的那些坑\"></a>面向对象的那些坑</h2><p>刚刚接触C++面向对象编程的时候，大家肯能会对一些新的概念感到很陌生，比如说析构函数，拷贝构造函数这些东西，往往会说——“我也不用这些东西呀，要这有什么用呢”，但是，确实啊，不得不说，比如说析构函数，在大一的阶段里基本上是用不到的，有些题要是硬用析构函数可能还会给你抛个异常，但是如果咱们实实力见长以后又会这其实是比较重要的东西，直接关系了你程序的崩溃与否，今天就来从我最近犯的一个错误来和大家聊聊C++中著名的三原则。</p>\n<p>先放上让我犯错的代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> <span class=\"title class_\">T</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Array</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>:</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> size;</span><br><span class=\"line\">    T* element ;</span><br><span class=\"line\">    <span class=\"built_in\">Array</span>(<span class=\"type\">int</span> newsize) :<span class=\"built_in\">size</span>(newsize)&#123;</span><br><span class=\"line\">        element = <span class=\"keyword\">new</span> T[size];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ~<span class=\"built_in\">Array</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">delete</span>[] element;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"built_in\">Array</span>(<span class=\"type\">const</span> Array&amp; p) &#123;</span><br><span class=\"line\">        size = p.size;</span><br><span class=\"line\">        element = <span class=\"keyword\">new</span> T[p.size];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; p.size; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            element[i] = p.element[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;拷贝构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Array &amp;<span class=\"keyword\">operator</span>=(<span class=\"type\">const</span> Array&amp; p)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;赋值运算符重载调用&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        size = p.size;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (element != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">delete</span>[] element;</span><br><span class=\"line\">                element = <span class=\"literal\">NULL</span>;\t</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                element = <span class=\"keyword\">new</span> T[p.size];</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; p.size; i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    element[i] = p.element[i];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">friend</span> istream &amp;<span class=\"keyword\">operator</span>&gt;&gt;(istream &amp;input,Array&amp; inarray)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; inarray.size; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            input &gt;&gt; inarray.element[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> input;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> ostream &amp;<span class=\"keyword\">operator</span>&lt;&lt;(ostream &amp; output,Array outarray)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;outarray.size ; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            output &lt;&lt; outarray.element[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">mysort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt; size;j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (element[i] &gt; element[j])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    T temp;</span><br><span class=\"line\">                    temp = element[i];</span><br><span class=\"line\">                    element[i] = element[j];</span><br><span class=\"line\">                    element[j] = temp;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        cout &lt;&lt; *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> id;</span><br><span class=\"line\">    string name;</span><br><span class=\"line\">    <span class=\"type\">int</span> grade;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">bool</span> <span class=\"keyword\">operator</span> &gt;(student&amp; s2)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>-&gt;grade &gt; s2.grade ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> ostream&amp; <span class=\"keyword\">operator</span> &lt;&lt;(ostream&amp; out, student&amp; st)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        out &lt;&lt; st.id;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> out;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> istream&amp; <span class=\"keyword\">operator</span> &gt;&gt;(istream&amp; in, student&amp; st)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        in&gt;&gt;st.id&gt;&gt;st.name&gt;&gt;st.grade;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> in;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"type\">int</span> num; cin &gt;&gt; num;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">Array&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">intnum</span><span class=\"params\">(num)</span></span>;</span><br><span class=\"line\">        cin &gt;&gt; intnum;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">Array&lt;<span class=\"type\">double</span>&gt; <span class=\"title\">doublenum</span><span class=\"params\">(num)</span></span>;</span><br><span class=\"line\">        cin &gt;&gt; doublenum;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">Array&lt;<span class=\"type\">char</span>&gt; <span class=\"title\">charnum</span><span class=\"params\">(num)</span></span>;</span><br><span class=\"line\">        cin &gt;&gt; charnum;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">Array&lt;student&gt; <span class=\"title\">stnum</span><span class=\"params\">(num)</span></span>;</span><br><span class=\"line\">        cin &gt;&gt; stnum;</span><br><span class=\"line\"></span><br><span class=\"line\">        intnum.<span class=\"built_in\">mysort</span>();</span><br><span class=\"line\">        </span><br><span class=\"line\">        doublenum.<span class=\"built_in\">mysort</span>();</span><br><span class=\"line\">        charnum.<span class=\"built_in\">mysort</span>();</span><br><span class=\"line\">        stnum.<span class=\"built_in\">mysort</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>代码其实还蛮简单的哈，就是让你创建一个模板数组类，这个类里面有输入输出还有排序，然后分别处理下int double char和student的排序就行。</p>\n<p>其实我的问题一开始也不是析构函数这出问题了，一开始的问题在于，输出函数忘了加引用了，因此导致了一系列的问题。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">friend</span> ostream &amp;<span class=\"keyword\">operator</span>&lt;&lt;(ostream &amp; output,Array outarray)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;outarray.size ; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            output &lt;&lt; outarray.element[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>但是我一开始也没有意识到，所以咱们来看看如果这里不加引用会发生什么，然后引出咱们今天的主角C++三原则</p>\n<p>首先我们知道按引用传递和按值传递的区别，按引用传递函数体内用到的还是原来的值，按值传递的话，编译器会先给你创造一个临时变量，然后把要传输的值复制给临时变量，既然说到复制了，那自然得想到拷贝构造函数，没错这个复制过程正是通过拷贝构造函数实现的，大家执行代码可以发现输出如下</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">3</span> <span class=\"number\">2</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">1.2</span> <span class=\"number\">1.1</span> <span class=\"number\">1.3</span></span><br><span class=\"line\">c b a</span><br><span class=\"line\"><span class=\"number\">10000</span> zhao <span class=\"number\">92</span></span><br><span class=\"line\"><span class=\"number\">20000</span> li <span class=\"number\">93</span></span><br><span class=\"line\"><span class=\"number\">30000</span> zhao <span class=\"number\">94</span></span><br><span class=\"line\">拷贝构造函数调用</span><br><span class=\"line\"><span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> 析构函数调用</span><br><span class=\"line\"></span><br><span class=\"line\">拷贝构造函数调用</span><br><span class=\"line\"><span class=\"number\">1.1</span> <span class=\"number\">1.2</span> <span class=\"number\">1.3</span> 析构函数调用</span><br><span class=\"line\"></span><br><span class=\"line\">拷贝构造函数调用</span><br><span class=\"line\">a b c 析构函数调用</span><br><span class=\"line\"></span><br><span class=\"line\">拷贝构造函数调用</span><br><span class=\"line\"><span class=\"number\">10000</span> <span class=\"number\">20000</span> <span class=\"number\">30000</span> 析构函数调用</span><br><span class=\"line\"></span><br><span class=\"line\">析构函数调用</span><br><span class=\"line\">析构函数调用</span><br><span class=\"line\">析构函数调用</span><br><span class=\"line\">析构函数调用</span><br></pre></td></tr></table></figure>\n<p>没错，在每一次进行输出前，都会调用一次拷贝构造函数，在执行输出后还要调用一次析构函数，这个析构函数也很好理解，临时变量需要删掉嘛，自然需要析构一下。</p>\n<p>但这个时候问题来了，如果我们一开始没有定义拷贝构造函数，那么就会用编译器提供的默认拷贝构造函数来使用，但是默认的拷贝构造是潜拷贝，这就导致了临时变量没有new 一个新内存，而是直接指向原来变量的地址。</p>\n<p>那么这个时候问题就出了，既然临时变量指向的内存就是原始数据的内存，那么，临时变量的析构函数岂不是直接把原始数据给析构了？</p>\n<p>但这个时候原始数据还没有到达生命周期，于是乎原始数据自己到达生命周期时忽然发现，wc我居然已经没了？于是这个时候就出现了异常。</p>\n<p>这也就引出了我们今天的主角————C++三原则</p>\n<h2 id=\"需要析构函数的类也需要拷贝构造函数和拷贝赋值函数\"><a href=\"#需要析构函数的类也需要拷贝构造函数和拷贝赋值函数\" class=\"headerlink\" title=\"需要析构函数的类也需要拷贝构造函数和拷贝赋值函数\"></a>需要析构函数的类也需要拷贝构造函数和拷贝赋值函数</h2><h2 id=\"需要拷贝操作的类也需要赋值操作，反之亦然\"><a href=\"#需要拷贝操作的类也需要赋值操作，反之亦然\" class=\"headerlink\" title=\"需要拷贝操作的类也需要赋值操作，反之亦然\"></a>需要拷贝操作的类也需要赋值操作，反之亦然</h2><h2 id=\"析构函数不能是私有的\"><a href=\"#析构函数不能是私有的\" class=\"headerlink\" title=\"析构函数不能是私有的\"></a>析构函数不能是私有的</h2><p>这三个思想呢大概就是个啥意思捏，用到析构函数，证明用到堆中的内存，一旦涉及堆中的内存，原来的默认浅拷贝这个时候就失效了，需要我们手工写一个深拷贝来表示。</p>\n"},{"title":"vscode 配置unity代码无法自动补全问题的解决","date":"2023-04-27T02:07:59.000Z","top_img":"https://xinzhuobu.com/wp-content/uploads/2022/06/20220611004.jpg","_content":"\n不会还有人用vscode配置unity环境时最后出现代码无法自动补全的问题吧，本人就是这样………直接上手unity，开写代码时候才发现没有代码补全……于是就悲剧了，调整了两天才终于找到解决方法……  \n\n因此写这篇文章来告诉大家怎么解决这种问题，帮大家节省一点时间。  \n\n首先先吐槽一下某度和CSDN，屎山里觅食不是吹的，我搜了两天，愣是没找到对的解决方法，结果一用谷歌，头几个就是可行的方法。  \n\n## 下面首先介绍几种CSDN里的解决办法\n\n打开 Unity，在 Unity 编辑器中点击 Edit -> Preferences -> External Tools\n\n第一行 External Script Editor，选择 Visual Studio Code，如果没有的话点 Browse…，找到 VSCode 的程序即可（不知道在哪里的话找到 VSCode 的任意一个快捷方式，右键，属性，打开文件位置）。\n\n### 在 VSCode 中安装必要的插件  \n\n打开 VSCode，在界面左侧的五个图标中找到 Extensions（最下面那个，找不到的话按快捷键Ctrl+Shift+X），如果你用 C# 写脚本的话搜索并安装这两个扩展：\n\n* C#\n* Debbuger for Unity\n\n### 为什么没有代码补全  \n\n很有可能是因为 1.1.4 版本的 Visual Studio Code Editor 不会自动生成 .csproj 文件，所以按照以下步骤生成即可：\n\n在 Unity 中点击 Window -> Package Manager\n找到 Visual Studio Code Editor，点击左侧小箭头，点击 See all versions\n将其升级为最新版本（目前最新版本是 1.2.1）\n重启 Unity\n点击 Edit -> Preferences -> External Tools\n将 Generate .csproj files for 下方的所有文件都勾上\n点击 Regenerate project files\n新建一个脚本，会发现代码补全出现了\n\n# 当然以上方法在我的情况下没什么用罢了\n\n## 实际的问题在于 是否安装了合适版本.NET Framework  \n\n按照错误提示，点进.NET的下载网站，下载一个要求的版本的SDK安装就ok了（这里注意，必须是要安装要求的版本，不是最新版本哦）。  \n\n不过肯定有同学对于配置环境这种事情一脸懵逼（比如我），因此我还是给大家准备了傻瓜式的解决办法。  \n\n首先我们需要知道一点，下载unity的时候，正常情况下unity会帮我们配置VS环境的，但现在没有代码补全，问题就出在我们以前可能下载过VS环境，并且在下载这个环境时没有添加unity配置（比如只添加了C++配置）这个时候unity下载时会检测到我们已经有VS环境了，就不会给我们自动配置了，这就需要我们自己手动操作。  \n\n不过手动操作对于小白来说确实难了点，所以我给出了自动和半自动的解决方法。\n* 自动\n卸载unity和VS重新下载unity自动生成一切需要的配置。\n* 半自动\n打开VS，点击创建新项目，在下载需要拓展的页面把和unity和C#有关的全部勾选，重新启动unity(亲测有效，vs和vscode都可以补全代码了)\n","source":"_posts/cscode-配置unity代码无法自动补全问题的解决.md","raw":"---\ntitle: vscode 配置unity代码无法自动补全问题的解决\ndate: 2023-04-27 10:07:59\ntags: [Unity2D,环境配置,游戏,C#]\ncategories: \n- [游戏引擎,unity,2D]\ntop_img: https://xinzhuobu.com/wp-content/uploads/2022/06/20220611004.jpg\n---\n\n不会还有人用vscode配置unity环境时最后出现代码无法自动补全的问题吧，本人就是这样………直接上手unity，开写代码时候才发现没有代码补全……于是就悲剧了，调整了两天才终于找到解决方法……  \n\n因此写这篇文章来告诉大家怎么解决这种问题，帮大家节省一点时间。  \n\n首先先吐槽一下某度和CSDN，屎山里觅食不是吹的，我搜了两天，愣是没找到对的解决方法，结果一用谷歌，头几个就是可行的方法。  \n\n## 下面首先介绍几种CSDN里的解决办法\n\n打开 Unity，在 Unity 编辑器中点击 Edit -> Preferences -> External Tools\n\n第一行 External Script Editor，选择 Visual Studio Code，如果没有的话点 Browse…，找到 VSCode 的程序即可（不知道在哪里的话找到 VSCode 的任意一个快捷方式，右键，属性，打开文件位置）。\n\n### 在 VSCode 中安装必要的插件  \n\n打开 VSCode，在界面左侧的五个图标中找到 Extensions（最下面那个，找不到的话按快捷键Ctrl+Shift+X），如果你用 C# 写脚本的话搜索并安装这两个扩展：\n\n* C#\n* Debbuger for Unity\n\n### 为什么没有代码补全  \n\n很有可能是因为 1.1.4 版本的 Visual Studio Code Editor 不会自动生成 .csproj 文件，所以按照以下步骤生成即可：\n\n在 Unity 中点击 Window -> Package Manager\n找到 Visual Studio Code Editor，点击左侧小箭头，点击 See all versions\n将其升级为最新版本（目前最新版本是 1.2.1）\n重启 Unity\n点击 Edit -> Preferences -> External Tools\n将 Generate .csproj files for 下方的所有文件都勾上\n点击 Regenerate project files\n新建一个脚本，会发现代码补全出现了\n\n# 当然以上方法在我的情况下没什么用罢了\n\n## 实际的问题在于 是否安装了合适版本.NET Framework  \n\n按照错误提示，点进.NET的下载网站，下载一个要求的版本的SDK安装就ok了（这里注意，必须是要安装要求的版本，不是最新版本哦）。  \n\n不过肯定有同学对于配置环境这种事情一脸懵逼（比如我），因此我还是给大家准备了傻瓜式的解决办法。  \n\n首先我们需要知道一点，下载unity的时候，正常情况下unity会帮我们配置VS环境的，但现在没有代码补全，问题就出在我们以前可能下载过VS环境，并且在下载这个环境时没有添加unity配置（比如只添加了C++配置）这个时候unity下载时会检测到我们已经有VS环境了，就不会给我们自动配置了，这就需要我们自己手动操作。  \n\n不过手动操作对于小白来说确实难了点，所以我给出了自动和半自动的解决方法。\n* 自动\n卸载unity和VS重新下载unity自动生成一切需要的配置。\n* 半自动\n打开VS，点击创建新项目，在下载需要拓展的页面把和unity和C#有关的全部勾选，重新启动unity(亲测有效，vs和vscode都可以补全代码了)\n","slug":"cscode-配置unity代码无法自动补全问题的解决","published":1,"updated":"2023-04-27T10:18:56.735Z","_id":"clgyio1y900005kdybwt16mmz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>不会还有人用vscode配置unity环境时最后出现代码无法自动补全的问题吧，本人就是这样………直接上手unity，开写代码时候才发现没有代码补全……于是就悲剧了，调整了两天才终于找到解决方法……  </p>\n<p>因此写这篇文章来告诉大家怎么解决这种问题，帮大家节省一点时间。  </p>\n<p>首先先吐槽一下某度和CSDN，屎山里觅食不是吹的，我搜了两天，愣是没找到对的解决方法，结果一用谷歌，头几个就是可行的方法。  </p>\n<h2 id=\"下面首先介绍几种CSDN里的解决办法\"><a href=\"#下面首先介绍几种CSDN里的解决办法\" class=\"headerlink\" title=\"下面首先介绍几种CSDN里的解决办法\"></a>下面首先介绍几种CSDN里的解决办法</h2><p>打开 Unity，在 Unity 编辑器中点击 Edit -&gt; Preferences -&gt; External Tools</p>\n<p>第一行 External Script Editor，选择 Visual Studio Code，如果没有的话点 Browse…，找到 VSCode 的程序即可（不知道在哪里的话找到 VSCode 的任意一个快捷方式，右键，属性，打开文件位置）。</p>\n<h3 id=\"在-VSCode-中安装必要的插件\"><a href=\"#在-VSCode-中安装必要的插件\" class=\"headerlink\" title=\"在 VSCode 中安装必要的插件\"></a>在 VSCode 中安装必要的插件</h3><p>打开 VSCode，在界面左侧的五个图标中找到 Extensions（最下面那个，找不到的话按快捷键Ctrl+Shift+X），如果你用 C# 写脚本的话搜索并安装这两个扩展：</p>\n<ul>\n<li>C#</li>\n<li>Debbuger for Unity</li>\n</ul>\n<h3 id=\"为什么没有代码补全\"><a href=\"#为什么没有代码补全\" class=\"headerlink\" title=\"为什么没有代码补全\"></a>为什么没有代码补全</h3><p>很有可能是因为 1.1.4 版本的 Visual Studio Code Editor 不会自动生成 .csproj 文件，所以按照以下步骤生成即可：</p>\n<p>在 Unity 中点击 Window -&gt; Package Manager<br>找到 Visual Studio Code Editor，点击左侧小箭头，点击 See all versions<br>将其升级为最新版本（目前最新版本是 1.2.1）<br>重启 Unity<br>点击 Edit -&gt; Preferences -&gt; External Tools<br>将 Generate .csproj files for 下方的所有文件都勾上<br>点击 Regenerate project files<br>新建一个脚本，会发现代码补全出现了</p>\n<h1 id=\"当然以上方法在我的情况下没什么用罢了\"><a href=\"#当然以上方法在我的情况下没什么用罢了\" class=\"headerlink\" title=\"当然以上方法在我的情况下没什么用罢了\"></a>当然以上方法在我的情况下没什么用罢了</h1><h2 id=\"实际的问题在于-是否安装了合适版本-NET-Framework\"><a href=\"#实际的问题在于-是否安装了合适版本-NET-Framework\" class=\"headerlink\" title=\"实际的问题在于 是否安装了合适版本.NET Framework\"></a>实际的问题在于 是否安装了合适版本.NET Framework</h2><p>按照错误提示，点进.NET的下载网站，下载一个要求的版本的SDK安装就ok了（这里注意，必须是要安装要求的版本，不是最新版本哦）。  </p>\n<p>不过肯定有同学对于配置环境这种事情一脸懵逼（比如我），因此我还是给大家准备了傻瓜式的解决办法。  </p>\n<p>首先我们需要知道一点，下载unity的时候，正常情况下unity会帮我们配置VS环境的，但现在没有代码补全，问题就出在我们以前可能下载过VS环境，并且在下载这个环境时没有添加unity配置（比如只添加了C++配置）这个时候unity下载时会检测到我们已经有VS环境了，就不会给我们自动配置了，这就需要我们自己手动操作。  </p>\n<p>不过手动操作对于小白来说确实难了点，所以我给出了自动和半自动的解决方法。</p>\n<ul>\n<li>自动<br>卸载unity和VS重新下载unity自动生成一切需要的配置。</li>\n<li>半自动<br>打开VS，点击创建新项目，在下载需要拓展的页面把和unity和C#有关的全部勾选，重新启动unity(亲测有效，vs和vscode都可以补全代码了)</li>\n</ul>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>不会还有人用vscode配置unity环境时最后出现代码无法自动补全的问题吧，本人就是这样………直接上手unity，开写代码时候才发现没有代码补全……于是就悲剧了，调整了两天才终于找到解决方法……  </p>\n<p>因此写这篇文章来告诉大家怎么解决这种问题，帮大家节省一点时间。  </p>\n<p>首先先吐槽一下某度和CSDN，屎山里觅食不是吹的，我搜了两天，愣是没找到对的解决方法，结果一用谷歌，头几个就是可行的方法。  </p>\n<h2 id=\"下面首先介绍几种CSDN里的解决办法\"><a href=\"#下面首先介绍几种CSDN里的解决办法\" class=\"headerlink\" title=\"下面首先介绍几种CSDN里的解决办法\"></a>下面首先介绍几种CSDN里的解决办法</h2><p>打开 Unity，在 Unity 编辑器中点击 Edit -&gt; Preferences -&gt; External Tools</p>\n<p>第一行 External Script Editor，选择 Visual Studio Code，如果没有的话点 Browse…，找到 VSCode 的程序即可（不知道在哪里的话找到 VSCode 的任意一个快捷方式，右键，属性，打开文件位置）。</p>\n<h3 id=\"在-VSCode-中安装必要的插件\"><a href=\"#在-VSCode-中安装必要的插件\" class=\"headerlink\" title=\"在 VSCode 中安装必要的插件\"></a>在 VSCode 中安装必要的插件</h3><p>打开 VSCode，在界面左侧的五个图标中找到 Extensions（最下面那个，找不到的话按快捷键Ctrl+Shift+X），如果你用 C# 写脚本的话搜索并安装这两个扩展：</p>\n<ul>\n<li>C#</li>\n<li>Debbuger for Unity</li>\n</ul>\n<h3 id=\"为什么没有代码补全\"><a href=\"#为什么没有代码补全\" class=\"headerlink\" title=\"为什么没有代码补全\"></a>为什么没有代码补全</h3><p>很有可能是因为 1.1.4 版本的 Visual Studio Code Editor 不会自动生成 .csproj 文件，所以按照以下步骤生成即可：</p>\n<p>在 Unity 中点击 Window -&gt; Package Manager<br>找到 Visual Studio Code Editor，点击左侧小箭头，点击 See all versions<br>将其升级为最新版本（目前最新版本是 1.2.1）<br>重启 Unity<br>点击 Edit -&gt; Preferences -&gt; External Tools<br>将 Generate .csproj files for 下方的所有文件都勾上<br>点击 Regenerate project files<br>新建一个脚本，会发现代码补全出现了</p>\n<h1 id=\"当然以上方法在我的情况下没什么用罢了\"><a href=\"#当然以上方法在我的情况下没什么用罢了\" class=\"headerlink\" title=\"当然以上方法在我的情况下没什么用罢了\"></a>当然以上方法在我的情况下没什么用罢了</h1><h2 id=\"实际的问题在于-是否安装了合适版本-NET-Framework\"><a href=\"#实际的问题在于-是否安装了合适版本-NET-Framework\" class=\"headerlink\" title=\"实际的问题在于 是否安装了合适版本.NET Framework\"></a>实际的问题在于 是否安装了合适版本.NET Framework</h2><p>按照错误提示，点进.NET的下载网站，下载一个要求的版本的SDK安装就ok了（这里注意，必须是要安装要求的版本，不是最新版本哦）。  </p>\n<p>不过肯定有同学对于配置环境这种事情一脸懵逼（比如我），因此我还是给大家准备了傻瓜式的解决办法。  </p>\n<p>首先我们需要知道一点，下载unity的时候，正常情况下unity会帮我们配置VS环境的，但现在没有代码补全，问题就出在我们以前可能下载过VS环境，并且在下载这个环境时没有添加unity配置（比如只添加了C++配置）这个时候unity下载时会检测到我们已经有VS环境了，就不会给我们自动配置了，这就需要我们自己手动操作。  </p>\n<p>不过手动操作对于小白来说确实难了点，所以我给出了自动和半自动的解决方法。</p>\n<ul>\n<li>自动<br>卸载unity和VS重新下载unity自动生成一切需要的配置。</li>\n<li>半自动<br>打开VS，点击创建新项目，在下载需要拓展的页面把和unity和C#有关的全部勾选，重新启动unity(亲测有效，vs和vscode都可以补全代码了)</li>\n</ul>\n"},{"title":"如何用unity与git远程协作","date":"2023-05-03T05:27:27.000Z","_content":"","source":"_posts/如何用unity与git远程协作.md","raw":"---\ntitle: 如何用unity与git远程协作\ndate: 2023-05-03 13:27:27\ntags:\n---\n","slug":"如何用unity与git远程协作","published":1,"updated":"2023-05-03T05:27:27.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clh79bbpj0000r8dy5njiez8g","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"JAVA联机五子棋（二）多用户网络通讯实例——多用户群聊","date":"2023-12-23T16:59:48.000Z","_content":"# 多用户网络通讯实例——多用户群聊\n\n在实现五子棋之前我们先来熟悉一下适用于多用户的网络通讯。\n![屏幕截图 2023-12-24 113957.png](https://s2.loli.net/2023/12/25/wYDpmCsSJuFt5Rf.png)\n首先我们来想一下，我们需要用几个线程吧，\n首先是服务端，服务端需要几个线程呢，肯定是有几个用户就有几个线程，毕竟服务端要时刻准备接受客户端传来的消息（当然这种阻塞式的线程管理方法，在用户数量大的情况下自然是行不通的，毕竟没有服务器能跑几千几万个线程，这是就要用到JAVA专门用于这类操作的类库了）\n\n<br>\n然后考虑客户端，客户端需要几个线程呢，答案是两个，客户端的网络模块主要有两个部分的功能，一个是接手消息，另一个就是发送消息，因此我们要写一个SendThread,一个ReciveThread.\n\n<br>\n这时就有同学想要问了，为什么服务端不需要像客户端那样写发消息手消息两个线程呢，是因为服务端的收发消息都是同时进行的，收到一个立马发送掉，随收随发，因此它并不需要一个消息队列，也就不需要一个专门发消息的线程。\n\n<br>\n而客户端呢，客户端的收消息和发消息并不是同时进行的，客户端时刻可能收到消息，也时刻可能发送消息，这些都是不能预测的，因此必须用两个线程来接受和发送。\n\n# 定义传输信息类\n\n```java\npackage mail;\n\nimport java.io.Serializable;\n\npublic class Message implements Serializable {\n    private static final long serialVersionUID = 1L;\n    public String username;\n    public String content;\n    public String time;\n\n    public Message(String username,String content,String time){\n        super();\n        this.username=username;\n        this.content=content;\n        this.time=time;\n\n    }\n\n    public Message()\n    {\n        super();\n    }\n\n}\n\n```\n\n# 服务端实例\n\n```java\npackage mail;\n\nimport mail.Message;\n\nimport java.io.*;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.util.LinkedList;\n\npublic class Server {\n    public Server(){}\n    public static void main(String[] arg) throws IOException {\n\n\n        ServerSocket ss = new ServerSocket(8080);\n\n        int num = 1;\n        int userID=0;\n        System.out.println(\"正在连接中……\");\n\n        while (true) {\n            Socket s = ss.accept();\n            ServerThread newServerThtear=new ServerThread(s);\n            newServerThtear.start();\n\n            System.out.println(\"新用户加入,当前在线用户\"+num+\"人\");\n            num++;\n        }\n\n    }\n\n\n\n}\n```\n\n# 服务端线程\n\n```java\nclass ServerThread extends Thread{\n\n    private Socket s;\n    private String username;\n    private ObjectInputStream ois;\n    private ObjectOutputStream oos;\n\n    public static LinkedList<ObjectOutputStream>online=new LinkedList<ObjectOutputStream>();\n\n\n\n    public ServerThread(Socket s){\n        super();\n        this.s=s;\n    }\n    public void run(){\n\n\n        try {\n\n            ois = new ObjectInputStream(s.getInputStream());\n            oos = new ObjectOutputStream(s.getOutputStream());\n            online.addLast(oos);\n\n\n            while(true)\n            {\n                Message msg=(Message)ois.readObject();\n\n                System.out.println(msg.time+\"\\n\"+msg.username+\":\"+msg.content);\n                for(ObjectOutputStream on:online)\n                {\n                    on.writeObject(msg);\n                }\n            }\n\n\n\n\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n\n\n    }\n}\n```\n\n# 客户端实例（使用了Swing）\n\n```java\npackage mail;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.*;\nimport java.net.Socket;\nimport java.net.UnknownHostException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.LinkedList;\n\n\nimport static java.lang.System.out;\n\n\npublic class Client {\n\n    private JFrame mainFrame;\n    private JTextField username;\n    private JScrollPane statusLabel;\n    private JPanel controlPanel;\n    public JTextArea show;\n    private static Client client=new Client();\n\n    public static LinkedList<Message> sendMessage=new LinkedList<Message>();\n\n   private     Client(){\n              prepareGUI();\n\n\n        }\n        public static  Client getClient()\n        {\n            return client;\n        }\n\n\n\n    private void prepareGUI(){\n        mainFrame = new JFrame(\"Java Swing JTextArea示例\");\n        mainFrame.setSize(400,400);\n        mainFrame.setLayout(new GridLayout(3, 1));\n\n        mainFrame.addWindowListener(new WindowAdapter() {\n            public void windowClosing(WindowEvent windowEvent){\n                System.exit(0);\n            }\n        });\n        username=new JTextField(20);\n        show=new JTextArea(20,20);\n        statusLabel=new JScrollPane(show);\n\n        controlPanel = new JPanel();\n        controlPanel.setLayout(new FlowLayout());\n\n        mainFrame.add(username,BorderLayout.NORTH);\n        mainFrame.add(statusLabel,BorderLayout.CENTER);\n        mainFrame.add(controlPanel,BorderLayout.SOUTH);\n\n        mainFrame.setVisible(true);\n    }\n\n\n\n\n\n    public static void main(String[] args) {\n\n\n\n        Client client=Client.getClient();\n\n        SimpleDateFormat sdf = new SimpleDateFormat();// 格式化时间\n        sdf.applyPattern(\"HH:mm:ss a\");// a为am/pm的标记\n        Date date = new Date();// 获取当前时间\n\n\n        try {\n            Socket s = new Socket(\"localhost\",8080);\n            ObjectOutputStream os=new ObjectOutputStream(s.getOutputStream());\n            ObjectInputStream is=new ObjectInputStream(s.getInputStream());\n\n\n\n\n\n\n            client.username.setText(\"新用户\");\n            JLabel  commentlabel= new JLabel(\"发送: \", JLabel.RIGHT);\n\n            JTextArea commentTextArea =\n                    new JTextArea(\"你好\",3,20);\n\n            JScrollPane scrollPane = new JScrollPane(commentTextArea);\n            JButton showButton = new JButton(\"发送\");\n\n            showButton.addActionListener(new ActionListener() {\n                public void actionPerformed(ActionEvent e) {\n                    Message msg=new Message(client.username.getText(),commentTextArea.getText(),sdf.format(date));\n                    out.println(client.username.getText());\n                    client.sendMessage.addLast(msg);\n                    System.out.println(client.sendMessage.size());\n\n                }\n            });\n            client.controlPanel.add(commentlabel);\n            client.controlPanel.add(scrollPane);\n            client.controlPanel.add(showButton);\n            client.mainFrame.setVisible(true);\n\n            SendThread sendThread=new SendThread(os,client.username.getText());\n            ReciveThread reciveThread=new ReciveThread(is);\n\n            sendThread.start();\n            reciveThread.start();\n\n\n        } catch (UnknownHostException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n}\n\n```\n\n# 客户端Receive线程\n\n```java\n\npackage mail;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\n\npublic class ReciveThread extends Thread{\n\n    private ObjectInputStream ois;\n    private volatile boolean flag = true;\n\n    public ReciveThread(ObjectInputStream ois) {\n                 super();\n                 this.ois = ois;\n            }\n  public void run() {\n        while(true)\n        {\n\n            System.out.println(\"111\");\n            Message rmsg= null;\n            try {\n                rmsg = (Message)ois.readObject();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            } catch (ClassNotFoundException e) {\n                throw new RuntimeException(e);\n            }\n\n                System.out.println(rmsg.time + \"\\n\" + rmsg.username + \":\" + rmsg.content);\n                Client.getClient().show.append(rmsg.time + \"\\n\" + rmsg.username + \":\" + rmsg.content + \"\\n\");\n\n        }\n\n  }\n}\n\n\n```\n\n# 客户端Send线程\n\n```java\npackage mail;\n\nimport java.io.IOException;\nimport java.io.ObjectOutputStream;\n\npublic class SendThread extends Thread {\nprivate ObjectOutputStream os;\nprivate String username;\npublic SendThread(ObjectOutputStream os,String username)\n{\n    super();\n    this.os=os;\n    this.username=username;\n}\n\npublic void run()\n{\n\n    try {\n\n\n        while(true)\n        {\n\n            if(!Client.getClient().sendMessage.isEmpty())\n            {\n                System.out.println(\"111\");\n\n                Message msg=Client.getClient().sendMessage.getFirst();\n\n                    os.writeObject(msg);\n                    Client.getClient().sendMessage.removeFirst();\n\n                }\n            }\n        }catch (IOException e) {\n        throw new RuntimeException(e);\n\n}\n}\n\n\n}\n\n```\n","source":"_posts/JAVA联机五子棋（二）.md","raw":"---\ntitle: JAVA联机五子棋（二）多用户网络通讯实例——多用户群聊\ndate: 2023-12-24 00:59:48\ntags:\n---\n# 多用户网络通讯实例——多用户群聊\n\n在实现五子棋之前我们先来熟悉一下适用于多用户的网络通讯。\n![屏幕截图 2023-12-24 113957.png](https://s2.loli.net/2023/12/25/wYDpmCsSJuFt5Rf.png)\n首先我们来想一下，我们需要用几个线程吧，\n首先是服务端，服务端需要几个线程呢，肯定是有几个用户就有几个线程，毕竟服务端要时刻准备接受客户端传来的消息（当然这种阻塞式的线程管理方法，在用户数量大的情况下自然是行不通的，毕竟没有服务器能跑几千几万个线程，这是就要用到JAVA专门用于这类操作的类库了）\n\n<br>\n然后考虑客户端，客户端需要几个线程呢，答案是两个，客户端的网络模块主要有两个部分的功能，一个是接手消息，另一个就是发送消息，因此我们要写一个SendThread,一个ReciveThread.\n\n<br>\n这时就有同学想要问了，为什么服务端不需要像客户端那样写发消息手消息两个线程呢，是因为服务端的收发消息都是同时进行的，收到一个立马发送掉，随收随发，因此它并不需要一个消息队列，也就不需要一个专门发消息的线程。\n\n<br>\n而客户端呢，客户端的收消息和发消息并不是同时进行的，客户端时刻可能收到消息，也时刻可能发送消息，这些都是不能预测的，因此必须用两个线程来接受和发送。\n\n# 定义传输信息类\n\n```java\npackage mail;\n\nimport java.io.Serializable;\n\npublic class Message implements Serializable {\n    private static final long serialVersionUID = 1L;\n    public String username;\n    public String content;\n    public String time;\n\n    public Message(String username,String content,String time){\n        super();\n        this.username=username;\n        this.content=content;\n        this.time=time;\n\n    }\n\n    public Message()\n    {\n        super();\n    }\n\n}\n\n```\n\n# 服务端实例\n\n```java\npackage mail;\n\nimport mail.Message;\n\nimport java.io.*;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.util.LinkedList;\n\npublic class Server {\n    public Server(){}\n    public static void main(String[] arg) throws IOException {\n\n\n        ServerSocket ss = new ServerSocket(8080);\n\n        int num = 1;\n        int userID=0;\n        System.out.println(\"正在连接中……\");\n\n        while (true) {\n            Socket s = ss.accept();\n            ServerThread newServerThtear=new ServerThread(s);\n            newServerThtear.start();\n\n            System.out.println(\"新用户加入,当前在线用户\"+num+\"人\");\n            num++;\n        }\n\n    }\n\n\n\n}\n```\n\n# 服务端线程\n\n```java\nclass ServerThread extends Thread{\n\n    private Socket s;\n    private String username;\n    private ObjectInputStream ois;\n    private ObjectOutputStream oos;\n\n    public static LinkedList<ObjectOutputStream>online=new LinkedList<ObjectOutputStream>();\n\n\n\n    public ServerThread(Socket s){\n        super();\n        this.s=s;\n    }\n    public void run(){\n\n\n        try {\n\n            ois = new ObjectInputStream(s.getInputStream());\n            oos = new ObjectOutputStream(s.getOutputStream());\n            online.addLast(oos);\n\n\n            while(true)\n            {\n                Message msg=(Message)ois.readObject();\n\n                System.out.println(msg.time+\"\\n\"+msg.username+\":\"+msg.content);\n                for(ObjectOutputStream on:online)\n                {\n                    on.writeObject(msg);\n                }\n            }\n\n\n\n\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n\n\n    }\n}\n```\n\n# 客户端实例（使用了Swing）\n\n```java\npackage mail;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.*;\nimport java.net.Socket;\nimport java.net.UnknownHostException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.LinkedList;\n\n\nimport static java.lang.System.out;\n\n\npublic class Client {\n\n    private JFrame mainFrame;\n    private JTextField username;\n    private JScrollPane statusLabel;\n    private JPanel controlPanel;\n    public JTextArea show;\n    private static Client client=new Client();\n\n    public static LinkedList<Message> sendMessage=new LinkedList<Message>();\n\n   private     Client(){\n              prepareGUI();\n\n\n        }\n        public static  Client getClient()\n        {\n            return client;\n        }\n\n\n\n    private void prepareGUI(){\n        mainFrame = new JFrame(\"Java Swing JTextArea示例\");\n        mainFrame.setSize(400,400);\n        mainFrame.setLayout(new GridLayout(3, 1));\n\n        mainFrame.addWindowListener(new WindowAdapter() {\n            public void windowClosing(WindowEvent windowEvent){\n                System.exit(0);\n            }\n        });\n        username=new JTextField(20);\n        show=new JTextArea(20,20);\n        statusLabel=new JScrollPane(show);\n\n        controlPanel = new JPanel();\n        controlPanel.setLayout(new FlowLayout());\n\n        mainFrame.add(username,BorderLayout.NORTH);\n        mainFrame.add(statusLabel,BorderLayout.CENTER);\n        mainFrame.add(controlPanel,BorderLayout.SOUTH);\n\n        mainFrame.setVisible(true);\n    }\n\n\n\n\n\n    public static void main(String[] args) {\n\n\n\n        Client client=Client.getClient();\n\n        SimpleDateFormat sdf = new SimpleDateFormat();// 格式化时间\n        sdf.applyPattern(\"HH:mm:ss a\");// a为am/pm的标记\n        Date date = new Date();// 获取当前时间\n\n\n        try {\n            Socket s = new Socket(\"localhost\",8080);\n            ObjectOutputStream os=new ObjectOutputStream(s.getOutputStream());\n            ObjectInputStream is=new ObjectInputStream(s.getInputStream());\n\n\n\n\n\n\n            client.username.setText(\"新用户\");\n            JLabel  commentlabel= new JLabel(\"发送: \", JLabel.RIGHT);\n\n            JTextArea commentTextArea =\n                    new JTextArea(\"你好\",3,20);\n\n            JScrollPane scrollPane = new JScrollPane(commentTextArea);\n            JButton showButton = new JButton(\"发送\");\n\n            showButton.addActionListener(new ActionListener() {\n                public void actionPerformed(ActionEvent e) {\n                    Message msg=new Message(client.username.getText(),commentTextArea.getText(),sdf.format(date));\n                    out.println(client.username.getText());\n                    client.sendMessage.addLast(msg);\n                    System.out.println(client.sendMessage.size());\n\n                }\n            });\n            client.controlPanel.add(commentlabel);\n            client.controlPanel.add(scrollPane);\n            client.controlPanel.add(showButton);\n            client.mainFrame.setVisible(true);\n\n            SendThread sendThread=new SendThread(os,client.username.getText());\n            ReciveThread reciveThread=new ReciveThread(is);\n\n            sendThread.start();\n            reciveThread.start();\n\n\n        } catch (UnknownHostException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n}\n\n```\n\n# 客户端Receive线程\n\n```java\n\npackage mail;\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\n\npublic class ReciveThread extends Thread{\n\n    private ObjectInputStream ois;\n    private volatile boolean flag = true;\n\n    public ReciveThread(ObjectInputStream ois) {\n                 super();\n                 this.ois = ois;\n            }\n  public void run() {\n        while(true)\n        {\n\n            System.out.println(\"111\");\n            Message rmsg= null;\n            try {\n                rmsg = (Message)ois.readObject();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            } catch (ClassNotFoundException e) {\n                throw new RuntimeException(e);\n            }\n\n                System.out.println(rmsg.time + \"\\n\" + rmsg.username + \":\" + rmsg.content);\n                Client.getClient().show.append(rmsg.time + \"\\n\" + rmsg.username + \":\" + rmsg.content + \"\\n\");\n\n        }\n\n  }\n}\n\n\n```\n\n# 客户端Send线程\n\n```java\npackage mail;\n\nimport java.io.IOException;\nimport java.io.ObjectOutputStream;\n\npublic class SendThread extends Thread {\nprivate ObjectOutputStream os;\nprivate String username;\npublic SendThread(ObjectOutputStream os,String username)\n{\n    super();\n    this.os=os;\n    this.username=username;\n}\n\npublic void run()\n{\n\n    try {\n\n\n        while(true)\n        {\n\n            if(!Client.getClient().sendMessage.isEmpty())\n            {\n                System.out.println(\"111\");\n\n                Message msg=Client.getClient().sendMessage.getFirst();\n\n                    os.writeObject(msg);\n                    Client.getClient().sendMessage.removeFirst();\n\n                }\n            }\n        }catch (IOException e) {\n        throw new RuntimeException(e);\n\n}\n}\n\n\n}\n\n```\n","slug":"JAVA联机五子棋（二）","published":1,"updated":"2023-12-25T13:06:06.298Z","_id":"clqib30xq0000ncdy259o38la","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"多用户网络通讯实例——多用户群聊\"><a href=\"#多用户网络通讯实例——多用户群聊\" class=\"headerlink\" title=\"多用户网络通讯实例——多用户群聊\"></a>多用户网络通讯实例——多用户群聊</h1><p>在实现五子棋之前我们先来熟悉一下适用于多用户的网络通讯。<br><img src=\"https://s2.loli.net/2023/12/25/wYDpmCsSJuFt5Rf.png\" alt=\"屏幕截图 2023-12-24 113957.png\"><br>首先我们来想一下，我们需要用几个线程吧，<br>首先是服务端，服务端需要几个线程呢，肯定是有几个用户就有几个线程，毕竟服务端要时刻准备接受客户端传来的消息（当然这种阻塞式的线程管理方法，在用户数量大的情况下自然是行不通的，毕竟没有服务器能跑几千几万个线程，这是就要用到JAVA专门用于这类操作的类库了）</p>\n<br>\n然后考虑客户端，客户端需要几个线程呢，答案是两个，客户端的网络模块主要有两个部分的功能，一个是接手消息，另一个就是发送消息，因此我们要写一个SendThread,一个ReciveThread.\n\n<br>\n这时就有同学想要问了，为什么服务端不需要像客户端那样写发消息手消息两个线程呢，是因为服务端的收发消息都是同时进行的，收到一个立马发送掉，随收随发，因此它并不需要一个消息队列，也就不需要一个专门发消息的线程。\n\n<br>\n而客户端呢，客户端的收消息和发消息并不是同时进行的，客户端时刻可能收到消息，也时刻可能发送消息，这些都是不能预测的，因此必须用两个线程来接受和发送。\n\n<h1 id=\"定义传输信息类\"><a href=\"#定义传输信息类\" class=\"headerlink\" title=\"定义传输信息类\"></a>定义传输信息类</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mail;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Message</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String content;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String time;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String username,String content,String time)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username=username;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.content=content;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.time=time;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"服务端实例\"><a href=\"#服务端实例\" class=\"headerlink\" title=\"服务端实例\"></a>服务端实例</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mail;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> mail.Message;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Server</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] arg)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">ServerSocket</span> <span class=\"variable\">ss</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">8080</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> userID=<span class=\"number\">0</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;正在连接中……&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> ss.accept();</span><br><span class=\"line\">            ServerThread newServerThtear=<span class=\"keyword\">new</span> <span class=\"title class_\">ServerThread</span>(s);</span><br><span class=\"line\">            newServerThtear.start();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;新用户加入,当前在线用户&quot;</span>+num+<span class=\"string\">&quot;人&quot;</span>);</span><br><span class=\"line\">            num++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"服务端线程\"><a href=\"#服务端线程\" class=\"headerlink\" title=\"服务端线程\"></a>服务端线程</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ServerThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Socket s;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectInputStream ois;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectOutputStream oos;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LinkedList&lt;ObjectOutputStream&gt;online=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;ObjectOutputStream&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ServerThread</span><span class=\"params\">(Socket s)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.s=s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            ois = <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectInputStream</span>(s.getInputStream());</span><br><span class=\"line\">            oos = <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectOutputStream</span>(s.getOutputStream());</span><br><span class=\"line\">            online.addLast(oos);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Message msg=(Message)ois.readObject();</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(msg.time+<span class=\"string\">&quot;\\n&quot;</span>+msg.username+<span class=\"string\">&quot;:&quot;</span>+msg.content);</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(ObjectOutputStream on:online)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    on.writeObject(msg);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"客户端实例（使用了Swing）\"><a href=\"#客户端实例（使用了Swing）\" class=\"headerlink\" title=\"客户端实例（使用了Swing）\"></a>客户端实例（使用了Swing）</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mail;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.UnknownHostException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> java.lang.System.out;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JFrame mainFrame;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JTextField username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JScrollPane statusLabel;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JPanel controlPanel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> JTextArea show;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Client client=<span class=\"keyword\">new</span> <span class=\"title class_\">Client</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LinkedList&lt;Message&gt; sendMessage=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;Message&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">private</span>     <span class=\"title function_\">Client</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">              prepareGUI();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span>  Client <span class=\"title function_\">getClient</span><span class=\"params\">()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> client;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">prepareGUI</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        mainFrame = <span class=\"keyword\">new</span> <span class=\"title class_\">JFrame</span>(<span class=\"string\">&quot;Java Swing JTextArea示例&quot;</span>);</span><br><span class=\"line\">        mainFrame.setSize(<span class=\"number\">400</span>,<span class=\"number\">400</span>);</span><br><span class=\"line\">        mainFrame.setLayout(<span class=\"keyword\">new</span> <span class=\"title class_\">GridLayout</span>(<span class=\"number\">3</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        mainFrame.addWindowListener(<span class=\"keyword\">new</span> <span class=\"title class_\">WindowAdapter</span>() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">windowClosing</span><span class=\"params\">(WindowEvent windowEvent)</span>&#123;</span><br><span class=\"line\">                System.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        username=<span class=\"keyword\">new</span> <span class=\"title class_\">JTextField</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">        show=<span class=\"keyword\">new</span> <span class=\"title class_\">JTextArea</span>(<span class=\"number\">20</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        statusLabel=<span class=\"keyword\">new</span> <span class=\"title class_\">JScrollPane</span>(show);</span><br><span class=\"line\"></span><br><span class=\"line\">        controlPanel = <span class=\"keyword\">new</span> <span class=\"title class_\">JPanel</span>();</span><br><span class=\"line\">        controlPanel.setLayout(<span class=\"keyword\">new</span> <span class=\"title class_\">FlowLayout</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">        mainFrame.add(username,BorderLayout.NORTH);</span><br><span class=\"line\">        mainFrame.add(statusLabel,BorderLayout.CENTER);</span><br><span class=\"line\">        mainFrame.add(controlPanel,BorderLayout.SOUTH);</span><br><span class=\"line\"></span><br><span class=\"line\">        mainFrame.setVisible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        Client client=Client.getClient();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">SimpleDateFormat</span> <span class=\"variable\">sdf</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>();<span class=\"comment\">// 格式化时间</span></span><br><span class=\"line\">        sdf.applyPattern(<span class=\"string\">&quot;HH:mm:ss a&quot;</span>);<span class=\"comment\">// a为am/pm的标记</span></span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();<span class=\"comment\">// 获取当前时间</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(<span class=\"string\">&quot;localhost&quot;</span>,<span class=\"number\">8080</span>);</span><br><span class=\"line\">            ObjectOutputStream os=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectOutputStream</span>(s.getOutputStream());</span><br><span class=\"line\">            ObjectInputStream is=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectInputStream</span>(s.getInputStream());</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            client.username.setText(<span class=\"string\">&quot;新用户&quot;</span>);</span><br><span class=\"line\">            JLabel  commentlabel= <span class=\"keyword\">new</span> <span class=\"title class_\">JLabel</span>(<span class=\"string\">&quot;发送: &quot;</span>, JLabel.RIGHT);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JTextArea</span> <span class=\"variable\">commentTextArea</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                    <span class=\"keyword\">new</span> <span class=\"title class_\">JTextArea</span>(<span class=\"string\">&quot;你好&quot;</span>,<span class=\"number\">3</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JScrollPane</span> <span class=\"variable\">scrollPane</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JScrollPane</span>(commentTextArea);</span><br><span class=\"line\">            <span class=\"type\">JButton</span> <span class=\"variable\">showButton</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JButton</span>(<span class=\"string\">&quot;发送&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            showButton.addActionListener(<span class=\"keyword\">new</span> <span class=\"title class_\">ActionListener</span>() &#123;</span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">                    Message msg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(client.username.getText(),commentTextArea.getText(),sdf.format(date));</span><br><span class=\"line\">                    out.println(client.username.getText());</span><br><span class=\"line\">                    client.sendMessage.addLast(msg);</span><br><span class=\"line\">                    System.out.println(client.sendMessage.size());</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            client.controlPanel.add(commentlabel);</span><br><span class=\"line\">            client.controlPanel.add(scrollPane);</span><br><span class=\"line\">            client.controlPanel.add(showButton);</span><br><span class=\"line\">            client.mainFrame.setVisible(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            SendThread sendThread=<span class=\"keyword\">new</span> <span class=\"title class_\">SendThread</span>(os,client.username.getText());</span><br><span class=\"line\">            ReciveThread reciveThread=<span class=\"keyword\">new</span> <span class=\"title class_\">ReciveThread</span>(is);</span><br><span class=\"line\"></span><br><span class=\"line\">            sendThread.start();</span><br><span class=\"line\">            reciveThread.start();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"客户端Receive线程\"><a href=\"#客户端Receive线程\" class=\"headerlink\" title=\"客户端Receive线程\"></a>客户端Receive线程</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> mail;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ReciveThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectInputStream ois;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ReciveThread</span><span class=\"params\">(ObjectInputStream ois)</span> &#123;</span><br><span class=\"line\">                 <span class=\"built_in\">super</span>();</span><br><span class=\"line\">                 <span class=\"built_in\">this</span>.ois = ois;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;111&quot;</span>);</span><br><span class=\"line\">            Message rmsg= <span class=\"literal\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                rmsg = (Message)ois.readObject();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(rmsg.time + <span class=\"string\">&quot;\\n&quot;</span> + rmsg.username + <span class=\"string\">&quot;:&quot;</span> + rmsg.content);</span><br><span class=\"line\">                Client.getClient().show.append(rmsg.time + <span class=\"string\">&quot;\\n&quot;</span> + rmsg.username + <span class=\"string\">&quot;:&quot;</span> + rmsg.content + <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"客户端Send线程\"><a href=\"#客户端Send线程\" class=\"headerlink\" title=\"客户端Send线程\"></a>客户端Send线程</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mail;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectOutputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SendThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span> ObjectOutputStream os;</span><br><span class=\"line\"><span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">SendThread</span><span class=\"params\">(ObjectOutputStream os,String username)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>();</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.os=os;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.username=username;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!Client.getClient().sendMessage.isEmpty())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;111&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                Message msg=Client.getClient().sendMessage.getFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">                    os.writeObject(msg);</span><br><span class=\"line\">                    Client.getClient().sendMessage.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"多用户网络通讯实例——多用户群聊\"><a href=\"#多用户网络通讯实例——多用户群聊\" class=\"headerlink\" title=\"多用户网络通讯实例——多用户群聊\"></a>多用户网络通讯实例——多用户群聊</h1><p>在实现五子棋之前我们先来熟悉一下适用于多用户的网络通讯。<br><img src=\"https://s2.loli.net/2023/12/25/wYDpmCsSJuFt5Rf.png\" alt=\"屏幕截图 2023-12-24 113957.png\"><br>首先我们来想一下，我们需要用几个线程吧，<br>首先是服务端，服务端需要几个线程呢，肯定是有几个用户就有几个线程，毕竟服务端要时刻准备接受客户端传来的消息（当然这种阻塞式的线程管理方法，在用户数量大的情况下自然是行不通的，毕竟没有服务器能跑几千几万个线程，这是就要用到JAVA专门用于这类操作的类库了）</p>\n<br>\n然后考虑客户端，客户端需要几个线程呢，答案是两个，客户端的网络模块主要有两个部分的功能，一个是接手消息，另一个就是发送消息，因此我们要写一个SendThread,一个ReciveThread.\n\n<br>\n这时就有同学想要问了，为什么服务端不需要像客户端那样写发消息手消息两个线程呢，是因为服务端的收发消息都是同时进行的，收到一个立马发送掉，随收随发，因此它并不需要一个消息队列，也就不需要一个专门发消息的线程。\n\n<br>\n而客户端呢，客户端的收消息和发消息并不是同时进行的，客户端时刻可能收到消息，也时刻可能发送消息，这些都是不能预测的，因此必须用两个线程来接受和发送。\n\n<h1 id=\"定义传输信息类\"><a href=\"#定义传输信息类\" class=\"headerlink\" title=\"定义传输信息类\"></a>定义传输信息类</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mail;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Message</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String content;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String time;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String username,String content,String time)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username=username;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.content=content;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.time=time;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"服务端实例\"><a href=\"#服务端实例\" class=\"headerlink\" title=\"服务端实例\"></a>服务端实例</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mail;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> mail.Message;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Server</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] arg)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">ServerSocket</span> <span class=\"variable\">ss</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">8080</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> userID=<span class=\"number\">0</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;正在连接中……&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> ss.accept();</span><br><span class=\"line\">            ServerThread newServerThtear=<span class=\"keyword\">new</span> <span class=\"title class_\">ServerThread</span>(s);</span><br><span class=\"line\">            newServerThtear.start();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;新用户加入,当前在线用户&quot;</span>+num+<span class=\"string\">&quot;人&quot;</span>);</span><br><span class=\"line\">            num++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"服务端线程\"><a href=\"#服务端线程\" class=\"headerlink\" title=\"服务端线程\"></a>服务端线程</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ServerThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Socket s;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectInputStream ois;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectOutputStream oos;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LinkedList&lt;ObjectOutputStream&gt;online=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;ObjectOutputStream&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ServerThread</span><span class=\"params\">(Socket s)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.s=s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            ois = <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectInputStream</span>(s.getInputStream());</span><br><span class=\"line\">            oos = <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectOutputStream</span>(s.getOutputStream());</span><br><span class=\"line\">            online.addLast(oos);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Message msg=(Message)ois.readObject();</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(msg.time+<span class=\"string\">&quot;\\n&quot;</span>+msg.username+<span class=\"string\">&quot;:&quot;</span>+msg.content);</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(ObjectOutputStream on:online)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    on.writeObject(msg);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"客户端实例（使用了Swing）\"><a href=\"#客户端实例（使用了Swing）\" class=\"headerlink\" title=\"客户端实例（使用了Swing）\"></a>客户端实例（使用了Swing）</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mail;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.UnknownHostException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> java.lang.System.out;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JFrame mainFrame;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JTextField username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JScrollPane statusLabel;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JPanel controlPanel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> JTextArea show;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Client client=<span class=\"keyword\">new</span> <span class=\"title class_\">Client</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LinkedList&lt;Message&gt; sendMessage=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;Message&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">private</span>     <span class=\"title function_\">Client</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">              prepareGUI();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span>  Client <span class=\"title function_\">getClient</span><span class=\"params\">()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> client;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">prepareGUI</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        mainFrame = <span class=\"keyword\">new</span> <span class=\"title class_\">JFrame</span>(<span class=\"string\">&quot;Java Swing JTextArea示例&quot;</span>);</span><br><span class=\"line\">        mainFrame.setSize(<span class=\"number\">400</span>,<span class=\"number\">400</span>);</span><br><span class=\"line\">        mainFrame.setLayout(<span class=\"keyword\">new</span> <span class=\"title class_\">GridLayout</span>(<span class=\"number\">3</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        mainFrame.addWindowListener(<span class=\"keyword\">new</span> <span class=\"title class_\">WindowAdapter</span>() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">windowClosing</span><span class=\"params\">(WindowEvent windowEvent)</span>&#123;</span><br><span class=\"line\">                System.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        username=<span class=\"keyword\">new</span> <span class=\"title class_\">JTextField</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">        show=<span class=\"keyword\">new</span> <span class=\"title class_\">JTextArea</span>(<span class=\"number\">20</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        statusLabel=<span class=\"keyword\">new</span> <span class=\"title class_\">JScrollPane</span>(show);</span><br><span class=\"line\"></span><br><span class=\"line\">        controlPanel = <span class=\"keyword\">new</span> <span class=\"title class_\">JPanel</span>();</span><br><span class=\"line\">        controlPanel.setLayout(<span class=\"keyword\">new</span> <span class=\"title class_\">FlowLayout</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">        mainFrame.add(username,BorderLayout.NORTH);</span><br><span class=\"line\">        mainFrame.add(statusLabel,BorderLayout.CENTER);</span><br><span class=\"line\">        mainFrame.add(controlPanel,BorderLayout.SOUTH);</span><br><span class=\"line\"></span><br><span class=\"line\">        mainFrame.setVisible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        Client client=Client.getClient();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">SimpleDateFormat</span> <span class=\"variable\">sdf</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>();<span class=\"comment\">// 格式化时间</span></span><br><span class=\"line\">        sdf.applyPattern(<span class=\"string\">&quot;HH:mm:ss a&quot;</span>);<span class=\"comment\">// a为am/pm的标记</span></span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();<span class=\"comment\">// 获取当前时间</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(<span class=\"string\">&quot;localhost&quot;</span>,<span class=\"number\">8080</span>);</span><br><span class=\"line\">            ObjectOutputStream os=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectOutputStream</span>(s.getOutputStream());</span><br><span class=\"line\">            ObjectInputStream is=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectInputStream</span>(s.getInputStream());</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            client.username.setText(<span class=\"string\">&quot;新用户&quot;</span>);</span><br><span class=\"line\">            JLabel  commentlabel= <span class=\"keyword\">new</span> <span class=\"title class_\">JLabel</span>(<span class=\"string\">&quot;发送: &quot;</span>, JLabel.RIGHT);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JTextArea</span> <span class=\"variable\">commentTextArea</span> <span class=\"operator\">=</span></span><br><span class=\"line\">                    <span class=\"keyword\">new</span> <span class=\"title class_\">JTextArea</span>(<span class=\"string\">&quot;你好&quot;</span>,<span class=\"number\">3</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">JScrollPane</span> <span class=\"variable\">scrollPane</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JScrollPane</span>(commentTextArea);</span><br><span class=\"line\">            <span class=\"type\">JButton</span> <span class=\"variable\">showButton</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JButton</span>(<span class=\"string\">&quot;发送&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            showButton.addActionListener(<span class=\"keyword\">new</span> <span class=\"title class_\">ActionListener</span>() &#123;</span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">                    Message msg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(client.username.getText(),commentTextArea.getText(),sdf.format(date));</span><br><span class=\"line\">                    out.println(client.username.getText());</span><br><span class=\"line\">                    client.sendMessage.addLast(msg);</span><br><span class=\"line\">                    System.out.println(client.sendMessage.size());</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            client.controlPanel.add(commentlabel);</span><br><span class=\"line\">            client.controlPanel.add(scrollPane);</span><br><span class=\"line\">            client.controlPanel.add(showButton);</span><br><span class=\"line\">            client.mainFrame.setVisible(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            SendThread sendThread=<span class=\"keyword\">new</span> <span class=\"title class_\">SendThread</span>(os,client.username.getText());</span><br><span class=\"line\">            ReciveThread reciveThread=<span class=\"keyword\">new</span> <span class=\"title class_\">ReciveThread</span>(is);</span><br><span class=\"line\"></span><br><span class=\"line\">            sendThread.start();</span><br><span class=\"line\">            reciveThread.start();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"客户端Receive线程\"><a href=\"#客户端Receive线程\" class=\"headerlink\" title=\"客户端Receive线程\"></a>客户端Receive线程</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> mail;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ReciveThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectInputStream ois;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ReciveThread</span><span class=\"params\">(ObjectInputStream ois)</span> &#123;</span><br><span class=\"line\">                 <span class=\"built_in\">super</span>();</span><br><span class=\"line\">                 <span class=\"built_in\">this</span>.ois = ois;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;111&quot;</span>);</span><br><span class=\"line\">            Message rmsg= <span class=\"literal\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                rmsg = (Message)ois.readObject();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(rmsg.time + <span class=\"string\">&quot;\\n&quot;</span> + rmsg.username + <span class=\"string\">&quot;:&quot;</span> + rmsg.content);</span><br><span class=\"line\">                Client.getClient().show.append(rmsg.time + <span class=\"string\">&quot;\\n&quot;</span> + rmsg.username + <span class=\"string\">&quot;:&quot;</span> + rmsg.content + <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"客户端Send线程\"><a href=\"#客户端Send线程\" class=\"headerlink\" title=\"客户端Send线程\"></a>客户端Send线程</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mail;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectOutputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SendThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span> ObjectOutputStream os;</span><br><span class=\"line\"><span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">SendThread</span><span class=\"params\">(ObjectOutputStream os,String username)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>();</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.os=os;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.username=username;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!Client.getClient().sendMessage.isEmpty())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;111&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                Message msg=Client.getClient().sendMessage.getFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">                    os.writeObject(msg);</span><br><span class=\"line\">                    Client.getClient().sendMessage.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"JAVA 联机五子棋（三）","date":"2023-12-24T04:34:22.000Z","_content":"\n# MVC模式\n\n现在我们先不来考虑联机的部分，单纯只考虑五子棋如何实现的，这里用MVC设计模式来实现\n\n## 什么是MVC\n\n### 模型（Model）\n\n模型代表应用程序的数据和业务逻辑。它负责处理数据的存储、检索、更新和验证，同时也包括定义应用程序的业务规则。模型与用户界面和用户交互无关，使得数据的处理可以独立于视图和控制器。\n\n### 视图（View）\n\n视图是用户界面的表示，负责显示数据并将用户的输入传递给控制器。视图接收模型的数据并以某种形式（例如图形界面、命令行界面）呈现给用户。视图通常不包含业务逻辑，而只负责呈现数据。\n\n### 控制器（Controller）\n\n控制器是模型和视图之间的协调者。它接收用户的输入，根据输入更新模型的数据，并相应地更新视图。控制器负责将用户输入转换为对模型的操作，并通知视图更新以反映模型的变化。控制器使模型和视图能够相互独立工作，提高了系统的灵活性。\n\n### MVC模式的工作流程通常如下\n\n- 用户与视图进行交互。\n- 视图将用户的输入传递给控制器。\n- 控制器根据用户输入对模型进行相应的操作。\n- 模型更新后，通知控制器。\n- 控制器通知视图更新，以反映模型的变化。\n- 视图更新后等待用户下一次交互。\n\n## View\n\n我们来看我们的View部分，View部分主要由两部分组成，一部分是棋盘的主题部分BorderPanel，另一部分是周围的按钮等即toolPanel。\n\n<br>\n设置背景图和棋子图片。\n\n```java\n Image background=((Image) new ImageIcon(\"src/pic/backgroun.png\").getImage());\n\n    Image chess1=((Image) new ImageIcon(\"src/pic/chess1.png\").getImage());\n    Image chess2=((Image) new ImageIcon(\"src/pic/chess2.png\").getImage());\n```\n\n为面板提供交互操作。\n\n```java\npublic ChessPanel(){\n            this.setPreferredSize(new Dimension(800,800));\n            this.addMouseMotionListener(new MouseMotionAdapter() {\n                @Override\n                public void mouseDragged(MouseEvent e) {\n                    super.mouseDragged(e);\n                    tempPoint=e.getPoint();\n\n                    repaint();\n                }\n            });\n            \n            this.setBackground(Color.decode(\"#000816\"));\n            this.addMouseListener(new MouseListener() {\n                @Override\n                public void mouseClicked(MouseEvent e) {\n                    System.out.println(e.getPoint().x+\"\"+e.getPoint().y);\n                    try {\n                        Vars.controler.addChess(e.getPoint());\n                    } catch (IOException ex) {\n                        throw new RuntimeException(ex);\n                    }\n                }\n                @Override\n                public void mousePressed(MouseEvent e) {\n\n                }\n\n                @Override\n                public void mouseReleased(MouseEvent e) {\n                    try {\n                        Vars.controler.addChess(e.getPoint());\n                    } catch (IOException ex) {\n                        throw new RuntimeException(ex);\n                    }\n                    tempPoint.x=10000;\n                    tempPoint.y=10000;\n                }\n                @Override\n                public void mouseEntered(MouseEvent e) {\n\n                }\n\n                @Override\n                public void mouseExited(MouseEvent e) {\n\n                }\n            });\n\n    }\n```\n\n绘图模块，画线和画棋子\n\n```java\nprotected  void drawtempchess(Graphics g)\n    {\n        int cellWidth = Vars.chessPanel.getWidth() / 20;\n        int cellHeight = Vars.chessPanel.getHeight() / 20;\n        int x,y;\n        x= tempPoint.x/cellWidth;\n        y= tempPoint.y/cellHeight;\n        System.out.println(x+\" \"+y);\n        if(Vars.controler.getColor()){\n            g.drawImage(chess1,cellWidth/2+cellWidth*x,cellWidth/2+cellWidth*y,cellWidth,cellHeight,this);\n        }\n        else{\n            g.drawImage(chess2,cellWidth/2+cellWidth*x,cellWidth/2+cellWidth*y,cellWidth,cellHeight,this);\n        }\n\n    }\n\n    protected void paintComponent(Graphics g) {\n        super.paintComponent(g);\n        g.drawImage(background,0,0,this.getWidth(),this.getHeight(),this);\n        System.out.println(background.getHeight(this));\n\n\n        int cellWidth = getWidth() / 20;\n        int cellHeight = getHeight() / 20;\n        ((Graphics2D)g).setStroke(new BasicStroke(3));\n       for(int i=0;i<19;i++)\n       {\n           g.setColor(Color.decode(\"#0fa99a\"));\n           g.drawLine(cellWidth,cellWidth*(i+1),cellWidth*(19),cellWidth*(i+1));\n           g.drawLine(cellWidth*(i+1),cellWidth,cellWidth*(i+1),cellWidth*(19));\n       }\n\n        if(Vars.controler.turnyou)drawtempchess(g);\n        LinkedList<chess> data=Vars.model.getModel();\n       for(chess chess:data)\n       {\n           if(chess.color){\n               g.drawImage(chess1,cellWidth/2+cellWidth*chess.x,cellWidth/2+cellWidth*chess.y,cellWidth,cellHeight,this);\n           }\n           else{\n               g.drawImage(chess2,cellWidth/2+cellWidth*chess.x,cellWidth/2+cellWidth*chess.y,cellWidth,cellHeight,this);\n           }\n\n       }\n\n    }\n```\n\n### Model模块\n\n接下来我们看model模块该怎么写，首先我们想我们的视图需要反应模型，那么模型储存这什么呢，就是我们的棋盘数据，将整个棋盘以一个19X19的矩阵存入Model。但是光这样是不行的，应为我们会发现如果这么存的话，我们只知道棋盘上当前的情况，但却不知道这些棋子的顺序，如果这样的话，我们就无法实现我们的悔棋功能了，所以我们需要一个队列容器来记录每一步的棋子都下在了哪里。\n\n<br>\n\n然后我们再次可以提前考虑一下我们之后的联机模块，我们的联机是要与不同的对手对抗的，记录对手的信息以是必要的，还有双方之间的网络消息队列，也可以放在Model模块里\n\n```java\nimport java.util.LinkedList;\n\npublic class Model {\n    private LinkedList<chess> model=new LinkedList<>();\n\n    public LinkedList<user> userList=null;\n\n    public  LinkedList<Message>messageModel=new LinkedList<Message>();\n\n    public String username;\n\n    public int enemyID=-1;\n\n    public String enemyname;\n\n    public int ID;\n\n    private int[][]board=new int[22][22];\n\n\n    public void addChess(int x,int y,boolean color)\n    {\n\n            chess newChess = new chess(x, y, color);\n            model.add(newChess);\n            if (color)\n                board[x][y] = 1;\n            else\n                board[x][y] = 2;\n\n    }\n\n    public  void removeChess()\n    {\n        board[model.getLast().x][model.getLast().y]=0;\n        model.removeLast();\n\n    }\n\n    public LinkedList<chess> getModel()\n    {\n        return  model;\n    }\n\n    public int[][] getboard()\n    {\n        return board;\n    }\n\n    public int getboard(int x,int y)\n    {\n        return board[x][y];\n    }\n\n    public void clear(){\n        while(!model.isEmpty())\n        {\n            model.removeLast();\n        }\n        for(int i=0;i<22;i++)\n            for(int j=0;j<22;j++)\n            board[i][j]=0;\n    }\n\n\n\n\n\n}\nclass chess{\n    boolean color;\n    int x;\n    int y;\n    chess(int x,int y,boolean color)\n\n    {\n        this.x=x;\n        this.y=y;\n        this.color=color;\n    }\n}\n```\n\n### Controller模块\n\nController 中包括了游戏中所有的操作函数接口。首先我们来分析一下项目中的一些操作需求\n\n#### “下棋”操作\n\n下棋应该是项目中最为基本的内容，下棋需要将棋子存入Model,还需要向对手发送消息，告知对手自己下在了哪一步。\n\n```java\n    public void addChess(Point point) throws IOException {\n        if(turnyou) {\n\n            int cellWidth = Vars.chessPanel.getWidth() / 20;\n            int cellHeight = Vars.chessPanel.getHeight() / 20;\n            int x, y;\n            x = point.x / cellWidth;\n            y = point.y / cellHeight;\n            System.out.println(x + \" \" + y);\n            if (Vars.model.getboard(x, y) == 0) {\n\n                Vars.model.addChess(x, y, chessColor);\n                if (chessColor) {\n                    chessColor = false;\n                } else {\n                    chessColor = true;\n                }\n                Vars.chessPanel.repaint();\n\n               Message msg=new Message(\"chess\",x,y,chessColor);\n               Vars.model.messageModel.addLast(msg);\n                turnyou = false;\n                Vars.timePanel.restart();\n                Vars.roundPanel.update();\n                judgement();\n            }\n        }\n\n    }\n```\n\n#### “对手下棋”操作\n\n同样，我们还需要执行对手下棋的操作，这两个步骤可不可以混合在一起？其实可以，但这样会是代码的可读性变差，而且回合的切换也会没有那么流畅。\n\n```java\npublic void addNetChess(int x,int y) {\n\n        System.out.println(x + \" \" + y);\n        if (Vars.model.getboard(x, y) == 0) {\n\n            Vars.model.addChess(x, y, chessColor);\n            if (chessColor) {\n                chessColor = false;\n            } else {\n                chessColor = true;\n            }\n            Vars.chessPanel.repaint();\n            turnyou=true;\n            Vars.timePanel.restart();\n            Vars.roundPanel.update();\n            judgement();\n\n        }\n    }\n```\n\n#### “判断胜负”操作\n\n判断胜利： 在每次有玩家落子后，都需要检查是否有一方取得了胜利。检查的方法通常包括检查每个落子位置的水平、垂直、左上到右下、右上到左下四个方向上是否有连续的五个相同的棋子。\n\n- 水平检查： 从左到右检查每一行是否有连续的五个相同的棋子。\n- 垂直检查： 从上到下检查每一列是否有连续的五个相同的棋子。\n- 左上到右下检查： 从左上角到右下角检查斜线上是否有连续的五个相同的棋子。\n- 右上到左下检查： 从右上角到左下角检查斜线上是否有连续的五个相同的棋子。\n\n```java\n public  void judgement() {\n            // 示例输入\n            int[][] chessboard = Vars.model.getboard();  // 初始化一个21x21的棋盘，初始值都为0\n\n            int winner = checkWinner(chessboard);\n            if (winner == 1) {\n                System.out.println(\"白棋获胜！\");\n               Vars.dialogStyle.Gameover(Start.getStart(),\"白棋获胜\");\n               \n            } else if (winner == 2) {\n                System.out.println(\"黑棋获胜！\");\n                Vars.dialogStyle.Gameover(Start.getStart(),\"黑棋获胜\");\n\n            } else {\n                System.out.println(\"游戏尚未结束，或者平局！\");\n            }\n        }\n\n        public int checkWinner(int[][] chessboard) {\n            // 检查每一行\n            for (int i = 0; i < 22; i++) {\n                if (checkRow(chessboard, i) != 0) {\n                    return checkRow(chessboard, i);\n                }\n            }\n\n            // 检查每一列\n            for (int j = 0; j < 22; j++) {\n                if (checkColumn(chessboard, j) != 0) {\n                    return checkColumn(chessboard, j);\n                }\n            }\n\n            // 检查两个对角线\n            if (checkDiagonal(chessboard) != 0) {\n                return checkDiagonal(chessboard);\n            }\n\n            // 游戏尚未结束\n            return 0;\n        }\n\n        public int checkRow(int[][] chessboard, int row) {\n            for (int i = 0; i < 16; i++) {  // 因为是五子棋，所以只需检查前17个位置\n                if (chessboard[row][i] == chessboard[row][i + 1] &&\n                        chessboard[row][i + 1] == chessboard[row][i + 2] &&\n                        chessboard[row][i + 2] == chessboard[row][i + 3] &&\n                        chessboard[row][i + 3] == chessboard[row][i + 4] &&\n                        chessboard[row][i] != 0) {\n                    return chessboard[row][i];\n                }\n            }\n            return 0;\n        }\n\n        public int checkColumn(int[][] chessboard, int col) {\n            for (int i = 0; i < 16; i++) {  // 因为是五子棋，所以只需检查前17个位置\n                if (chessboard[i][col] == chessboard[i + 1][col] &&\n                        chessboard[i + 1][col] == chessboard[i + 2][col] &&\n                        chessboard[i + 2][col] == chessboard[i + 3][col] &&\n                        chessboard[i + 3][col] == chessboard[i + 4][col] &&\n                        chessboard[i][col] != 0) {\n                    return chessboard[i][col];\n                }\n            }\n            return 0;\n        }\n\n        public int checkDiagonal(int[][] chessboard) {\n            // 检查左上到右下对角线\n            for (int i = 0; i < 16; i++) {\n                for (int j = 0; j < 16; j++) {\n                    if (chessboard[i][j] == chessboard[i + 1][j + 1] &&\n                            chessboard[i + 1][j + 1] == chessboard[i + 2][j + 2] &&\n                            chessboard[i + 2][j + 2] == chessboard[i + 3][j + 3] &&\n                            chessboard[i + 3][j + 3] == chessboard[i + 4][j + 4] &&\n                            chessboard[i][j] != 0) {\n                        return chessboard[i][j];\n                    }\n                }\n            }\n\n            // 检查左下到右上对角线\n            for (int i = 0; i < 16; i++) {\n                for (int j = 4; j < 19; j++) {\n                    if (chessboard[i][j] == chessboard[i + 1][j - 1] &&\n                            chessboard[i + 1][j - 1] == chessboard[i + 2][j - 2] &&\n                            chessboard[i + 2][j - 2] == chessboard[i + 3][j - 3] &&\n                            chessboard[i + 3][j - 3] == chessboard[i + 4][j - 4] &&\n                            chessboard[i][j] != 0) {\n                        return chessboard[i][j];\n                    }\n                }\n            }\n\n            return 0;\n        }\n\n\n        public boolean getColor(){\n        return chessColor;\n        }\n\n    public void reportColor(){\n        if (chessColor) {\n            chessColor = false;\n        } else {\n            chessColor = true;\n        }\n    }\n```\n\n#### 悔棋操作\n\n悔棋和对手悔棋的操作主要的就是看是否是自己的回合，如果是自己的回合，需要需要悔棋两步，如果不是自己的回合，只需要悔棋一步，并更改下棋方。\n\n```java\npublic void back(){\n\n        if(this.Backnum>0) {\n            if(!turnyou) {\n                Vars.model.removeChess();\n                Vars.chessPanel.repaint();\n                Vars.controler.reportColor();\n                turnyou=true;\n            } else if (turnyou) {\n                Vars.model.removeChess();\n                Vars.model.removeChess();\n                Vars.chessPanel.repaint();\n\n            }\n            Backnum--;\n        }\n    }\n```\n\n#### 对手悔棋操作\n\n```java\npublic void NETback()\n    {\n        if(!turnyou) {\n            Vars.model.removeChess();\n            Vars.model.removeChess();\n            Vars.chessPanel.repaint();\n\n        } else if (turnyou) {\n\n\n            Vars.model.removeChess();\n            Vars.chessPanel.repaint();\n            Vars.controler.reportColor();\n            turnyou=false;\n        }\n    }\n```\n","source":"_posts/JAVA-联机五子棋（三）.md","raw":"---\ntitle: JAVA 联机五子棋（三）\ndate: 2023-12-24 12:34:22\ntags: JAVA\n---\n\n# MVC模式\n\n现在我们先不来考虑联机的部分，单纯只考虑五子棋如何实现的，这里用MVC设计模式来实现\n\n## 什么是MVC\n\n### 模型（Model）\n\n模型代表应用程序的数据和业务逻辑。它负责处理数据的存储、检索、更新和验证，同时也包括定义应用程序的业务规则。模型与用户界面和用户交互无关，使得数据的处理可以独立于视图和控制器。\n\n### 视图（View）\n\n视图是用户界面的表示，负责显示数据并将用户的输入传递给控制器。视图接收模型的数据并以某种形式（例如图形界面、命令行界面）呈现给用户。视图通常不包含业务逻辑，而只负责呈现数据。\n\n### 控制器（Controller）\n\n控制器是模型和视图之间的协调者。它接收用户的输入，根据输入更新模型的数据，并相应地更新视图。控制器负责将用户输入转换为对模型的操作，并通知视图更新以反映模型的变化。控制器使模型和视图能够相互独立工作，提高了系统的灵活性。\n\n### MVC模式的工作流程通常如下\n\n- 用户与视图进行交互。\n- 视图将用户的输入传递给控制器。\n- 控制器根据用户输入对模型进行相应的操作。\n- 模型更新后，通知控制器。\n- 控制器通知视图更新，以反映模型的变化。\n- 视图更新后等待用户下一次交互。\n\n## View\n\n我们来看我们的View部分，View部分主要由两部分组成，一部分是棋盘的主题部分BorderPanel，另一部分是周围的按钮等即toolPanel。\n\n<br>\n设置背景图和棋子图片。\n\n```java\n Image background=((Image) new ImageIcon(\"src/pic/backgroun.png\").getImage());\n\n    Image chess1=((Image) new ImageIcon(\"src/pic/chess1.png\").getImage());\n    Image chess2=((Image) new ImageIcon(\"src/pic/chess2.png\").getImage());\n```\n\n为面板提供交互操作。\n\n```java\npublic ChessPanel(){\n            this.setPreferredSize(new Dimension(800,800));\n            this.addMouseMotionListener(new MouseMotionAdapter() {\n                @Override\n                public void mouseDragged(MouseEvent e) {\n                    super.mouseDragged(e);\n                    tempPoint=e.getPoint();\n\n                    repaint();\n                }\n            });\n            \n            this.setBackground(Color.decode(\"#000816\"));\n            this.addMouseListener(new MouseListener() {\n                @Override\n                public void mouseClicked(MouseEvent e) {\n                    System.out.println(e.getPoint().x+\"\"+e.getPoint().y);\n                    try {\n                        Vars.controler.addChess(e.getPoint());\n                    } catch (IOException ex) {\n                        throw new RuntimeException(ex);\n                    }\n                }\n                @Override\n                public void mousePressed(MouseEvent e) {\n\n                }\n\n                @Override\n                public void mouseReleased(MouseEvent e) {\n                    try {\n                        Vars.controler.addChess(e.getPoint());\n                    } catch (IOException ex) {\n                        throw new RuntimeException(ex);\n                    }\n                    tempPoint.x=10000;\n                    tempPoint.y=10000;\n                }\n                @Override\n                public void mouseEntered(MouseEvent e) {\n\n                }\n\n                @Override\n                public void mouseExited(MouseEvent e) {\n\n                }\n            });\n\n    }\n```\n\n绘图模块，画线和画棋子\n\n```java\nprotected  void drawtempchess(Graphics g)\n    {\n        int cellWidth = Vars.chessPanel.getWidth() / 20;\n        int cellHeight = Vars.chessPanel.getHeight() / 20;\n        int x,y;\n        x= tempPoint.x/cellWidth;\n        y= tempPoint.y/cellHeight;\n        System.out.println(x+\" \"+y);\n        if(Vars.controler.getColor()){\n            g.drawImage(chess1,cellWidth/2+cellWidth*x,cellWidth/2+cellWidth*y,cellWidth,cellHeight,this);\n        }\n        else{\n            g.drawImage(chess2,cellWidth/2+cellWidth*x,cellWidth/2+cellWidth*y,cellWidth,cellHeight,this);\n        }\n\n    }\n\n    protected void paintComponent(Graphics g) {\n        super.paintComponent(g);\n        g.drawImage(background,0,0,this.getWidth(),this.getHeight(),this);\n        System.out.println(background.getHeight(this));\n\n\n        int cellWidth = getWidth() / 20;\n        int cellHeight = getHeight() / 20;\n        ((Graphics2D)g).setStroke(new BasicStroke(3));\n       for(int i=0;i<19;i++)\n       {\n           g.setColor(Color.decode(\"#0fa99a\"));\n           g.drawLine(cellWidth,cellWidth*(i+1),cellWidth*(19),cellWidth*(i+1));\n           g.drawLine(cellWidth*(i+1),cellWidth,cellWidth*(i+1),cellWidth*(19));\n       }\n\n        if(Vars.controler.turnyou)drawtempchess(g);\n        LinkedList<chess> data=Vars.model.getModel();\n       for(chess chess:data)\n       {\n           if(chess.color){\n               g.drawImage(chess1,cellWidth/2+cellWidth*chess.x,cellWidth/2+cellWidth*chess.y,cellWidth,cellHeight,this);\n           }\n           else{\n               g.drawImage(chess2,cellWidth/2+cellWidth*chess.x,cellWidth/2+cellWidth*chess.y,cellWidth,cellHeight,this);\n           }\n\n       }\n\n    }\n```\n\n### Model模块\n\n接下来我们看model模块该怎么写，首先我们想我们的视图需要反应模型，那么模型储存这什么呢，就是我们的棋盘数据，将整个棋盘以一个19X19的矩阵存入Model。但是光这样是不行的，应为我们会发现如果这么存的话，我们只知道棋盘上当前的情况，但却不知道这些棋子的顺序，如果这样的话，我们就无法实现我们的悔棋功能了，所以我们需要一个队列容器来记录每一步的棋子都下在了哪里。\n\n<br>\n\n然后我们再次可以提前考虑一下我们之后的联机模块，我们的联机是要与不同的对手对抗的，记录对手的信息以是必要的，还有双方之间的网络消息队列，也可以放在Model模块里\n\n```java\nimport java.util.LinkedList;\n\npublic class Model {\n    private LinkedList<chess> model=new LinkedList<>();\n\n    public LinkedList<user> userList=null;\n\n    public  LinkedList<Message>messageModel=new LinkedList<Message>();\n\n    public String username;\n\n    public int enemyID=-1;\n\n    public String enemyname;\n\n    public int ID;\n\n    private int[][]board=new int[22][22];\n\n\n    public void addChess(int x,int y,boolean color)\n    {\n\n            chess newChess = new chess(x, y, color);\n            model.add(newChess);\n            if (color)\n                board[x][y] = 1;\n            else\n                board[x][y] = 2;\n\n    }\n\n    public  void removeChess()\n    {\n        board[model.getLast().x][model.getLast().y]=0;\n        model.removeLast();\n\n    }\n\n    public LinkedList<chess> getModel()\n    {\n        return  model;\n    }\n\n    public int[][] getboard()\n    {\n        return board;\n    }\n\n    public int getboard(int x,int y)\n    {\n        return board[x][y];\n    }\n\n    public void clear(){\n        while(!model.isEmpty())\n        {\n            model.removeLast();\n        }\n        for(int i=0;i<22;i++)\n            for(int j=0;j<22;j++)\n            board[i][j]=0;\n    }\n\n\n\n\n\n}\nclass chess{\n    boolean color;\n    int x;\n    int y;\n    chess(int x,int y,boolean color)\n\n    {\n        this.x=x;\n        this.y=y;\n        this.color=color;\n    }\n}\n```\n\n### Controller模块\n\nController 中包括了游戏中所有的操作函数接口。首先我们来分析一下项目中的一些操作需求\n\n#### “下棋”操作\n\n下棋应该是项目中最为基本的内容，下棋需要将棋子存入Model,还需要向对手发送消息，告知对手自己下在了哪一步。\n\n```java\n    public void addChess(Point point) throws IOException {\n        if(turnyou) {\n\n            int cellWidth = Vars.chessPanel.getWidth() / 20;\n            int cellHeight = Vars.chessPanel.getHeight() / 20;\n            int x, y;\n            x = point.x / cellWidth;\n            y = point.y / cellHeight;\n            System.out.println(x + \" \" + y);\n            if (Vars.model.getboard(x, y) == 0) {\n\n                Vars.model.addChess(x, y, chessColor);\n                if (chessColor) {\n                    chessColor = false;\n                } else {\n                    chessColor = true;\n                }\n                Vars.chessPanel.repaint();\n\n               Message msg=new Message(\"chess\",x,y,chessColor);\n               Vars.model.messageModel.addLast(msg);\n                turnyou = false;\n                Vars.timePanel.restart();\n                Vars.roundPanel.update();\n                judgement();\n            }\n        }\n\n    }\n```\n\n#### “对手下棋”操作\n\n同样，我们还需要执行对手下棋的操作，这两个步骤可不可以混合在一起？其实可以，但这样会是代码的可读性变差，而且回合的切换也会没有那么流畅。\n\n```java\npublic void addNetChess(int x,int y) {\n\n        System.out.println(x + \" \" + y);\n        if (Vars.model.getboard(x, y) == 0) {\n\n            Vars.model.addChess(x, y, chessColor);\n            if (chessColor) {\n                chessColor = false;\n            } else {\n                chessColor = true;\n            }\n            Vars.chessPanel.repaint();\n            turnyou=true;\n            Vars.timePanel.restart();\n            Vars.roundPanel.update();\n            judgement();\n\n        }\n    }\n```\n\n#### “判断胜负”操作\n\n判断胜利： 在每次有玩家落子后，都需要检查是否有一方取得了胜利。检查的方法通常包括检查每个落子位置的水平、垂直、左上到右下、右上到左下四个方向上是否有连续的五个相同的棋子。\n\n- 水平检查： 从左到右检查每一行是否有连续的五个相同的棋子。\n- 垂直检查： 从上到下检查每一列是否有连续的五个相同的棋子。\n- 左上到右下检查： 从左上角到右下角检查斜线上是否有连续的五个相同的棋子。\n- 右上到左下检查： 从右上角到左下角检查斜线上是否有连续的五个相同的棋子。\n\n```java\n public  void judgement() {\n            // 示例输入\n            int[][] chessboard = Vars.model.getboard();  // 初始化一个21x21的棋盘，初始值都为0\n\n            int winner = checkWinner(chessboard);\n            if (winner == 1) {\n                System.out.println(\"白棋获胜！\");\n               Vars.dialogStyle.Gameover(Start.getStart(),\"白棋获胜\");\n               \n            } else if (winner == 2) {\n                System.out.println(\"黑棋获胜！\");\n                Vars.dialogStyle.Gameover(Start.getStart(),\"黑棋获胜\");\n\n            } else {\n                System.out.println(\"游戏尚未结束，或者平局！\");\n            }\n        }\n\n        public int checkWinner(int[][] chessboard) {\n            // 检查每一行\n            for (int i = 0; i < 22; i++) {\n                if (checkRow(chessboard, i) != 0) {\n                    return checkRow(chessboard, i);\n                }\n            }\n\n            // 检查每一列\n            for (int j = 0; j < 22; j++) {\n                if (checkColumn(chessboard, j) != 0) {\n                    return checkColumn(chessboard, j);\n                }\n            }\n\n            // 检查两个对角线\n            if (checkDiagonal(chessboard) != 0) {\n                return checkDiagonal(chessboard);\n            }\n\n            // 游戏尚未结束\n            return 0;\n        }\n\n        public int checkRow(int[][] chessboard, int row) {\n            for (int i = 0; i < 16; i++) {  // 因为是五子棋，所以只需检查前17个位置\n                if (chessboard[row][i] == chessboard[row][i + 1] &&\n                        chessboard[row][i + 1] == chessboard[row][i + 2] &&\n                        chessboard[row][i + 2] == chessboard[row][i + 3] &&\n                        chessboard[row][i + 3] == chessboard[row][i + 4] &&\n                        chessboard[row][i] != 0) {\n                    return chessboard[row][i];\n                }\n            }\n            return 0;\n        }\n\n        public int checkColumn(int[][] chessboard, int col) {\n            for (int i = 0; i < 16; i++) {  // 因为是五子棋，所以只需检查前17个位置\n                if (chessboard[i][col] == chessboard[i + 1][col] &&\n                        chessboard[i + 1][col] == chessboard[i + 2][col] &&\n                        chessboard[i + 2][col] == chessboard[i + 3][col] &&\n                        chessboard[i + 3][col] == chessboard[i + 4][col] &&\n                        chessboard[i][col] != 0) {\n                    return chessboard[i][col];\n                }\n            }\n            return 0;\n        }\n\n        public int checkDiagonal(int[][] chessboard) {\n            // 检查左上到右下对角线\n            for (int i = 0; i < 16; i++) {\n                for (int j = 0; j < 16; j++) {\n                    if (chessboard[i][j] == chessboard[i + 1][j + 1] &&\n                            chessboard[i + 1][j + 1] == chessboard[i + 2][j + 2] &&\n                            chessboard[i + 2][j + 2] == chessboard[i + 3][j + 3] &&\n                            chessboard[i + 3][j + 3] == chessboard[i + 4][j + 4] &&\n                            chessboard[i][j] != 0) {\n                        return chessboard[i][j];\n                    }\n                }\n            }\n\n            // 检查左下到右上对角线\n            for (int i = 0; i < 16; i++) {\n                for (int j = 4; j < 19; j++) {\n                    if (chessboard[i][j] == chessboard[i + 1][j - 1] &&\n                            chessboard[i + 1][j - 1] == chessboard[i + 2][j - 2] &&\n                            chessboard[i + 2][j - 2] == chessboard[i + 3][j - 3] &&\n                            chessboard[i + 3][j - 3] == chessboard[i + 4][j - 4] &&\n                            chessboard[i][j] != 0) {\n                        return chessboard[i][j];\n                    }\n                }\n            }\n\n            return 0;\n        }\n\n\n        public boolean getColor(){\n        return chessColor;\n        }\n\n    public void reportColor(){\n        if (chessColor) {\n            chessColor = false;\n        } else {\n            chessColor = true;\n        }\n    }\n```\n\n#### 悔棋操作\n\n悔棋和对手悔棋的操作主要的就是看是否是自己的回合，如果是自己的回合，需要需要悔棋两步，如果不是自己的回合，只需要悔棋一步，并更改下棋方。\n\n```java\npublic void back(){\n\n        if(this.Backnum>0) {\n            if(!turnyou) {\n                Vars.model.removeChess();\n                Vars.chessPanel.repaint();\n                Vars.controler.reportColor();\n                turnyou=true;\n            } else if (turnyou) {\n                Vars.model.removeChess();\n                Vars.model.removeChess();\n                Vars.chessPanel.repaint();\n\n            }\n            Backnum--;\n        }\n    }\n```\n\n#### 对手悔棋操作\n\n```java\npublic void NETback()\n    {\n        if(!turnyou) {\n            Vars.model.removeChess();\n            Vars.model.removeChess();\n            Vars.chessPanel.repaint();\n\n        } else if (turnyou) {\n\n\n            Vars.model.removeChess();\n            Vars.chessPanel.repaint();\n            Vars.controler.reportColor();\n            turnyou=false;\n        }\n    }\n```\n","slug":"JAVA-联机五子棋（三）","published":1,"updated":"2023-12-25T09:04:35.820Z","_id":"clqizw9730000ucdy0m2ogw1p","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"MVC模式\"><a href=\"#MVC模式\" class=\"headerlink\" title=\"MVC模式\"></a>MVC模式</h1><p>现在我们先不来考虑联机的部分，单纯只考虑五子棋如何实现的，这里用MVC设计模式来实现</p>\n<h2 id=\"什么是MVC\"><a href=\"#什么是MVC\" class=\"headerlink\" title=\"什么是MVC\"></a>什么是MVC</h2><h3 id=\"模型（Model）\"><a href=\"#模型（Model）\" class=\"headerlink\" title=\"模型（Model）\"></a>模型（Model）</h3><p>模型代表应用程序的数据和业务逻辑。它负责处理数据的存储、检索、更新和验证，同时也包括定义应用程序的业务规则。模型与用户界面和用户交互无关，使得数据的处理可以独立于视图和控制器。</p>\n<h3 id=\"视图（View）\"><a href=\"#视图（View）\" class=\"headerlink\" title=\"视图（View）\"></a>视图（View）</h3><p>视图是用户界面的表示，负责显示数据并将用户的输入传递给控制器。视图接收模型的数据并以某种形式（例如图形界面、命令行界面）呈现给用户。视图通常不包含业务逻辑，而只负责呈现数据。</p>\n<h3 id=\"控制器（Controller）\"><a href=\"#控制器（Controller）\" class=\"headerlink\" title=\"控制器（Controller）\"></a>控制器（Controller）</h3><p>控制器是模型和视图之间的协调者。它接收用户的输入，根据输入更新模型的数据，并相应地更新视图。控制器负责将用户输入转换为对模型的操作，并通知视图更新以反映模型的变化。控制器使模型和视图能够相互独立工作，提高了系统的灵活性。</p>\n<h3 id=\"MVC模式的工作流程通常如下\"><a href=\"#MVC模式的工作流程通常如下\" class=\"headerlink\" title=\"MVC模式的工作流程通常如下\"></a>MVC模式的工作流程通常如下</h3><ul>\n<li>用户与视图进行交互。</li>\n<li>视图将用户的输入传递给控制器。</li>\n<li>控制器根据用户输入对模型进行相应的操作。</li>\n<li>模型更新后，通知控制器。</li>\n<li>控制器通知视图更新，以反映模型的变化。</li>\n<li>视图更新后等待用户下一次交互。</li>\n</ul>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>我们来看我们的View部分，View部分主要由两部分组成，一部分是棋盘的主题部分BorderPanel，另一部分是周围的按钮等即toolPanel。</p>\n<br>\n设置背景图和棋子图片。\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Image background=((Image) <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(<span class=\"string\">&quot;src/pic/backgroun.png&quot;</span>).getImage());</span><br><span class=\"line\"></span><br><span class=\"line\">   Image chess1=((Image) <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(<span class=\"string\">&quot;src/pic/chess1.png&quot;</span>).getImage());</span><br><span class=\"line\">   Image chess2=((Image) <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(<span class=\"string\">&quot;src/pic/chess2.png&quot;</span>).getImage());</span><br></pre></td></tr></table></figure>\n\n<p>为面板提供交互操作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">ChessPanel</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.setPreferredSize(<span class=\"keyword\">new</span> <span class=\"title class_\">Dimension</span>(<span class=\"number\">800</span>,<span class=\"number\">800</span>));</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.addMouseMotionListener(<span class=\"keyword\">new</span> <span class=\"title class_\">MouseMotionAdapter</span>() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseDragged</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">super</span>.mouseDragged(e);</span><br><span class=\"line\">                    tempPoint=e.getPoint();</span><br><span class=\"line\"></span><br><span class=\"line\">                    repaint();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"built_in\">this</span>.setBackground(Color.decode(<span class=\"string\">&quot;#000816&quot;</span>));</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.addMouseListener(<span class=\"keyword\">new</span> <span class=\"title class_\">MouseListener</span>() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseClicked</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">                    System.out.println(e.getPoint().x+<span class=\"string\">&quot;&quot;</span>+e.getPoint().y);</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        Vars.controler.addChess(e.getPoint());</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (IOException ex) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(ex);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mousePressed</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseReleased</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        Vars.controler.addChess(e.getPoint());</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (IOException ex) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(ex);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    tempPoint.x=<span class=\"number\">10000</span>;</span><br><span class=\"line\">                    tempPoint.y=<span class=\"number\">10000</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseEntered</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseExited</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>绘图模块，画线和画棋子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">drawtempchess</span><span class=\"params\">(Graphics g)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellWidth</span> <span class=\"operator\">=</span> Vars.chessPanel.getWidth() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellHeight</span> <span class=\"operator\">=</span> Vars.chessPanel.getHeight() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> x,y;</span><br><span class=\"line\">        x= tempPoint.x/cellWidth;</span><br><span class=\"line\">        y= tempPoint.y/cellHeight;</span><br><span class=\"line\">        System.out.println(x+<span class=\"string\">&quot; &quot;</span>+y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Vars.controler.getColor())&#123;</span><br><span class=\"line\">            g.drawImage(chess1,cellWidth/<span class=\"number\">2</span>+cellWidth*x,cellWidth/<span class=\"number\">2</span>+cellWidth*y,cellWidth,cellHeight,<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            g.drawImage(chess2,cellWidth/<span class=\"number\">2</span>+cellWidth*x,cellWidth/<span class=\"number\">2</span>+cellWidth*y,cellWidth,cellHeight,<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">paintComponent</span><span class=\"params\">(Graphics g)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.paintComponent(g);</span><br><span class=\"line\">        g.drawImage(background,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"built_in\">this</span>.getWidth(),<span class=\"built_in\">this</span>.getHeight(),<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        System.out.println(background.getHeight(<span class=\"built_in\">this</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellWidth</span> <span class=\"operator\">=</span> getWidth() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellHeight</span> <span class=\"operator\">=</span> getHeight() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        ((Graphics2D)g).setStroke(<span class=\"keyword\">new</span> <span class=\"title class_\">BasicStroke</span>(<span class=\"number\">3</span>));</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">19</span>;i++)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           g.setColor(Color.decode(<span class=\"string\">&quot;#0fa99a&quot;</span>));</span><br><span class=\"line\">           g.drawLine(cellWidth,cellWidth*(i+<span class=\"number\">1</span>),cellWidth*(<span class=\"number\">19</span>),cellWidth*(i+<span class=\"number\">1</span>));</span><br><span class=\"line\">           g.drawLine(cellWidth*(i+<span class=\"number\">1</span>),cellWidth,cellWidth*(i+<span class=\"number\">1</span>),cellWidth*(<span class=\"number\">19</span>));</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Vars.controler.turnyou)drawtempchess(g);</span><br><span class=\"line\">        LinkedList&lt;chess&gt; data=Vars.model.getModel();</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(chess chess:data)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(chess.color)&#123;</span><br><span class=\"line\">               g.drawImage(chess1,cellWidth/<span class=\"number\">2</span>+cellWidth*chess.x,cellWidth/<span class=\"number\">2</span>+cellWidth*chess.y,cellWidth,cellHeight,<span class=\"built_in\">this</span>);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">               g.drawImage(chess2,cellWidth/<span class=\"number\">2</span>+cellWidth*chess.x,cellWidth/<span class=\"number\">2</span>+cellWidth*chess.y,cellWidth,cellHeight,<span class=\"built_in\">this</span>);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Model模块\"><a href=\"#Model模块\" class=\"headerlink\" title=\"Model模块\"></a>Model模块</h3><p>接下来我们看model模块该怎么写，首先我们想我们的视图需要反应模型，那么模型储存这什么呢，就是我们的棋盘数据，将整个棋盘以一个19X19的矩阵存入Model。但是光这样是不行的，应为我们会发现如果这么存的话，我们只知道棋盘上当前的情况，但却不知道这些棋子的顺序，如果这样的话，我们就无法实现我们的悔棋功能了，所以我们需要一个队列容器来记录每一步的棋子都下在了哪里。</p>\n<br>\n\n<p>然后我们再次可以提前考虑一下我们之后的联机模块，我们的联机是要与不同的对手对抗的，记录对手的信息以是必要的，还有双方之间的网络消息队列，也可以放在Model模块里</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Model</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> LinkedList&lt;chess&gt; model=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> LinkedList&lt;user&gt; userList=<span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  LinkedList&lt;Message&gt;messageModel=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;Message&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String username;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> enemyID=-<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String enemyname;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> ID;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span>[][]board=<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">22</span>][<span class=\"number\">22</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addChess</span><span class=\"params\">(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y,<span class=\"type\">boolean</span> color)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">chess</span> <span class=\"variable\">newChess</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">chess</span>(x, y, color);</span><br><span class=\"line\">            model.add(newChess);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (color)</span><br><span class=\"line\">                board[x][y] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                board[x][y] = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">removeChess</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        board[model.getLast().x][model.getLast().y]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        model.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> LinkedList&lt;chess&gt; <span class=\"title function_\">getModel</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  model;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span>[][] getboard()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> board;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getboard</span><span class=\"params\">(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> board[x][y];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">clear</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!model.isEmpty())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            model.removeLast();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">22</span>;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">22</span>;j++)</span><br><span class=\"line\">            board[i][j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">chess</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">boolean</span> color;</span><br><span class=\"line\">    <span class=\"type\">int</span> x;</span><br><span class=\"line\">    <span class=\"type\">int</span> y;</span><br><span class=\"line\">    chess(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y,<span class=\"type\">boolean</span> color)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.x=x;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.y=y;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.color=color;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Controller模块\"><a href=\"#Controller模块\" class=\"headerlink\" title=\"Controller模块\"></a>Controller模块</h3><p>Controller 中包括了游戏中所有的操作函数接口。首先我们来分析一下项目中的一些操作需求</p>\n<h4 id=\"“下棋”操作\"><a href=\"#“下棋”操作\" class=\"headerlink\" title=\"“下棋”操作\"></a>“下棋”操作</h4><p>下棋应该是项目中最为基本的内容，下棋需要将棋子存入Model,还需要向对手发送消息，告知对手自己下在了哪一步。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addChess</span><span class=\"params\">(Point point)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(turnyou) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellWidth</span> <span class=\"operator\">=</span> Vars.chessPanel.getWidth() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellHeight</span> <span class=\"operator\">=</span> Vars.chessPanel.getHeight() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> x, y;</span><br><span class=\"line\">        x = point.x / cellWidth;</span><br><span class=\"line\">        y = point.y / cellHeight;</span><br><span class=\"line\">        System.out.println(x + <span class=\"string\">&quot; &quot;</span> + y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Vars.model.getboard(x, y) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Vars.model.addChess(x, y, chessColor);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (chessColor) &#123;</span><br><span class=\"line\">                chessColor = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                chessColor = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Vars.chessPanel.repaint();</span><br><span class=\"line\"></span><br><span class=\"line\">           Message msg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(<span class=\"string\">&quot;chess&quot;</span>,x,y,chessColor);</span><br><span class=\"line\">           Vars.model.messageModel.addLast(msg);</span><br><span class=\"line\">            turnyou = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            Vars.timePanel.restart();</span><br><span class=\"line\">            Vars.roundPanel.update();</span><br><span class=\"line\">            judgement();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"“对手下棋”操作\"><a href=\"#“对手下棋”操作\" class=\"headerlink\" title=\"“对手下棋”操作\"></a>“对手下棋”操作</h4><p>同样，我们还需要执行对手下棋的操作，这两个步骤可不可以混合在一起？其实可以，但这样会是代码的可读性变差，而且回合的切换也会没有那么流畅。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addNetChess</span><span class=\"params\">(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(x + <span class=\"string\">&quot; &quot;</span> + y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Vars.model.getboard(x, y) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Vars.model.addChess(x, y, chessColor);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (chessColor) &#123;</span><br><span class=\"line\">                chessColor = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                chessColor = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Vars.chessPanel.repaint();</span><br><span class=\"line\">            turnyou=<span class=\"literal\">true</span>;</span><br><span class=\"line\">            Vars.timePanel.restart();</span><br><span class=\"line\">            Vars.roundPanel.update();</span><br><span class=\"line\">            judgement();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"“判断胜负”操作\"><a href=\"#“判断胜负”操作\" class=\"headerlink\" title=\"“判断胜负”操作\"></a>“判断胜负”操作</h4><p>判断胜利： 在每次有玩家落子后，都需要检查是否有一方取得了胜利。检查的方法通常包括检查每个落子位置的水平、垂直、左上到右下、右上到左下四个方向上是否有连续的五个相同的棋子。</p>\n<ul>\n<li>水平检查： 从左到右检查每一行是否有连续的五个相同的棋子。</li>\n<li>垂直检查： 从上到下检查每一列是否有连续的五个相同的棋子。</li>\n<li>左上到右下检查： 从左上角到右下角检查斜线上是否有连续的五个相同的棋子。</li>\n<li>右上到左下检查： 从右上角到左下角检查斜线上是否有连续的五个相同的棋子。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">judgement</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">           <span class=\"comment\">// 示例输入</span></span><br><span class=\"line\">           <span class=\"type\">int</span>[][] chessboard = Vars.model.getboard();  <span class=\"comment\">// 初始化一个21x21的棋盘，初始值都为0</span></span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"type\">int</span> <span class=\"variable\">winner</span> <span class=\"operator\">=</span> checkWinner(chessboard);</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (winner == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">               System.out.println(<span class=\"string\">&quot;白棋获胜！&quot;</span>);</span><br><span class=\"line\">              Vars.dialogStyle.Gameover(Start.getStart(),<span class=\"string\">&quot;白棋获胜&quot;</span>);</span><br><span class=\"line\">              </span><br><span class=\"line\">           &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (winner == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">               System.out.println(<span class=\"string\">&quot;黑棋获胜！&quot;</span>);</span><br><span class=\"line\">               Vars.dialogStyle.Gameover(Start.getStart(),<span class=\"string\">&quot;黑棋获胜&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">           &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">               System.out.println(<span class=\"string\">&quot;游戏尚未结束，或者平局！&quot;</span>);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">checkWinner</span><span class=\"params\">(<span class=\"type\">int</span>[][] chessboard)</span> &#123;</span><br><span class=\"line\">           <span class=\"comment\">// 检查每一行</span></span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">22</span>; i++) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (checkRow(chessboard, i) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">return</span> checkRow(chessboard, i);</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">// 检查每一列</span></span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">22</span>; j++) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (checkColumn(chessboard, j) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">return</span> checkColumn(chessboard, j);</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">// 检查两个对角线</span></span><br><span class=\"line\">           <span class=\"keyword\">if</span> (checkDiagonal(chessboard) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> checkDiagonal(chessboard);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">// 游戏尚未结束</span></span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">checkRow</span><span class=\"params\">(<span class=\"type\">int</span>[][] chessboard, <span class=\"type\">int</span> row)</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++) &#123;  <span class=\"comment\">// 因为是五子棋，所以只需检查前17个位置</span></span><br><span class=\"line\">               <span class=\"keyword\">if</span> (chessboard[row][i] == chessboard[row][i + <span class=\"number\">1</span>] &amp;&amp;</span><br><span class=\"line\">                       chessboard[row][i + <span class=\"number\">1</span>] == chessboard[row][i + <span class=\"number\">2</span>] &amp;&amp;</span><br><span class=\"line\">                       chessboard[row][i + <span class=\"number\">2</span>] == chessboard[row][i + <span class=\"number\">3</span>] &amp;&amp;</span><br><span class=\"line\">                       chessboard[row][i + <span class=\"number\">3</span>] == chessboard[row][i + <span class=\"number\">4</span>] &amp;&amp;</span><br><span class=\"line\">                       chessboard[row][i] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">return</span> chessboard[row][i];</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">checkColumn</span><span class=\"params\">(<span class=\"type\">int</span>[][] chessboard, <span class=\"type\">int</span> col)</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++) &#123;  <span class=\"comment\">// 因为是五子棋，所以只需检查前17个位置</span></span><br><span class=\"line\">               <span class=\"keyword\">if</span> (chessboard[i][col] == chessboard[i + <span class=\"number\">1</span>][col] &amp;&amp;</span><br><span class=\"line\">                       chessboard[i + <span class=\"number\">1</span>][col] == chessboard[i + <span class=\"number\">2</span>][col] &amp;&amp;</span><br><span class=\"line\">                       chessboard[i + <span class=\"number\">2</span>][col] == chessboard[i + <span class=\"number\">3</span>][col] &amp;&amp;</span><br><span class=\"line\">                       chessboard[i + <span class=\"number\">3</span>][col] == chessboard[i + <span class=\"number\">4</span>][col] &amp;&amp;</span><br><span class=\"line\">                       chessboard[i][col] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">return</span> chessboard[i][col];</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">checkDiagonal</span><span class=\"params\">(<span class=\"type\">int</span>[][] chessboard)</span> &#123;</span><br><span class=\"line\">           <span class=\"comment\">// 检查左上到右下对角线</span></span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span> (chessboard[i][j] == chessboard[i + <span class=\"number\">1</span>][j + <span class=\"number\">1</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">1</span>][j + <span class=\"number\">1</span>] == chessboard[i + <span class=\"number\">2</span>][j + <span class=\"number\">2</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">2</span>][j + <span class=\"number\">2</span>] == chessboard[i + <span class=\"number\">3</span>][j + <span class=\"number\">3</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">3</span>][j + <span class=\"number\">3</span>] == chessboard[i + <span class=\"number\">4</span>][j + <span class=\"number\">4</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i][j] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                       <span class=\"keyword\">return</span> chessboard[i][j];</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">// 检查左下到右上对角线</span></span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">4</span>; j &lt; <span class=\"number\">19</span>; j++) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span> (chessboard[i][j] == chessboard[i + <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] == chessboard[i + <span class=\"number\">2</span>][j - <span class=\"number\">2</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">2</span>][j - <span class=\"number\">2</span>] == chessboard[i + <span class=\"number\">3</span>][j - <span class=\"number\">3</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">3</span>][j - <span class=\"number\">3</span>] == chessboard[i + <span class=\"number\">4</span>][j - <span class=\"number\">4</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i][j] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                       <span class=\"keyword\">return</span> chessboard[i][j];</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">getColor</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> chessColor;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">reportColor</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (chessColor) &#123;</span><br><span class=\"line\">           chessColor = <span class=\"literal\">false</span>;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           chessColor = <span class=\"literal\">true</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"悔棋操作\"><a href=\"#悔棋操作\" class=\"headerlink\" title=\"悔棋操作\"></a>悔棋操作</h4><p>悔棋和对手悔棋的操作主要的就是看是否是自己的回合，如果是自己的回合，需要需要悔棋两步，如果不是自己的回合，只需要悔棋一步，并更改下棋方。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">back</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">this</span>.Backnum&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!turnyou) &#123;</span><br><span class=\"line\">                Vars.model.removeChess();</span><br><span class=\"line\">                Vars.chessPanel.repaint();</span><br><span class=\"line\">                Vars.controler.reportColor();</span><br><span class=\"line\">                turnyou=<span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (turnyou) &#123;</span><br><span class=\"line\">                Vars.model.removeChess();</span><br><span class=\"line\">                Vars.model.removeChess();</span><br><span class=\"line\">                Vars.chessPanel.repaint();</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Backnum--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"对手悔棋操作\"><a href=\"#对手悔棋操作\" class=\"headerlink\" title=\"对手悔棋操作\"></a>对手悔棋操作</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">NETback</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!turnyou) &#123;</span><br><span class=\"line\">            Vars.model.removeChess();</span><br><span class=\"line\">            Vars.model.removeChess();</span><br><span class=\"line\">            Vars.chessPanel.repaint();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (turnyou) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            Vars.model.removeChess();</span><br><span class=\"line\">            Vars.chessPanel.repaint();</span><br><span class=\"line\">            Vars.controler.reportColor();</span><br><span class=\"line\">            turnyou=<span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"MVC模式\"><a href=\"#MVC模式\" class=\"headerlink\" title=\"MVC模式\"></a>MVC模式</h1><p>现在我们先不来考虑联机的部分，单纯只考虑五子棋如何实现的，这里用MVC设计模式来实现</p>\n<h2 id=\"什么是MVC\"><a href=\"#什么是MVC\" class=\"headerlink\" title=\"什么是MVC\"></a>什么是MVC</h2><h3 id=\"模型（Model）\"><a href=\"#模型（Model）\" class=\"headerlink\" title=\"模型（Model）\"></a>模型（Model）</h3><p>模型代表应用程序的数据和业务逻辑。它负责处理数据的存储、检索、更新和验证，同时也包括定义应用程序的业务规则。模型与用户界面和用户交互无关，使得数据的处理可以独立于视图和控制器。</p>\n<h3 id=\"视图（View）\"><a href=\"#视图（View）\" class=\"headerlink\" title=\"视图（View）\"></a>视图（View）</h3><p>视图是用户界面的表示，负责显示数据并将用户的输入传递给控制器。视图接收模型的数据并以某种形式（例如图形界面、命令行界面）呈现给用户。视图通常不包含业务逻辑，而只负责呈现数据。</p>\n<h3 id=\"控制器（Controller）\"><a href=\"#控制器（Controller）\" class=\"headerlink\" title=\"控制器（Controller）\"></a>控制器（Controller）</h3><p>控制器是模型和视图之间的协调者。它接收用户的输入，根据输入更新模型的数据，并相应地更新视图。控制器负责将用户输入转换为对模型的操作，并通知视图更新以反映模型的变化。控制器使模型和视图能够相互独立工作，提高了系统的灵活性。</p>\n<h3 id=\"MVC模式的工作流程通常如下\"><a href=\"#MVC模式的工作流程通常如下\" class=\"headerlink\" title=\"MVC模式的工作流程通常如下\"></a>MVC模式的工作流程通常如下</h3><ul>\n<li>用户与视图进行交互。</li>\n<li>视图将用户的输入传递给控制器。</li>\n<li>控制器根据用户输入对模型进行相应的操作。</li>\n<li>模型更新后，通知控制器。</li>\n<li>控制器通知视图更新，以反映模型的变化。</li>\n<li>视图更新后等待用户下一次交互。</li>\n</ul>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>我们来看我们的View部分，View部分主要由两部分组成，一部分是棋盘的主题部分BorderPanel，另一部分是周围的按钮等即toolPanel。</p>\n<br>\n设置背景图和棋子图片。\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Image background=((Image) <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(<span class=\"string\">&quot;src/pic/backgroun.png&quot;</span>).getImage());</span><br><span class=\"line\"></span><br><span class=\"line\">   Image chess1=((Image) <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(<span class=\"string\">&quot;src/pic/chess1.png&quot;</span>).getImage());</span><br><span class=\"line\">   Image chess2=((Image) <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(<span class=\"string\">&quot;src/pic/chess2.png&quot;</span>).getImage());</span><br></pre></td></tr></table></figure>\n\n<p>为面板提供交互操作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">ChessPanel</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.setPreferredSize(<span class=\"keyword\">new</span> <span class=\"title class_\">Dimension</span>(<span class=\"number\">800</span>,<span class=\"number\">800</span>));</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.addMouseMotionListener(<span class=\"keyword\">new</span> <span class=\"title class_\">MouseMotionAdapter</span>() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseDragged</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">super</span>.mouseDragged(e);</span><br><span class=\"line\">                    tempPoint=e.getPoint();</span><br><span class=\"line\"></span><br><span class=\"line\">                    repaint();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"built_in\">this</span>.setBackground(Color.decode(<span class=\"string\">&quot;#000816&quot;</span>));</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.addMouseListener(<span class=\"keyword\">new</span> <span class=\"title class_\">MouseListener</span>() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseClicked</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">                    System.out.println(e.getPoint().x+<span class=\"string\">&quot;&quot;</span>+e.getPoint().y);</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        Vars.controler.addChess(e.getPoint());</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (IOException ex) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(ex);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mousePressed</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseReleased</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        Vars.controler.addChess(e.getPoint());</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (IOException ex) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(ex);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    tempPoint.x=<span class=\"number\">10000</span>;</span><br><span class=\"line\">                    tempPoint.y=<span class=\"number\">10000</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseEntered</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseExited</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>绘图模块，画线和画棋子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">drawtempchess</span><span class=\"params\">(Graphics g)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellWidth</span> <span class=\"operator\">=</span> Vars.chessPanel.getWidth() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellHeight</span> <span class=\"operator\">=</span> Vars.chessPanel.getHeight() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> x,y;</span><br><span class=\"line\">        x= tempPoint.x/cellWidth;</span><br><span class=\"line\">        y= tempPoint.y/cellHeight;</span><br><span class=\"line\">        System.out.println(x+<span class=\"string\">&quot; &quot;</span>+y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Vars.controler.getColor())&#123;</span><br><span class=\"line\">            g.drawImage(chess1,cellWidth/<span class=\"number\">2</span>+cellWidth*x,cellWidth/<span class=\"number\">2</span>+cellWidth*y,cellWidth,cellHeight,<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            g.drawImage(chess2,cellWidth/<span class=\"number\">2</span>+cellWidth*x,cellWidth/<span class=\"number\">2</span>+cellWidth*y,cellWidth,cellHeight,<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">paintComponent</span><span class=\"params\">(Graphics g)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.paintComponent(g);</span><br><span class=\"line\">        g.drawImage(background,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"built_in\">this</span>.getWidth(),<span class=\"built_in\">this</span>.getHeight(),<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        System.out.println(background.getHeight(<span class=\"built_in\">this</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellWidth</span> <span class=\"operator\">=</span> getWidth() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellHeight</span> <span class=\"operator\">=</span> getHeight() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        ((Graphics2D)g).setStroke(<span class=\"keyword\">new</span> <span class=\"title class_\">BasicStroke</span>(<span class=\"number\">3</span>));</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">19</span>;i++)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           g.setColor(Color.decode(<span class=\"string\">&quot;#0fa99a&quot;</span>));</span><br><span class=\"line\">           g.drawLine(cellWidth,cellWidth*(i+<span class=\"number\">1</span>),cellWidth*(<span class=\"number\">19</span>),cellWidth*(i+<span class=\"number\">1</span>));</span><br><span class=\"line\">           g.drawLine(cellWidth*(i+<span class=\"number\">1</span>),cellWidth,cellWidth*(i+<span class=\"number\">1</span>),cellWidth*(<span class=\"number\">19</span>));</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Vars.controler.turnyou)drawtempchess(g);</span><br><span class=\"line\">        LinkedList&lt;chess&gt; data=Vars.model.getModel();</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(chess chess:data)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(chess.color)&#123;</span><br><span class=\"line\">               g.drawImage(chess1,cellWidth/<span class=\"number\">2</span>+cellWidth*chess.x,cellWidth/<span class=\"number\">2</span>+cellWidth*chess.y,cellWidth,cellHeight,<span class=\"built_in\">this</span>);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">               g.drawImage(chess2,cellWidth/<span class=\"number\">2</span>+cellWidth*chess.x,cellWidth/<span class=\"number\">2</span>+cellWidth*chess.y,cellWidth,cellHeight,<span class=\"built_in\">this</span>);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Model模块\"><a href=\"#Model模块\" class=\"headerlink\" title=\"Model模块\"></a>Model模块</h3><p>接下来我们看model模块该怎么写，首先我们想我们的视图需要反应模型，那么模型储存这什么呢，就是我们的棋盘数据，将整个棋盘以一个19X19的矩阵存入Model。但是光这样是不行的，应为我们会发现如果这么存的话，我们只知道棋盘上当前的情况，但却不知道这些棋子的顺序，如果这样的话，我们就无法实现我们的悔棋功能了，所以我们需要一个队列容器来记录每一步的棋子都下在了哪里。</p>\n<br>\n\n<p>然后我们再次可以提前考虑一下我们之后的联机模块，我们的联机是要与不同的对手对抗的，记录对手的信息以是必要的，还有双方之间的网络消息队列，也可以放在Model模块里</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Model</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> LinkedList&lt;chess&gt; model=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> LinkedList&lt;user&gt; userList=<span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  LinkedList&lt;Message&gt;messageModel=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;Message&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String username;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> enemyID=-<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String enemyname;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> ID;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span>[][]board=<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">22</span>][<span class=\"number\">22</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addChess</span><span class=\"params\">(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y,<span class=\"type\">boolean</span> color)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">chess</span> <span class=\"variable\">newChess</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">chess</span>(x, y, color);</span><br><span class=\"line\">            model.add(newChess);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (color)</span><br><span class=\"line\">                board[x][y] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                board[x][y] = <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">removeChess</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        board[model.getLast().x][model.getLast().y]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        model.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> LinkedList&lt;chess&gt; <span class=\"title function_\">getModel</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  model;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span>[][] getboard()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> board;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getboard</span><span class=\"params\">(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> board[x][y];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">clear</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!model.isEmpty())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            model.removeLast();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">22</span>;i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">22</span>;j++)</span><br><span class=\"line\">            board[i][j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">chess</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">boolean</span> color;</span><br><span class=\"line\">    <span class=\"type\">int</span> x;</span><br><span class=\"line\">    <span class=\"type\">int</span> y;</span><br><span class=\"line\">    chess(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y,<span class=\"type\">boolean</span> color)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.x=x;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.y=y;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.color=color;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Controller模块\"><a href=\"#Controller模块\" class=\"headerlink\" title=\"Controller模块\"></a>Controller模块</h3><p>Controller 中包括了游戏中所有的操作函数接口。首先我们来分析一下项目中的一些操作需求</p>\n<h4 id=\"“下棋”操作\"><a href=\"#“下棋”操作\" class=\"headerlink\" title=\"“下棋”操作\"></a>“下棋”操作</h4><p>下棋应该是项目中最为基本的内容，下棋需要将棋子存入Model,还需要向对手发送消息，告知对手自己下在了哪一步。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addChess</span><span class=\"params\">(Point point)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(turnyou) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellWidth</span> <span class=\"operator\">=</span> Vars.chessPanel.getWidth() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">cellHeight</span> <span class=\"operator\">=</span> Vars.chessPanel.getHeight() / <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> x, y;</span><br><span class=\"line\">        x = point.x / cellWidth;</span><br><span class=\"line\">        y = point.y / cellHeight;</span><br><span class=\"line\">        System.out.println(x + <span class=\"string\">&quot; &quot;</span> + y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Vars.model.getboard(x, y) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Vars.model.addChess(x, y, chessColor);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (chessColor) &#123;</span><br><span class=\"line\">                chessColor = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                chessColor = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Vars.chessPanel.repaint();</span><br><span class=\"line\"></span><br><span class=\"line\">           Message msg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(<span class=\"string\">&quot;chess&quot;</span>,x,y,chessColor);</span><br><span class=\"line\">           Vars.model.messageModel.addLast(msg);</span><br><span class=\"line\">            turnyou = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            Vars.timePanel.restart();</span><br><span class=\"line\">            Vars.roundPanel.update();</span><br><span class=\"line\">            judgement();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"“对手下棋”操作\"><a href=\"#“对手下棋”操作\" class=\"headerlink\" title=\"“对手下棋”操作\"></a>“对手下棋”操作</h4><p>同样，我们还需要执行对手下棋的操作，这两个步骤可不可以混合在一起？其实可以，但这样会是代码的可读性变差，而且回合的切换也会没有那么流畅。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addNetChess</span><span class=\"params\">(<span class=\"type\">int</span> x,<span class=\"type\">int</span> y)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(x + <span class=\"string\">&quot; &quot;</span> + y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Vars.model.getboard(x, y) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            Vars.model.addChess(x, y, chessColor);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (chessColor) &#123;</span><br><span class=\"line\">                chessColor = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                chessColor = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Vars.chessPanel.repaint();</span><br><span class=\"line\">            turnyou=<span class=\"literal\">true</span>;</span><br><span class=\"line\">            Vars.timePanel.restart();</span><br><span class=\"line\">            Vars.roundPanel.update();</span><br><span class=\"line\">            judgement();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"“判断胜负”操作\"><a href=\"#“判断胜负”操作\" class=\"headerlink\" title=\"“判断胜负”操作\"></a>“判断胜负”操作</h4><p>判断胜利： 在每次有玩家落子后，都需要检查是否有一方取得了胜利。检查的方法通常包括检查每个落子位置的水平、垂直、左上到右下、右上到左下四个方向上是否有连续的五个相同的棋子。</p>\n<ul>\n<li>水平检查： 从左到右检查每一行是否有连续的五个相同的棋子。</li>\n<li>垂直检查： 从上到下检查每一列是否有连续的五个相同的棋子。</li>\n<li>左上到右下检查： 从左上角到右下角检查斜线上是否有连续的五个相同的棋子。</li>\n<li>右上到左下检查： 从右上角到左下角检查斜线上是否有连续的五个相同的棋子。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title function_\">judgement</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">           <span class=\"comment\">// 示例输入</span></span><br><span class=\"line\">           <span class=\"type\">int</span>[][] chessboard = Vars.model.getboard();  <span class=\"comment\">// 初始化一个21x21的棋盘，初始值都为0</span></span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"type\">int</span> <span class=\"variable\">winner</span> <span class=\"operator\">=</span> checkWinner(chessboard);</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (winner == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">               System.out.println(<span class=\"string\">&quot;白棋获胜！&quot;</span>);</span><br><span class=\"line\">              Vars.dialogStyle.Gameover(Start.getStart(),<span class=\"string\">&quot;白棋获胜&quot;</span>);</span><br><span class=\"line\">              </span><br><span class=\"line\">           &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (winner == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">               System.out.println(<span class=\"string\">&quot;黑棋获胜！&quot;</span>);</span><br><span class=\"line\">               Vars.dialogStyle.Gameover(Start.getStart(),<span class=\"string\">&quot;黑棋获胜&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">           &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">               System.out.println(<span class=\"string\">&quot;游戏尚未结束，或者平局！&quot;</span>);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">checkWinner</span><span class=\"params\">(<span class=\"type\">int</span>[][] chessboard)</span> &#123;</span><br><span class=\"line\">           <span class=\"comment\">// 检查每一行</span></span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">22</span>; i++) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (checkRow(chessboard, i) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">return</span> checkRow(chessboard, i);</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">// 检查每一列</span></span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">22</span>; j++) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (checkColumn(chessboard, j) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">return</span> checkColumn(chessboard, j);</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">// 检查两个对角线</span></span><br><span class=\"line\">           <span class=\"keyword\">if</span> (checkDiagonal(chessboard) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> checkDiagonal(chessboard);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">// 游戏尚未结束</span></span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">checkRow</span><span class=\"params\">(<span class=\"type\">int</span>[][] chessboard, <span class=\"type\">int</span> row)</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++) &#123;  <span class=\"comment\">// 因为是五子棋，所以只需检查前17个位置</span></span><br><span class=\"line\">               <span class=\"keyword\">if</span> (chessboard[row][i] == chessboard[row][i + <span class=\"number\">1</span>] &amp;&amp;</span><br><span class=\"line\">                       chessboard[row][i + <span class=\"number\">1</span>] == chessboard[row][i + <span class=\"number\">2</span>] &amp;&amp;</span><br><span class=\"line\">                       chessboard[row][i + <span class=\"number\">2</span>] == chessboard[row][i + <span class=\"number\">3</span>] &amp;&amp;</span><br><span class=\"line\">                       chessboard[row][i + <span class=\"number\">3</span>] == chessboard[row][i + <span class=\"number\">4</span>] &amp;&amp;</span><br><span class=\"line\">                       chessboard[row][i] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">return</span> chessboard[row][i];</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">checkColumn</span><span class=\"params\">(<span class=\"type\">int</span>[][] chessboard, <span class=\"type\">int</span> col)</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++) &#123;  <span class=\"comment\">// 因为是五子棋，所以只需检查前17个位置</span></span><br><span class=\"line\">               <span class=\"keyword\">if</span> (chessboard[i][col] == chessboard[i + <span class=\"number\">1</span>][col] &amp;&amp;</span><br><span class=\"line\">                       chessboard[i + <span class=\"number\">1</span>][col] == chessboard[i + <span class=\"number\">2</span>][col] &amp;&amp;</span><br><span class=\"line\">                       chessboard[i + <span class=\"number\">2</span>][col] == chessboard[i + <span class=\"number\">3</span>][col] &amp;&amp;</span><br><span class=\"line\">                       chessboard[i + <span class=\"number\">3</span>][col] == chessboard[i + <span class=\"number\">4</span>][col] &amp;&amp;</span><br><span class=\"line\">                       chessboard[i][col] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">return</span> chessboard[i][col];</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">checkDiagonal</span><span class=\"params\">(<span class=\"type\">int</span>[][] chessboard)</span> &#123;</span><br><span class=\"line\">           <span class=\"comment\">// 检查左上到右下对角线</span></span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">16</span>; j++) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span> (chessboard[i][j] == chessboard[i + <span class=\"number\">1</span>][j + <span class=\"number\">1</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">1</span>][j + <span class=\"number\">1</span>] == chessboard[i + <span class=\"number\">2</span>][j + <span class=\"number\">2</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">2</span>][j + <span class=\"number\">2</span>] == chessboard[i + <span class=\"number\">3</span>][j + <span class=\"number\">3</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">3</span>][j + <span class=\"number\">3</span>] == chessboard[i + <span class=\"number\">4</span>][j + <span class=\"number\">4</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i][j] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                       <span class=\"keyword\">return</span> chessboard[i][j];</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">// 检查左下到右上对角线</span></span><br><span class=\"line\">           <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">16</span>; i++) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">4</span>; j &lt; <span class=\"number\">19</span>; j++) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span> (chessboard[i][j] == chessboard[i + <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] == chessboard[i + <span class=\"number\">2</span>][j - <span class=\"number\">2</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">2</span>][j - <span class=\"number\">2</span>] == chessboard[i + <span class=\"number\">3</span>][j - <span class=\"number\">3</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i + <span class=\"number\">3</span>][j - <span class=\"number\">3</span>] == chessboard[i + <span class=\"number\">4</span>][j - <span class=\"number\">4</span>] &amp;&amp;</span><br><span class=\"line\">                           chessboard[i][j] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                       <span class=\"keyword\">return</span> chessboard[i][j];</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">getColor</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> chessColor;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">reportColor</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (chessColor) &#123;</span><br><span class=\"line\">           chessColor = <span class=\"literal\">false</span>;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           chessColor = <span class=\"literal\">true</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"悔棋操作\"><a href=\"#悔棋操作\" class=\"headerlink\" title=\"悔棋操作\"></a>悔棋操作</h4><p>悔棋和对手悔棋的操作主要的就是看是否是自己的回合，如果是自己的回合，需要需要悔棋两步，如果不是自己的回合，只需要悔棋一步，并更改下棋方。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">back</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">this</span>.Backnum&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!turnyou) &#123;</span><br><span class=\"line\">                Vars.model.removeChess();</span><br><span class=\"line\">                Vars.chessPanel.repaint();</span><br><span class=\"line\">                Vars.controler.reportColor();</span><br><span class=\"line\">                turnyou=<span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (turnyou) &#123;</span><br><span class=\"line\">                Vars.model.removeChess();</span><br><span class=\"line\">                Vars.model.removeChess();</span><br><span class=\"line\">                Vars.chessPanel.repaint();</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Backnum--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"对手悔棋操作\"><a href=\"#对手悔棋操作\" class=\"headerlink\" title=\"对手悔棋操作\"></a>对手悔棋操作</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">NETback</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!turnyou) &#123;</span><br><span class=\"line\">            Vars.model.removeChess();</span><br><span class=\"line\">            Vars.model.removeChess();</span><br><span class=\"line\">            Vars.chessPanel.repaint();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (turnyou) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            Vars.model.removeChess();</span><br><span class=\"line\">            Vars.chessPanel.repaint();</span><br><span class=\"line\">            Vars.controler.reportColor();</span><br><span class=\"line\">            turnyou=<span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"JAVA联机五子棋（四）","date":"2023-12-25T09:05:10.000Z","_content":"\n# 网络模块\n\n![屏幕截图 2023-12-24 113957.png](https://s2.loli.net/2023/12/25/wYDpmCsSJuFt5Rf.png)\n\n## 定义Message 类\n\n在我们开发联机五子棋的过程中最大的一个问题是，各种消息太过复杂，对话消息，下棋消息，邀请消息，悔棋消息，将这些消息标准化定义，让服务器能够识别收到的到底是什么消息就很重要。因此我们专门将定义的Code类，定义了一系列内部编码，当然大家直接用宏定义也可以。\n\n```java\nimport java.io.Serializable;\nimport java.util.LinkedList;\n\npublic class Message implements Serializable {\n    private static final long serialVersionUID = 1L;\n   public String username;\n    public String content;\n    public String time;\n    public String code;\n    public boolean color;\n    public int x,y;\n    public int ID;\n    public LinkedList<user> userlist;\n    public Message(String code,int ID,String username)\n    {\n        this.code=code;\n        this.ID=ID;\n        this.username=username;\n\n    }\n    public Message(String code,int ID)\n    {\n        this.code=code;\n        this.ID=ID;\n\n    }\n    public Message(String code, LinkedList<user> userlist)\n    {\n        this.code=code;\n        this.userlist=userlist;\n    }\n    public Message(String code,String username,String content,String time){\n        super();\n        this.code=code;\n        this.username=username;\n        this.content=content;\n        this.time=time;\n    }\n    public Message(String code,int x,int y,boolean color){\n        super();\n        this.code=code;\n        this.x=x;\n        this.y=y;\n        this.color=color;\n    }\n    public Message(String code,String username)\n    {\n        this.code=code;\n        this.username=username;\n    }\n    public Message(String code)\n    {\n        this.code=code;\n\n    }\n    public Message()\n    {\n        super();\n    }\n\n}\n\nclass   Code{\n    public static final String MESSAGE=\"message\";\n    public static final String CHESS=\"chess\";\n\n    public static final String REQUEST=\"request\";\n    public static final String BACK=\"back\";\n    public static final String LOST=\"lost\";\n    public static final String PEACE=\"peace\";\n\n    public static final String LOADING=\"loading\";\n\n    public static final String RENAME=\"rename\";\n\n    public static final String GETID=\"getid\";\n\n    public static final String REFUSE=\"refuse\";\n    public static final String STARTGAME=\"startgame\";\n\n    public static final String PEACEGAME=\"peacegame\";\n\n    public static final String WINGAME=\"wingane\";\n\n    public static final String REFUSEPEACE=\"refusepeace\";\n\n    public static final String UPDATE=\"update\";\n\n    public static final String OUTOFDATE=\"outofdate\";\n\n\n\n}\n```\n\n### 服务端\n\n服务端和客户端的实例和之前的多人群聊系统相差不大，因为咱们的五子棋要设置联机大厅，所以还要储存所有用户的信息，因此服务端的程序也需要储存数据库，ServerModel类读者可以根据自己的需求创建。\n\n```java\npackage gobang;\n\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.util.LinkedList;\n\npublic class Server {\n    public static ServerModel model=new ServerModel();\n    public static LinkedList<ObjectOutputStream>online=new LinkedList<ObjectOutputStream>();\n    public Server(){}\n    public static void main(String[] arg) throws IOException {\n\n\n           ServerSocket ss = new ServerSocket(8000);\n            int num = 1;\n            int ID=0;\n            System.out.println(\"正在连接中……\");\n\n            while (true) {\n                Socket s = ss.accept();\n                ServerThread newServerThtear=new ServerThread(s,ID);\n                newServerThtear.start();\n                user newuser=new user(\"新用户\"+ID,ID);\n                model.adduser(newuser);\n                System.out.println(\"新用户加入,当前在线用户\"+num+\"人\");\n\n                num++;\n                ID++;\n            }\n\n    }\n\n\n\n}\n\n```\n\n服务端线程（其实大家的服务端也可以设计一个服务端的消息管理器，但是我这里就不做演示啦，就把那一大串if-else接到一个函数里就OK）\n\n```java\nclass ServerThread extends Thread{\n\n    private Socket s;\n\n    private ObjectInputStream ois;\n   private ObjectOutputStream oos;\n\n   private int enemyID=-1;\n   private int ID;\n    public ServerThread(Socket s,int ID){\n        super();\n            this.s=s;\n            this.ID=ID;\n\n    }\n    public void run(){\n\n\n        try {\n\n            ois = new ObjectInputStream(s.getInputStream());\n            oos = new ObjectOutputStream(s.getOutputStream());\n            Server.online.addLast(oos);\n            Message Mmsg=new Message(Code.GETID,ID,Server.model.getdata().get(ID).username);\n            oos.writeObject(Mmsg);\n\n\n            while(true)\n            {\n                Message msg=(Message)ois.readObject();\n                if(msg.code.equals(\"message\")) {\n                    if (enemyID != -1) {\n                        System.out.println(msg.time + \"\\n\" + msg.username + \":\" + msg.content);\n                        Server.online.get(enemyID).writeObject(msg);\n                    }\n                }\n                else if(msg.code.equals(\"chess\"))\n                {\n                    if (enemyID != -1) {\n\n                        System.out.println(msg.time + \"\\n\" + msg.username + \":\" + msg.content);\n                        Server.online.get(enemyID).writeObject(msg);\n                    }\n                }\n                else if(msg.code.equals(Code.LOADING))\n                {\n                   Message answermsg=new Message(Code.LOADING,Server.model.getdata());\n                    oos.writeObject(answermsg);\n                    System.out.println(Server.model.getdata().getFirst().username);\n                } else if (msg.code.equals(Code.UPDATE)) {\n                    LinkedList<user> List=new LinkedList<>();\n                    for(int i=0;i<Server.model.getdata().size();i++)\n                    {\n                        List.addLast(Server.model.getdata().get(i));\n                    }\n\n                    Message answermsg=new Message(Code.UPDATE,List);\n                    System.out.println(answermsg.userlist.size());\n                    System.out.println(answermsg.userlist.getFirst().username+\" \"+answermsg.userlist.getLast().username);\n                   oos.writeObject(answermsg);\n\n\n\n                } else if(msg.code.equals(Code.RENAME))\n                {\n                    Server.model.rename(this.ID,msg.username);\n                    System.out.println(\"更改名字成功\");\n\n                }\n                else if(msg.code.equals(Code.REQUEST))\n                {\n                   Message requestmsg=new Message(Code.REQUEST,ID, msg.username);\n                    Server.online.get(msg.ID).writeObject(requestmsg);\n                    System.out.println(\"请求发送给\"+msg.ID);\n                    this.enemyID=msg.ID;\n\n\n                }else if(msg.code.equals(Code.STARTGAME))\n                {\n                    Server.online.get(msg.ID).writeObject(msg);\n                    enemyID= msg.ID;\n\n                }else if(msg.code.equals(Code.REFUSE))\n                {\n                    Server.online.get(msg.ID).writeObject(msg);\n                } else\n                {\n                    if (enemyID != -1) {\n                        Server.online.get(enemyID).writeObject(msg);\n                    }\n                }\n//\n            }\n            } catch (IOException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            } catch (ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n\n\n    }\n    }\n\n```\n\n### 客户端\n\n```java\npackage gobang;\n\nimport java.io.*;\nimport java.net.Socket;\nimport java.net.UnknownHostException;\n\npublic class NET {\n\n    public  Socket s;\n\n    public String host=\"localhost\";\n    public int port=8080;\n\n\n    NET() {\n\n        try {\n            s = new Socket(\"localhost\", 8080);\n            ObjectOutputStream os=new ObjectOutputStream(s.getOutputStream());\n            ObjectInputStream is=new ObjectInputStream(s.getInputStream());\n            SendThread sendThread=new SendThread(os);\n            ReceiveThread receiveThread=new ReceiveThread(is);\n            sendThread.start();\n            receiveThread.start();\n\n        }catch (UnknownHostException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n\n    public void SETNET()\n    {\n        try {\n            s.close();\n            s = new Socket(host,port);\n            ObjectOutputStream os=new ObjectOutputStream(s.getOutputStream());\n            ObjectInputStream is=new ObjectInputStream(s.getInputStream());\n            SendThread sendThread=new SendThread(os);\n            ReceiveThread receiveThread=new ReceiveThread(is);\n            sendThread.start();\n            receiveThread.start();\n\n        }catch (UnknownHostException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n\n    }\n\n}\n\n```\n\n### 客户端发送线程\n\n客户端的发送线程主要的工作就是检测客户端的MessageList,消息队列中是否有待处理的消息（是否为空），一旦有就立刻发送给服务端。\n\n```java\npackage gobang;\n\n\n\nimport java.io.IOException;\nimport java.io.ObjectOutputStream;\n\npublic class SendThread extends Thread {\n    private ObjectOutputStream os;\n\n    public SendThread(ObjectOutputStream os) {\n        super();\n        this.os = os;\n\n    }\n\n    public void run() {\n\n        try {\n\n\n            while (true) {\n                System.out.print(\"\");\n                if (!Vars.model.messageModel.isEmpty()) {\n\n\n                    Message msg = Vars.model.messageModel.getFirst();\n                    System.out.println(msg.time+\"\\n\"+msg.username+\":\"+msg.content);\n                    os.writeObject(msg);\n                    Vars.model.messageModel.removeFirst();\n\n                }\n            }\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n\n        }\n    }\n\n}\n```\n\n### 客户端接收线程\n\n接受线程同样只做一件事情，就是接受消息，一旦接收到消息就把它丢给消息管理器处理。\n\n```java\npackage gobang;\n\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\n\npublic class ReceiveThread extends Thread{\n\n    private ObjectInputStream ois;\n    private volatile boolean flag = true;\n\n    public ReceiveThread(ObjectInputStream ois) {\n        super();\n        this.ois = ois;\n    }\n    public void run() {\n\n\n            while(true) {\n\n                System.out.print(\"\");\n                Message msg = null;\n                try {\n                    msg = (Message) ois.readObject();\n                    Vars.messageManager.getMessage(msg);\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                } catch (ClassNotFoundException e) {\n                    throw new RuntimeException(e);\n                }\n\n                \n\n            }\n\n    }\n}\n```\n\n# 消息管理器\n\n客户端咱们刚才接收到消息后，没有做任何处理，只是调用了一个messageManager里的getMessage()函数，就是丢给，消息管理器，消息管理器就是处理我们接收到的网络消息的，根据接受到1消息完成我们的对应操作。\n\n```java\npackage gobang;\n\nimport javax.swing.*;\nimport java.awt.*;\n\npublic class messageManager {\n    public void getMessage(Message msg)\n    {\n        if(msg.code.equals(\"message\")) {\n            System.out.println(msg.time + \"\\n\" + msg.username + \":\" + msg.content);\n            Vars.talkPanel.showarea.append(msg.time + \"\\n\" + msg.username + \":\" + msg.content + \"\\n\");\n        }\n        else if(msg.code.equals(\"chess\")){\n            System.out.println();\n            Vars.controler.addNetChess(msg.x, msg.y);\n        }\n        else if(msg.code.equals(Code.BACK)){\n            Vars.controler.NETback();\n        } else if (msg.code.equals(Code.LOST)) {\n            Vars.dialogStyle.Gameover(Start.getStart(),\"对方认输\");\n\n        } else if (msg.code.equals(Code.PEACE)) {\n            Vars.dialogStyle.AnswerPeace(Start.getStart());\n        }\n        else if(msg.code.equals(Code.LOADING)){\n            Vars.model.userList=msg.userlist;\n            System.out.println();\n        }\n        else if (msg.code.equals(Code.REQUEST)) {\n            Vars.dialogStyle.AnswerRequest(MainWindows.getMainWindows(), msg.username, 30);\n            Vars.model.enemyID= msg.ID;\n            Vars.model.enemyname=msg.username;\n        } else if (msg.code.equals(Code.REFUSE)) {\n            Vars.dialogStyle.waitDialog(MainWindows.getMainWindows(),\"对方拒绝了你的邀请\",30);\n            Vars.model.enemyID=-1;\n        }else if(msg.code.equals(Code.STARTGAME)){\n            Vars.controler.turnyou=false;\n            Vars.roundPanel.update();\n            Start start=Start.getStart();\n            Vars.timePanel.restart();\n        }else if(msg.code.equals(Code.PEACEGAME)){\n            Vars.dialogStyle.Gameover(Start.getStart(),\"平局\");\n        }else if(msg.code.equals(Code.REFUSEPEACE)){\n            Vars.dialogStyle.waitDialog(Start.getStart(),\"对方拒绝了你的求和\",10);\n        }else if(msg.code.equals(Code.UPDATE)){\n\n            System.out.println(msg.userlist.getFirst().username+\" \"+msg.userlist.getLast().username);\n            System.out.println(msg.userlist.size());\n            MainWindows.getMainWindows().Player.removeAll();\n\n            Vars.model.userList=msg.userlist;\n\n\n\n            if(Vars.model.userList.size()==1)\n            {\n\n                JLabel label=new JLabel(\"当前无其他用户\");\n                Font font=new Font(\"黑体\",Font.PLAIN,50);\n                label.setFont(font);\n                label.setForeground(Color.decode(\"#0fa99a\"));\n                MainWindows.getMainWindows().Player.add(label);\n            }\n            else {\n                for (int i = 0; i < Vars.model.userList.size(); i++) {\n                    if(i!=Vars.model.ID) {\n                        PlayerLabel player = new PlayerLabel(msg.userlist.get(i).username, msg.userlist.get(i).userID);\n                        MainWindows.getMainWindows().Player.add(player);\n                    }\n\n\n\n                }\n            }\n            JLabel label2=new JLabel(\"当前在线人数\"+String.valueOf(msg.userlist.size()));\n            Font font=new Font(\"黑体\",Font.PLAIN,50);\n            label2.setFont(font);\n            label2.setForeground(Color.decode(\"#0fa99a\"));\n            MainWindows.getMainWindows().Player.add(label2);\n            MainWindows.getMainWindows().Player.updateUI();\n        } else if (msg.code.equals(Code.GETID)) {\n            System.out.println(\"用户信息加载成功\");\n            System.out.println(msg.ID+msg.username);\n            Vars.model.ID=msg.ID;\n            Vars.model.username= msg.username;\n\n        }\n    }\n    \n    \n}\n\n```\n\n这样我们的联机五子棋的主体内容就做完了！，剩下就是一些UI界面的布置和UI控件的封装和调用了，希望大家都能做出自己的五子棋。\n\n项目已上传至github   <https://github.com/DemonWhiteY/Gobang_online>\n\n百度网盘 链接：<https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS>\n提取码：YYDS\n--来自百度网盘超级会员V3的分享\n","source":"_posts/JAVA联机五子棋（四）.md","raw":"---\ntitle: JAVA联机五子棋（四）\ndate: 2023-12-25 17:05:10\ntags: JAVA\n---\n\n# 网络模块\n\n![屏幕截图 2023-12-24 113957.png](https://s2.loli.net/2023/12/25/wYDpmCsSJuFt5Rf.png)\n\n## 定义Message 类\n\n在我们开发联机五子棋的过程中最大的一个问题是，各种消息太过复杂，对话消息，下棋消息，邀请消息，悔棋消息，将这些消息标准化定义，让服务器能够识别收到的到底是什么消息就很重要。因此我们专门将定义的Code类，定义了一系列内部编码，当然大家直接用宏定义也可以。\n\n```java\nimport java.io.Serializable;\nimport java.util.LinkedList;\n\npublic class Message implements Serializable {\n    private static final long serialVersionUID = 1L;\n   public String username;\n    public String content;\n    public String time;\n    public String code;\n    public boolean color;\n    public int x,y;\n    public int ID;\n    public LinkedList<user> userlist;\n    public Message(String code,int ID,String username)\n    {\n        this.code=code;\n        this.ID=ID;\n        this.username=username;\n\n    }\n    public Message(String code,int ID)\n    {\n        this.code=code;\n        this.ID=ID;\n\n    }\n    public Message(String code, LinkedList<user> userlist)\n    {\n        this.code=code;\n        this.userlist=userlist;\n    }\n    public Message(String code,String username,String content,String time){\n        super();\n        this.code=code;\n        this.username=username;\n        this.content=content;\n        this.time=time;\n    }\n    public Message(String code,int x,int y,boolean color){\n        super();\n        this.code=code;\n        this.x=x;\n        this.y=y;\n        this.color=color;\n    }\n    public Message(String code,String username)\n    {\n        this.code=code;\n        this.username=username;\n    }\n    public Message(String code)\n    {\n        this.code=code;\n\n    }\n    public Message()\n    {\n        super();\n    }\n\n}\n\nclass   Code{\n    public static final String MESSAGE=\"message\";\n    public static final String CHESS=\"chess\";\n\n    public static final String REQUEST=\"request\";\n    public static final String BACK=\"back\";\n    public static final String LOST=\"lost\";\n    public static final String PEACE=\"peace\";\n\n    public static final String LOADING=\"loading\";\n\n    public static final String RENAME=\"rename\";\n\n    public static final String GETID=\"getid\";\n\n    public static final String REFUSE=\"refuse\";\n    public static final String STARTGAME=\"startgame\";\n\n    public static final String PEACEGAME=\"peacegame\";\n\n    public static final String WINGAME=\"wingane\";\n\n    public static final String REFUSEPEACE=\"refusepeace\";\n\n    public static final String UPDATE=\"update\";\n\n    public static final String OUTOFDATE=\"outofdate\";\n\n\n\n}\n```\n\n### 服务端\n\n服务端和客户端的实例和之前的多人群聊系统相差不大，因为咱们的五子棋要设置联机大厅，所以还要储存所有用户的信息，因此服务端的程序也需要储存数据库，ServerModel类读者可以根据自己的需求创建。\n\n```java\npackage gobang;\n\n\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.util.LinkedList;\n\npublic class Server {\n    public static ServerModel model=new ServerModel();\n    public static LinkedList<ObjectOutputStream>online=new LinkedList<ObjectOutputStream>();\n    public Server(){}\n    public static void main(String[] arg) throws IOException {\n\n\n           ServerSocket ss = new ServerSocket(8000);\n            int num = 1;\n            int ID=0;\n            System.out.println(\"正在连接中……\");\n\n            while (true) {\n                Socket s = ss.accept();\n                ServerThread newServerThtear=new ServerThread(s,ID);\n                newServerThtear.start();\n                user newuser=new user(\"新用户\"+ID,ID);\n                model.adduser(newuser);\n                System.out.println(\"新用户加入,当前在线用户\"+num+\"人\");\n\n                num++;\n                ID++;\n            }\n\n    }\n\n\n\n}\n\n```\n\n服务端线程（其实大家的服务端也可以设计一个服务端的消息管理器，但是我这里就不做演示啦，就把那一大串if-else接到一个函数里就OK）\n\n```java\nclass ServerThread extends Thread{\n\n    private Socket s;\n\n    private ObjectInputStream ois;\n   private ObjectOutputStream oos;\n\n   private int enemyID=-1;\n   private int ID;\n    public ServerThread(Socket s,int ID){\n        super();\n            this.s=s;\n            this.ID=ID;\n\n    }\n    public void run(){\n\n\n        try {\n\n            ois = new ObjectInputStream(s.getInputStream());\n            oos = new ObjectOutputStream(s.getOutputStream());\n            Server.online.addLast(oos);\n            Message Mmsg=new Message(Code.GETID,ID,Server.model.getdata().get(ID).username);\n            oos.writeObject(Mmsg);\n\n\n            while(true)\n            {\n                Message msg=(Message)ois.readObject();\n                if(msg.code.equals(\"message\")) {\n                    if (enemyID != -1) {\n                        System.out.println(msg.time + \"\\n\" + msg.username + \":\" + msg.content);\n                        Server.online.get(enemyID).writeObject(msg);\n                    }\n                }\n                else if(msg.code.equals(\"chess\"))\n                {\n                    if (enemyID != -1) {\n\n                        System.out.println(msg.time + \"\\n\" + msg.username + \":\" + msg.content);\n                        Server.online.get(enemyID).writeObject(msg);\n                    }\n                }\n                else if(msg.code.equals(Code.LOADING))\n                {\n                   Message answermsg=new Message(Code.LOADING,Server.model.getdata());\n                    oos.writeObject(answermsg);\n                    System.out.println(Server.model.getdata().getFirst().username);\n                } else if (msg.code.equals(Code.UPDATE)) {\n                    LinkedList<user> List=new LinkedList<>();\n                    for(int i=0;i<Server.model.getdata().size();i++)\n                    {\n                        List.addLast(Server.model.getdata().get(i));\n                    }\n\n                    Message answermsg=new Message(Code.UPDATE,List);\n                    System.out.println(answermsg.userlist.size());\n                    System.out.println(answermsg.userlist.getFirst().username+\" \"+answermsg.userlist.getLast().username);\n                   oos.writeObject(answermsg);\n\n\n\n                } else if(msg.code.equals(Code.RENAME))\n                {\n                    Server.model.rename(this.ID,msg.username);\n                    System.out.println(\"更改名字成功\");\n\n                }\n                else if(msg.code.equals(Code.REQUEST))\n                {\n                   Message requestmsg=new Message(Code.REQUEST,ID, msg.username);\n                    Server.online.get(msg.ID).writeObject(requestmsg);\n                    System.out.println(\"请求发送给\"+msg.ID);\n                    this.enemyID=msg.ID;\n\n\n                }else if(msg.code.equals(Code.STARTGAME))\n                {\n                    Server.online.get(msg.ID).writeObject(msg);\n                    enemyID= msg.ID;\n\n                }else if(msg.code.equals(Code.REFUSE))\n                {\n                    Server.online.get(msg.ID).writeObject(msg);\n                } else\n                {\n                    if (enemyID != -1) {\n                        Server.online.get(enemyID).writeObject(msg);\n                    }\n                }\n//\n            }\n            } catch (IOException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            } catch (ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n\n\n    }\n    }\n\n```\n\n### 客户端\n\n```java\npackage gobang;\n\nimport java.io.*;\nimport java.net.Socket;\nimport java.net.UnknownHostException;\n\npublic class NET {\n\n    public  Socket s;\n\n    public String host=\"localhost\";\n    public int port=8080;\n\n\n    NET() {\n\n        try {\n            s = new Socket(\"localhost\", 8080);\n            ObjectOutputStream os=new ObjectOutputStream(s.getOutputStream());\n            ObjectInputStream is=new ObjectInputStream(s.getInputStream());\n            SendThread sendThread=new SendThread(os);\n            ReceiveThread receiveThread=new ReceiveThread(is);\n            sendThread.start();\n            receiveThread.start();\n\n        }catch (UnknownHostException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n\n    public void SETNET()\n    {\n        try {\n            s.close();\n            s = new Socket(host,port);\n            ObjectOutputStream os=new ObjectOutputStream(s.getOutputStream());\n            ObjectInputStream is=new ObjectInputStream(s.getInputStream());\n            SendThread sendThread=new SendThread(os);\n            ReceiveThread receiveThread=new ReceiveThread(is);\n            sendThread.start();\n            receiveThread.start();\n\n        }catch (UnknownHostException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n\n    }\n\n}\n\n```\n\n### 客户端发送线程\n\n客户端的发送线程主要的工作就是检测客户端的MessageList,消息队列中是否有待处理的消息（是否为空），一旦有就立刻发送给服务端。\n\n```java\npackage gobang;\n\n\n\nimport java.io.IOException;\nimport java.io.ObjectOutputStream;\n\npublic class SendThread extends Thread {\n    private ObjectOutputStream os;\n\n    public SendThread(ObjectOutputStream os) {\n        super();\n        this.os = os;\n\n    }\n\n    public void run() {\n\n        try {\n\n\n            while (true) {\n                System.out.print(\"\");\n                if (!Vars.model.messageModel.isEmpty()) {\n\n\n                    Message msg = Vars.model.messageModel.getFirst();\n                    System.out.println(msg.time+\"\\n\"+msg.username+\":\"+msg.content);\n                    os.writeObject(msg);\n                    Vars.model.messageModel.removeFirst();\n\n                }\n            }\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n\n        }\n    }\n\n}\n```\n\n### 客户端接收线程\n\n接受线程同样只做一件事情，就是接受消息，一旦接收到消息就把它丢给消息管理器处理。\n\n```java\npackage gobang;\n\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\n\npublic class ReceiveThread extends Thread{\n\n    private ObjectInputStream ois;\n    private volatile boolean flag = true;\n\n    public ReceiveThread(ObjectInputStream ois) {\n        super();\n        this.ois = ois;\n    }\n    public void run() {\n\n\n            while(true) {\n\n                System.out.print(\"\");\n                Message msg = null;\n                try {\n                    msg = (Message) ois.readObject();\n                    Vars.messageManager.getMessage(msg);\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                } catch (ClassNotFoundException e) {\n                    throw new RuntimeException(e);\n                }\n\n                \n\n            }\n\n    }\n}\n```\n\n# 消息管理器\n\n客户端咱们刚才接收到消息后，没有做任何处理，只是调用了一个messageManager里的getMessage()函数，就是丢给，消息管理器，消息管理器就是处理我们接收到的网络消息的，根据接受到1消息完成我们的对应操作。\n\n```java\npackage gobang;\n\nimport javax.swing.*;\nimport java.awt.*;\n\npublic class messageManager {\n    public void getMessage(Message msg)\n    {\n        if(msg.code.equals(\"message\")) {\n            System.out.println(msg.time + \"\\n\" + msg.username + \":\" + msg.content);\n            Vars.talkPanel.showarea.append(msg.time + \"\\n\" + msg.username + \":\" + msg.content + \"\\n\");\n        }\n        else if(msg.code.equals(\"chess\")){\n            System.out.println();\n            Vars.controler.addNetChess(msg.x, msg.y);\n        }\n        else if(msg.code.equals(Code.BACK)){\n            Vars.controler.NETback();\n        } else if (msg.code.equals(Code.LOST)) {\n            Vars.dialogStyle.Gameover(Start.getStart(),\"对方认输\");\n\n        } else if (msg.code.equals(Code.PEACE)) {\n            Vars.dialogStyle.AnswerPeace(Start.getStart());\n        }\n        else if(msg.code.equals(Code.LOADING)){\n            Vars.model.userList=msg.userlist;\n            System.out.println();\n        }\n        else if (msg.code.equals(Code.REQUEST)) {\n            Vars.dialogStyle.AnswerRequest(MainWindows.getMainWindows(), msg.username, 30);\n            Vars.model.enemyID= msg.ID;\n            Vars.model.enemyname=msg.username;\n        } else if (msg.code.equals(Code.REFUSE)) {\n            Vars.dialogStyle.waitDialog(MainWindows.getMainWindows(),\"对方拒绝了你的邀请\",30);\n            Vars.model.enemyID=-1;\n        }else if(msg.code.equals(Code.STARTGAME)){\n            Vars.controler.turnyou=false;\n            Vars.roundPanel.update();\n            Start start=Start.getStart();\n            Vars.timePanel.restart();\n        }else if(msg.code.equals(Code.PEACEGAME)){\n            Vars.dialogStyle.Gameover(Start.getStart(),\"平局\");\n        }else if(msg.code.equals(Code.REFUSEPEACE)){\n            Vars.dialogStyle.waitDialog(Start.getStart(),\"对方拒绝了你的求和\",10);\n        }else if(msg.code.equals(Code.UPDATE)){\n\n            System.out.println(msg.userlist.getFirst().username+\" \"+msg.userlist.getLast().username);\n            System.out.println(msg.userlist.size());\n            MainWindows.getMainWindows().Player.removeAll();\n\n            Vars.model.userList=msg.userlist;\n\n\n\n            if(Vars.model.userList.size()==1)\n            {\n\n                JLabel label=new JLabel(\"当前无其他用户\");\n                Font font=new Font(\"黑体\",Font.PLAIN,50);\n                label.setFont(font);\n                label.setForeground(Color.decode(\"#0fa99a\"));\n                MainWindows.getMainWindows().Player.add(label);\n            }\n            else {\n                for (int i = 0; i < Vars.model.userList.size(); i++) {\n                    if(i!=Vars.model.ID) {\n                        PlayerLabel player = new PlayerLabel(msg.userlist.get(i).username, msg.userlist.get(i).userID);\n                        MainWindows.getMainWindows().Player.add(player);\n                    }\n\n\n\n                }\n            }\n            JLabel label2=new JLabel(\"当前在线人数\"+String.valueOf(msg.userlist.size()));\n            Font font=new Font(\"黑体\",Font.PLAIN,50);\n            label2.setFont(font);\n            label2.setForeground(Color.decode(\"#0fa99a\"));\n            MainWindows.getMainWindows().Player.add(label2);\n            MainWindows.getMainWindows().Player.updateUI();\n        } else if (msg.code.equals(Code.GETID)) {\n            System.out.println(\"用户信息加载成功\");\n            System.out.println(msg.ID+msg.username);\n            Vars.model.ID=msg.ID;\n            Vars.model.username= msg.username;\n\n        }\n    }\n    \n    \n}\n\n```\n\n这样我们的联机五子棋的主体内容就做完了！，剩下就是一些UI界面的布置和UI控件的封装和调用了，希望大家都能做出自己的五子棋。\n\n项目已上传至github   <https://github.com/DemonWhiteY/Gobang_online>\n\n百度网盘 链接：<https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS>\n提取码：YYDS\n--来自百度网盘超级会员V3的分享\n","slug":"JAVA联机五子棋（四）","published":1,"updated":"2023-12-25T13:45:06.036Z","_id":"clqkpm5510000swdy4j6pg1f8","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"网络模块\"><a href=\"#网络模块\" class=\"headerlink\" title=\"网络模块\"></a>网络模块</h1><p><img src=\"https://s2.loli.net/2023/12/25/wYDpmCsSJuFt5Rf.png\" alt=\"屏幕截图 2023-12-24 113957.png\"></p>\n<h2 id=\"定义Message-类\"><a href=\"#定义Message-类\" class=\"headerlink\" title=\"定义Message 类\"></a>定义Message 类</h2><p>在我们开发联机五子棋的过程中最大的一个问题是，各种消息太过复杂，对话消息，下棋消息，邀请消息，悔棋消息，将这些消息标准化定义，让服务器能够识别收到的到底是什么消息就很重要。因此我们专门将定义的Code类，定义了一系列内部编码，当然大家直接用宏定义也可以。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Message</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String content;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String time;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String code;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> color;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> x,y;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> ID;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> LinkedList&lt;user&gt; userlist;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code,<span class=\"type\">int</span> ID,String username)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.ID=ID;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username=username;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code,<span class=\"type\">int</span> ID)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.ID=ID;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code, LinkedList&lt;user&gt; userlist)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.userlist=userlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code,String username,String content,String time)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username=username;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.content=content;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.time=time;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code,<span class=\"type\">int</span> x,<span class=\"type\">int</span> y,<span class=\"type\">boolean</span> color)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.x=x;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.y=y;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.color=color;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code,String username)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username=username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span>   <span class=\"title class_\">Code</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String MESSAGE=<span class=\"string\">&quot;message&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CHESS=<span class=\"string\">&quot;chess&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REQUEST=<span class=\"string\">&quot;request&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String BACK=<span class=\"string\">&quot;back&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String LOST=<span class=\"string\">&quot;lost&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String PEACE=<span class=\"string\">&quot;peace&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String LOADING=<span class=\"string\">&quot;loading&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String RENAME=<span class=\"string\">&quot;rename&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String GETID=<span class=\"string\">&quot;getid&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REFUSE=<span class=\"string\">&quot;refuse&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String STARTGAME=<span class=\"string\">&quot;startgame&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String PEACEGAME=<span class=\"string\">&quot;peacegame&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String WINGAME=<span class=\"string\">&quot;wingane&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REFUSEPEACE=<span class=\"string\">&quot;refusepeace&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String UPDATE=<span class=\"string\">&quot;update&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String OUTOFDATE=<span class=\"string\">&quot;outofdate&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h3><p>服务端和客户端的实例和之前的多人群聊系统相差不大，因为咱们的五子棋要设置联机大厅，所以还要储存所有用户的信息，因此服务端的程序也需要储存数据库，ServerModel类读者可以根据自己的需求创建。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> gobang;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ServerModel model=<span class=\"keyword\">new</span> <span class=\"title class_\">ServerModel</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LinkedList&lt;ObjectOutputStream&gt;online=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;ObjectOutputStream&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Server</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] arg)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"type\">ServerSocket</span> <span class=\"variable\">ss</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">8000</span>);</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> ID=<span class=\"number\">0</span>;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;正在连接中……&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">                <span class=\"type\">Socket</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> ss.accept();</span><br><span class=\"line\">                ServerThread newServerThtear=<span class=\"keyword\">new</span> <span class=\"title class_\">ServerThread</span>(s,ID);</span><br><span class=\"line\">                newServerThtear.start();</span><br><span class=\"line\">                user newuser=<span class=\"keyword\">new</span> <span class=\"title class_\">user</span>(<span class=\"string\">&quot;新用户&quot;</span>+ID,ID);</span><br><span class=\"line\">                model.adduser(newuser);</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;新用户加入,当前在线用户&quot;</span>+num+<span class=\"string\">&quot;人&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                num++;</span><br><span class=\"line\">                ID++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>服务端线程（其实大家的服务端也可以设计一个服务端的消息管理器，但是我这里就不做演示啦，就把那一大串if-else接到一个函数里就OK）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ServerThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Socket s;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectInputStream ois;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> ObjectOutputStream oos;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"type\">int</span> enemyID=-<span class=\"number\">1</span>;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"type\">int</span> ID;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ServerThread</span><span class=\"params\">(Socket s,<span class=\"type\">int</span> ID)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.s=s;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.ID=ID;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            ois = <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectInputStream</span>(s.getInputStream());</span><br><span class=\"line\">            oos = <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectOutputStream</span>(s.getOutputStream());</span><br><span class=\"line\">            Server.online.addLast(oos);</span><br><span class=\"line\">            Message Mmsg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(Code.GETID,ID,Server.model.getdata().get(ID).username);</span><br><span class=\"line\">            oos.writeObject(Mmsg);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Message msg=(Message)ois.readObject();</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(msg.code.equals(<span class=\"string\">&quot;message&quot;</span>)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (enemyID != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                        System.out.println(msg.time + <span class=\"string\">&quot;\\n&quot;</span> + msg.username + <span class=\"string\">&quot;:&quot;</span> + msg.content);</span><br><span class=\"line\">                        Server.online.get(enemyID).writeObject(msg);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(<span class=\"string\">&quot;chess&quot;</span>))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (enemyID != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                        System.out.println(msg.time + <span class=\"string\">&quot;\\n&quot;</span> + msg.username + <span class=\"string\">&quot;:&quot;</span> + msg.content);</span><br><span class=\"line\">                        Server.online.get(enemyID).writeObject(msg);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.LOADING))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                   Message answermsg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(Code.LOADING,Server.model.getdata());</span><br><span class=\"line\">                    oos.writeObject(answermsg);</span><br><span class=\"line\">                    System.out.println(Server.model.getdata().getFirst().username);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.UPDATE)) &#123;</span><br><span class=\"line\">                    LinkedList&lt;user&gt; List=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;&gt;();</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;Server.model.getdata().size();i++)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        List.addLast(Server.model.getdata().get(i));</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    Message answermsg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(Code.UPDATE,List);</span><br><span class=\"line\">                    System.out.println(answermsg.userlist.size());</span><br><span class=\"line\">                    System.out.println(answermsg.userlist.getFirst().username+<span class=\"string\">&quot; &quot;</span>+answermsg.userlist.getLast().username);</span><br><span class=\"line\">                   oos.writeObject(answermsg);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.RENAME))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Server.model.rename(<span class=\"built_in\">this</span>.ID,msg.username);</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;更改名字成功&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.REQUEST))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                   Message requestmsg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(Code.REQUEST,ID, msg.username);</span><br><span class=\"line\">                    Server.online.get(msg.ID).writeObject(requestmsg);</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;请求发送给&quot;</span>+msg.ID);</span><br><span class=\"line\">                    <span class=\"built_in\">this</span>.enemyID=msg.ID;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.STARTGAME))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Server.online.get(msg.ID).writeObject(msg);</span><br><span class=\"line\">                    enemyID= msg.ID;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.REFUSE))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Server.online.get(msg.ID).writeObject(msg);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (enemyID != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                        Server.online.get(enemyID).writeObject(msg);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> gobang;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.UnknownHostException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NET</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  Socket s;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String host=<span class=\"string\">&quot;localhost&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> port=<span class=\"number\">8080</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    NET() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            s = <span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(<span class=\"string\">&quot;localhost&quot;</span>, <span class=\"number\">8080</span>);</span><br><span class=\"line\">            ObjectOutputStream os=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectOutputStream</span>(s.getOutputStream());</span><br><span class=\"line\">            ObjectInputStream is=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectInputStream</span>(s.getInputStream());</span><br><span class=\"line\">            SendThread sendThread=<span class=\"keyword\">new</span> <span class=\"title class_\">SendThread</span>(os);</span><br><span class=\"line\">            ReceiveThread receiveThread=<span class=\"keyword\">new</span> <span class=\"title class_\">ReceiveThread</span>(is);</span><br><span class=\"line\">            sendThread.start();</span><br><span class=\"line\">            receiveThread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">SETNET</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            s.close();</span><br><span class=\"line\">            s = <span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(host,port);</span><br><span class=\"line\">            ObjectOutputStream os=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectOutputStream</span>(s.getOutputStream());</span><br><span class=\"line\">            ObjectInputStream is=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectInputStream</span>(s.getInputStream());</span><br><span class=\"line\">            SendThread sendThread=<span class=\"keyword\">new</span> <span class=\"title class_\">SendThread</span>(os);</span><br><span class=\"line\">            ReceiveThread receiveThread=<span class=\"keyword\">new</span> <span class=\"title class_\">ReceiveThread</span>(is);</span><br><span class=\"line\">            sendThread.start();</span><br><span class=\"line\">            receiveThread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"客户端发送线程\"><a href=\"#客户端发送线程\" class=\"headerlink\" title=\"客户端发送线程\"></a>客户端发送线程</h3><p>客户端的发送线程主要的工作就是检测客户端的MessageList,消息队列中是否有待处理的消息（是否为空），一旦有就立刻发送给服务端。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> gobang;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectOutputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SendThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectOutputStream os;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">SendThread</span><span class=\"params\">(ObjectOutputStream os)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.os = os;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!Vars.model.messageModel.isEmpty()) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"type\">Message</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> Vars.model.messageModel.getFirst();</span><br><span class=\"line\">                    System.out.println(msg.time+<span class=\"string\">&quot;\\n&quot;</span>+msg.username+<span class=\"string\">&quot;:&quot;</span>+msg.content);</span><br><span class=\"line\">                    os.writeObject(msg);</span><br><span class=\"line\">                    Vars.model.messageModel.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"客户端接收线程\"><a href=\"#客户端接收线程\" class=\"headerlink\" title=\"客户端接收线程\"></a>客户端接收线程</h3><p>接受线程同样只做一件事情，就是接受消息，一旦接收到消息就把它丢给消息管理器处理。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> gobang;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ReceiveThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectInputStream ois;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ReceiveThread</span><span class=\"params\">(ObjectInputStream ois)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.ois = ois;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">                <span class=\"type\">Message</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    msg = (Message) ois.readObject();</span><br><span class=\"line\">                    Vars.messageManager.getMessage(msg);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                </span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"消息管理器\"><a href=\"#消息管理器\" class=\"headerlink\" title=\"消息管理器\"></a>消息管理器</h1><p>客户端咱们刚才接收到消息后，没有做任何处理，只是调用了一个messageManager里的getMessage()函数，就是丢给，消息管理器，消息管理器就是处理我们接收到的网络消息的，根据接受到1消息完成我们的对应操作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> gobang;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">messageManager</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getMessage</span><span class=\"params\">(Message msg)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(msg.code.equals(<span class=\"string\">&quot;message&quot;</span>)) &#123;</span><br><span class=\"line\">            System.out.println(msg.time + <span class=\"string\">&quot;\\n&quot;</span> + msg.username + <span class=\"string\">&quot;:&quot;</span> + msg.content);</span><br><span class=\"line\">            Vars.talkPanel.showarea.append(msg.time + <span class=\"string\">&quot;\\n&quot;</span> + msg.username + <span class=\"string\">&quot;:&quot;</span> + msg.content + <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(<span class=\"string\">&quot;chess&quot;</span>))&#123;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">            Vars.controler.addNetChess(msg.x, msg.y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.BACK))&#123;</span><br><span class=\"line\">            Vars.controler.NETback();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.LOST)) &#123;</span><br><span class=\"line\">            Vars.dialogStyle.Gameover(Start.getStart(),<span class=\"string\">&quot;对方认输&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.PEACE)) &#123;</span><br><span class=\"line\">            Vars.dialogStyle.AnswerPeace(Start.getStart());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.LOADING))&#123;</span><br><span class=\"line\">            Vars.model.userList=msg.userlist;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.REQUEST)) &#123;</span><br><span class=\"line\">            Vars.dialogStyle.AnswerRequest(MainWindows.getMainWindows(), msg.username, <span class=\"number\">30</span>);</span><br><span class=\"line\">            Vars.model.enemyID= msg.ID;</span><br><span class=\"line\">            Vars.model.enemyname=msg.username;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.REFUSE)) &#123;</span><br><span class=\"line\">            Vars.dialogStyle.waitDialog(MainWindows.getMainWindows(),<span class=\"string\">&quot;对方拒绝了你的邀请&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\">            Vars.model.enemyID=-<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.STARTGAME))&#123;</span><br><span class=\"line\">            Vars.controler.turnyou=<span class=\"literal\">false</span>;</span><br><span class=\"line\">            Vars.roundPanel.update();</span><br><span class=\"line\">            Start start=Start.getStart();</span><br><span class=\"line\">            Vars.timePanel.restart();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.PEACEGAME))&#123;</span><br><span class=\"line\">            Vars.dialogStyle.Gameover(Start.getStart(),<span class=\"string\">&quot;平局&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.REFUSEPEACE))&#123;</span><br><span class=\"line\">            Vars.dialogStyle.waitDialog(Start.getStart(),<span class=\"string\">&quot;对方拒绝了你的求和&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.UPDATE))&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(msg.userlist.getFirst().username+<span class=\"string\">&quot; &quot;</span>+msg.userlist.getLast().username);</span><br><span class=\"line\">            System.out.println(msg.userlist.size());</span><br><span class=\"line\">            MainWindows.getMainWindows().Player.removeAll();</span><br><span class=\"line\"></span><br><span class=\"line\">            Vars.model.userList=msg.userlist;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Vars.model.userList.size()==<span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                JLabel label=<span class=\"keyword\">new</span> <span class=\"title class_\">JLabel</span>(<span class=\"string\">&quot;当前无其他用户&quot;</span>);</span><br><span class=\"line\">                Font font=<span class=\"keyword\">new</span> <span class=\"title class_\">Font</span>(<span class=\"string\">&quot;黑体&quot;</span>,Font.PLAIN,<span class=\"number\">50</span>);</span><br><span class=\"line\">                label.setFont(font);</span><br><span class=\"line\">                label.setForeground(Color.decode(<span class=\"string\">&quot;#0fa99a&quot;</span>));</span><br><span class=\"line\">                MainWindows.getMainWindows().Player.add(label);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; Vars.model.userList.size(); i++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(i!=Vars.model.ID) &#123;</span><br><span class=\"line\">                        <span class=\"type\">PlayerLabel</span> <span class=\"variable\">player</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PlayerLabel</span>(msg.userlist.get(i).username, msg.userlist.get(i).userID);</span><br><span class=\"line\">                        MainWindows.getMainWindows().Player.add(player);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            JLabel label2=<span class=\"keyword\">new</span> <span class=\"title class_\">JLabel</span>(<span class=\"string\">&quot;当前在线人数&quot;</span>+String.valueOf(msg.userlist.size()));</span><br><span class=\"line\">            Font font=<span class=\"keyword\">new</span> <span class=\"title class_\">Font</span>(<span class=\"string\">&quot;黑体&quot;</span>,Font.PLAIN,<span class=\"number\">50</span>);</span><br><span class=\"line\">            label2.setFont(font);</span><br><span class=\"line\">            label2.setForeground(Color.decode(<span class=\"string\">&quot;#0fa99a&quot;</span>));</span><br><span class=\"line\">            MainWindows.getMainWindows().Player.add(label2);</span><br><span class=\"line\">            MainWindows.getMainWindows().Player.updateUI();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.GETID)) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;用户信息加载成功&quot;</span>);</span><br><span class=\"line\">            System.out.println(msg.ID+msg.username);</span><br><span class=\"line\">            Vars.model.ID=msg.ID;</span><br><span class=\"line\">            Vars.model.username= msg.username;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这样我们的联机五子棋的主体内容就做完了！，剩下就是一些UI界面的布置和UI控件的封装和调用了，希望大家都能做出自己的五子棋。</p>\n<p>项目已上传至github   <a href=\"https://github.com/DemonWhiteY/Gobang_online\">https://github.com/DemonWhiteY/Gobang_online</a></p>\n<p>百度网盘 链接：<a href=\"https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS\">https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS</a><br>提取码：YYDS<br>–来自百度网盘超级会员V3的分享</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h1 id=\"网络模块\"><a href=\"#网络模块\" class=\"headerlink\" title=\"网络模块\"></a>网络模块</h1><p><img src=\"https://s2.loli.net/2023/12/25/wYDpmCsSJuFt5Rf.png\" alt=\"屏幕截图 2023-12-24 113957.png\"></p>\n<h2 id=\"定义Message-类\"><a href=\"#定义Message-类\" class=\"headerlink\" title=\"定义Message 类\"></a>定义Message 类</h2><p>在我们开发联机五子棋的过程中最大的一个问题是，各种消息太过复杂，对话消息，下棋消息，邀请消息，悔棋消息，将这些消息标准化定义，让服务器能够识别收到的到底是什么消息就很重要。因此我们专门将定义的Code类，定义了一系列内部编码，当然大家直接用宏定义也可以。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Message</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String content;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String time;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String code;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> color;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> x,y;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> ID;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> LinkedList&lt;user&gt; userlist;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code,<span class=\"type\">int</span> ID,String username)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.ID=ID;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username=username;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code,<span class=\"type\">int</span> ID)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.ID=ID;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code, LinkedList&lt;user&gt; userlist)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.userlist=userlist;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code,String username,String content,String time)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username=username;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.content=content;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.time=time;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code,<span class=\"type\">int</span> x,<span class=\"type\">int</span> y,<span class=\"type\">boolean</span> color)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.x=x;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.y=y;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.color=color;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code,String username)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username=username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">(String code)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code=code;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Message</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span>   <span class=\"title class_\">Code</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String MESSAGE=<span class=\"string\">&quot;message&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CHESS=<span class=\"string\">&quot;chess&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REQUEST=<span class=\"string\">&quot;request&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String BACK=<span class=\"string\">&quot;back&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String LOST=<span class=\"string\">&quot;lost&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String PEACE=<span class=\"string\">&quot;peace&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String LOADING=<span class=\"string\">&quot;loading&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String RENAME=<span class=\"string\">&quot;rename&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String GETID=<span class=\"string\">&quot;getid&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REFUSE=<span class=\"string\">&quot;refuse&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String STARTGAME=<span class=\"string\">&quot;startgame&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String PEACEGAME=<span class=\"string\">&quot;peacegame&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String WINGAME=<span class=\"string\">&quot;wingane&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REFUSEPEACE=<span class=\"string\">&quot;refusepeace&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String UPDATE=<span class=\"string\">&quot;update&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String OUTOFDATE=<span class=\"string\">&quot;outofdate&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h3><p>服务端和客户端的实例和之前的多人群聊系统相差不大，因为咱们的五子棋要设置联机大厅，所以还要储存所有用户的信息，因此服务端的程序也需要储存数据库，ServerModel类读者可以根据自己的需求创建。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> gobang;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ServerModel model=<span class=\"keyword\">new</span> <span class=\"title class_\">ServerModel</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LinkedList&lt;ObjectOutputStream&gt;online=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;ObjectOutputStream&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Server</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] arg)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"type\">ServerSocket</span> <span class=\"variable\">ss</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">8000</span>);</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> ID=<span class=\"number\">0</span>;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;正在连接中……&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">                <span class=\"type\">Socket</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> ss.accept();</span><br><span class=\"line\">                ServerThread newServerThtear=<span class=\"keyword\">new</span> <span class=\"title class_\">ServerThread</span>(s,ID);</span><br><span class=\"line\">                newServerThtear.start();</span><br><span class=\"line\">                user newuser=<span class=\"keyword\">new</span> <span class=\"title class_\">user</span>(<span class=\"string\">&quot;新用户&quot;</span>+ID,ID);</span><br><span class=\"line\">                model.adduser(newuser);</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;新用户加入,当前在线用户&quot;</span>+num+<span class=\"string\">&quot;人&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                num++;</span><br><span class=\"line\">                ID++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>服务端线程（其实大家的服务端也可以设计一个服务端的消息管理器，但是我这里就不做演示啦，就把那一大串if-else接到一个函数里就OK）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ServerThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Socket s;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectInputStream ois;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> ObjectOutputStream oos;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"type\">int</span> enemyID=-<span class=\"number\">1</span>;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"type\">int</span> ID;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ServerThread</span><span class=\"params\">(Socket s,<span class=\"type\">int</span> ID)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.s=s;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.ID=ID;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            ois = <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectInputStream</span>(s.getInputStream());</span><br><span class=\"line\">            oos = <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectOutputStream</span>(s.getOutputStream());</span><br><span class=\"line\">            Server.online.addLast(oos);</span><br><span class=\"line\">            Message Mmsg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(Code.GETID,ID,Server.model.getdata().get(ID).username);</span><br><span class=\"line\">            oos.writeObject(Mmsg);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Message msg=(Message)ois.readObject();</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(msg.code.equals(<span class=\"string\">&quot;message&quot;</span>)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (enemyID != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                        System.out.println(msg.time + <span class=\"string\">&quot;\\n&quot;</span> + msg.username + <span class=\"string\">&quot;:&quot;</span> + msg.content);</span><br><span class=\"line\">                        Server.online.get(enemyID).writeObject(msg);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(<span class=\"string\">&quot;chess&quot;</span>))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (enemyID != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                        System.out.println(msg.time + <span class=\"string\">&quot;\\n&quot;</span> + msg.username + <span class=\"string\">&quot;:&quot;</span> + msg.content);</span><br><span class=\"line\">                        Server.online.get(enemyID).writeObject(msg);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.LOADING))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                   Message answermsg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(Code.LOADING,Server.model.getdata());</span><br><span class=\"line\">                    oos.writeObject(answermsg);</span><br><span class=\"line\">                    System.out.println(Server.model.getdata().getFirst().username);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.UPDATE)) &#123;</span><br><span class=\"line\">                    LinkedList&lt;user&gt; List=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;&gt;();</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;Server.model.getdata().size();i++)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        List.addLast(Server.model.getdata().get(i));</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    Message answermsg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(Code.UPDATE,List);</span><br><span class=\"line\">                    System.out.println(answermsg.userlist.size());</span><br><span class=\"line\">                    System.out.println(answermsg.userlist.getFirst().username+<span class=\"string\">&quot; &quot;</span>+answermsg.userlist.getLast().username);</span><br><span class=\"line\">                   oos.writeObject(answermsg);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.RENAME))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Server.model.rename(<span class=\"built_in\">this</span>.ID,msg.username);</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;更改名字成功&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.REQUEST))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                   Message requestmsg=<span class=\"keyword\">new</span> <span class=\"title class_\">Message</span>(Code.REQUEST,ID, msg.username);</span><br><span class=\"line\">                    Server.online.get(msg.ID).writeObject(requestmsg);</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;请求发送给&quot;</span>+msg.ID);</span><br><span class=\"line\">                    <span class=\"built_in\">this</span>.enemyID=msg.ID;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.STARTGAME))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Server.online.get(msg.ID).writeObject(msg);</span><br><span class=\"line\">                    enemyID= msg.ID;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.REFUSE))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Server.online.get(msg.ID).writeObject(msg);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (enemyID != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                        Server.online.get(enemyID).writeObject(msg);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> gobang;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.UnknownHostException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NET</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span>  Socket s;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String host=<span class=\"string\">&quot;localhost&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> port=<span class=\"number\">8080</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    NET() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            s = <span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(<span class=\"string\">&quot;localhost&quot;</span>, <span class=\"number\">8080</span>);</span><br><span class=\"line\">            ObjectOutputStream os=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectOutputStream</span>(s.getOutputStream());</span><br><span class=\"line\">            ObjectInputStream is=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectInputStream</span>(s.getInputStream());</span><br><span class=\"line\">            SendThread sendThread=<span class=\"keyword\">new</span> <span class=\"title class_\">SendThread</span>(os);</span><br><span class=\"line\">            ReceiveThread receiveThread=<span class=\"keyword\">new</span> <span class=\"title class_\">ReceiveThread</span>(is);</span><br><span class=\"line\">            sendThread.start();</span><br><span class=\"line\">            receiveThread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">SETNET</span><span class=\"params\">()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            s.close();</span><br><span class=\"line\">            s = <span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(host,port);</span><br><span class=\"line\">            ObjectOutputStream os=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectOutputStream</span>(s.getOutputStream());</span><br><span class=\"line\">            ObjectInputStream is=<span class=\"keyword\">new</span> <span class=\"title class_\">ObjectInputStream</span>(s.getInputStream());</span><br><span class=\"line\">            SendThread sendThread=<span class=\"keyword\">new</span> <span class=\"title class_\">SendThread</span>(os);</span><br><span class=\"line\">            ReceiveThread receiveThread=<span class=\"keyword\">new</span> <span class=\"title class_\">ReceiveThread</span>(is);</span><br><span class=\"line\">            sendThread.start();</span><br><span class=\"line\">            receiveThread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"客户端发送线程\"><a href=\"#客户端发送线程\" class=\"headerlink\" title=\"客户端发送线程\"></a>客户端发送线程</h3><p>客户端的发送线程主要的工作就是检测客户端的MessageList,消息队列中是否有待处理的消息（是否为空），一旦有就立刻发送给服务端。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> gobang;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectOutputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SendThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectOutputStream os;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">SendThread</span><span class=\"params\">(ObjectOutputStream os)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.os = os;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!Vars.model.messageModel.isEmpty()) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"type\">Message</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> Vars.model.messageModel.getFirst();</span><br><span class=\"line\">                    System.out.println(msg.time+<span class=\"string\">&quot;\\n&quot;</span>+msg.username+<span class=\"string\">&quot;:&quot;</span>+msg.content);</span><br><span class=\"line\">                    os.writeObject(msg);</span><br><span class=\"line\">                    Vars.model.messageModel.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"客户端接收线程\"><a href=\"#客户端接收线程\" class=\"headerlink\" title=\"客户端接收线程\"></a>客户端接收线程</h3><p>接受线程同样只做一件事情，就是接受消息，一旦接收到消息就把它丢给消息管理器处理。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> gobang;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ReceiveThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObjectInputStream ois;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ReceiveThread</span><span class=\"params\">(ObjectInputStream ois)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>();</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.ois = ois;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">                <span class=\"type\">Message</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    msg = (Message) ois.readObject();</span><br><span class=\"line\">                    Vars.messageManager.getMessage(msg);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                </span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"消息管理器\"><a href=\"#消息管理器\" class=\"headerlink\" title=\"消息管理器\"></a>消息管理器</h1><p>客户端咱们刚才接收到消息后，没有做任何处理，只是调用了一个messageManager里的getMessage()函数，就是丢给，消息管理器，消息管理器就是处理我们接收到的网络消息的，根据接受到1消息完成我们的对应操作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> gobang;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">messageManager</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getMessage</span><span class=\"params\">(Message msg)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(msg.code.equals(<span class=\"string\">&quot;message&quot;</span>)) &#123;</span><br><span class=\"line\">            System.out.println(msg.time + <span class=\"string\">&quot;\\n&quot;</span> + msg.username + <span class=\"string\">&quot;:&quot;</span> + msg.content);</span><br><span class=\"line\">            Vars.talkPanel.showarea.append(msg.time + <span class=\"string\">&quot;\\n&quot;</span> + msg.username + <span class=\"string\">&quot;:&quot;</span> + msg.content + <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(<span class=\"string\">&quot;chess&quot;</span>))&#123;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">            Vars.controler.addNetChess(msg.x, msg.y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.BACK))&#123;</span><br><span class=\"line\">            Vars.controler.NETback();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.LOST)) &#123;</span><br><span class=\"line\">            Vars.dialogStyle.Gameover(Start.getStart(),<span class=\"string\">&quot;对方认输&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.PEACE)) &#123;</span><br><span class=\"line\">            Vars.dialogStyle.AnswerPeace(Start.getStart());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.LOADING))&#123;</span><br><span class=\"line\">            Vars.model.userList=msg.userlist;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.REQUEST)) &#123;</span><br><span class=\"line\">            Vars.dialogStyle.AnswerRequest(MainWindows.getMainWindows(), msg.username, <span class=\"number\">30</span>);</span><br><span class=\"line\">            Vars.model.enemyID= msg.ID;</span><br><span class=\"line\">            Vars.model.enemyname=msg.username;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.REFUSE)) &#123;</span><br><span class=\"line\">            Vars.dialogStyle.waitDialog(MainWindows.getMainWindows(),<span class=\"string\">&quot;对方拒绝了你的邀请&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\">            Vars.model.enemyID=-<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.STARTGAME))&#123;</span><br><span class=\"line\">            Vars.controler.turnyou=<span class=\"literal\">false</span>;</span><br><span class=\"line\">            Vars.roundPanel.update();</span><br><span class=\"line\">            Start start=Start.getStart();</span><br><span class=\"line\">            Vars.timePanel.restart();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.PEACEGAME))&#123;</span><br><span class=\"line\">            Vars.dialogStyle.Gameover(Start.getStart(),<span class=\"string\">&quot;平局&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.REFUSEPEACE))&#123;</span><br><span class=\"line\">            Vars.dialogStyle.waitDialog(Start.getStart(),<span class=\"string\">&quot;对方拒绝了你的求和&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.code.equals(Code.UPDATE))&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(msg.userlist.getFirst().username+<span class=\"string\">&quot; &quot;</span>+msg.userlist.getLast().username);</span><br><span class=\"line\">            System.out.println(msg.userlist.size());</span><br><span class=\"line\">            MainWindows.getMainWindows().Player.removeAll();</span><br><span class=\"line\"></span><br><span class=\"line\">            Vars.model.userList=msg.userlist;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Vars.model.userList.size()==<span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                JLabel label=<span class=\"keyword\">new</span> <span class=\"title class_\">JLabel</span>(<span class=\"string\">&quot;当前无其他用户&quot;</span>);</span><br><span class=\"line\">                Font font=<span class=\"keyword\">new</span> <span class=\"title class_\">Font</span>(<span class=\"string\">&quot;黑体&quot;</span>,Font.PLAIN,<span class=\"number\">50</span>);</span><br><span class=\"line\">                label.setFont(font);</span><br><span class=\"line\">                label.setForeground(Color.decode(<span class=\"string\">&quot;#0fa99a&quot;</span>));</span><br><span class=\"line\">                MainWindows.getMainWindows().Player.add(label);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; Vars.model.userList.size(); i++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(i!=Vars.model.ID) &#123;</span><br><span class=\"line\">                        <span class=\"type\">PlayerLabel</span> <span class=\"variable\">player</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PlayerLabel</span>(msg.userlist.get(i).username, msg.userlist.get(i).userID);</span><br><span class=\"line\">                        MainWindows.getMainWindows().Player.add(player);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            JLabel label2=<span class=\"keyword\">new</span> <span class=\"title class_\">JLabel</span>(<span class=\"string\">&quot;当前在线人数&quot;</span>+String.valueOf(msg.userlist.size()));</span><br><span class=\"line\">            Font font=<span class=\"keyword\">new</span> <span class=\"title class_\">Font</span>(<span class=\"string\">&quot;黑体&quot;</span>,Font.PLAIN,<span class=\"number\">50</span>);</span><br><span class=\"line\">            label2.setFont(font);</span><br><span class=\"line\">            label2.setForeground(Color.decode(<span class=\"string\">&quot;#0fa99a&quot;</span>));</span><br><span class=\"line\">            MainWindows.getMainWindows().Player.add(label2);</span><br><span class=\"line\">            MainWindows.getMainWindows().Player.updateUI();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.code.equals(Code.GETID)) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;用户信息加载成功&quot;</span>);</span><br><span class=\"line\">            System.out.println(msg.ID+msg.username);</span><br><span class=\"line\">            Vars.model.ID=msg.ID;</span><br><span class=\"line\">            Vars.model.username= msg.username;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这样我们的联机五子棋的主体内容就做完了！，剩下就是一些UI界面的布置和UI控件的封装和调用了，希望大家都能做出自己的五子棋。</p>\n<p>项目已上传至github   <a href=\"https://github.com/DemonWhiteY/Gobang_online\">https://github.com/DemonWhiteY/Gobang_online</a></p>\n<p>百度网盘 链接：<a href=\"https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS\">https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS</a><br>提取码：YYDS<br>–来自百度网盘超级会员V3的分享</p>\n"},{"title":"JAVA设计联机五子棋","date":"2023-12-23T14:49:15.000Z","_content":"\n项目已上传至github   <https://github.com/DemonWhiteY/Gobang_online>\n\n百度网盘 链接：<https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS>\n提取码：YYDS\n--来自百度网盘超级会员V3的分享\n\n网盘下载可以看到Server文件夹和Client文件夹，控制台打开 java -jar GObang.jar 注意，要先打开服务端文件，再打开客户端文件，由于是联机游戏，最少需要打开两次客户端才能相互邀请正常游戏。\n\n先来看看游戏最终效果\n![屏幕截图 2023-12-25 205853.png](https://s2.loli.net/2023/12/25/zPb7nTuekA5JQXF.png)\n\n联机大厅具有以下功能：\n\n- 更改用户名字\n- 用户刷新\n- 用户邀请\n- 用户更改服务器IP和端口\n\n<br>\n\n![p1.png](https://s2.loli.net/2023/12/24/gzoUHeBYk16ZMrE.png)\n\n游戏主界面具有以下功能\n\n- 玩家交替下棋，对方回合不得下棋。\n- 玩家点击下棋，拖拽移动\n- 玩家悔棋，最大悔棋次数3\n- 认输\n- 求和，最大求和次数3\n- 显示对战玩家昵称\n- 超时，没人30秒，超时警告，超时3次输掉比赛。\n\n# JAVAGUI设计——swing与awt\n\n在实现JAVA制作的五子棋之前，我们要先来补充一些基础知识，其中第一部分就是JAVA中swing与awt组件的知识\n\n## 基本框架——JFream与JPanel\n\nJFream属于JAVAGUI的最顶层组件，故名思意，就是JAVA最高的框架，所有的GUI组件都是写在JFream中的。\n\nJPanel呢，则是相当于一个容器，画板的存在，因为一个JFream上如果存放太多东西容易导致布局的翁乱，因此经常在JFream下嵌套几个JFream来解决这样的问题。\n\n### 创建一个简单的JFream窗口\n\n```java\nimport javax.swing.*;\nimport java.awt.Color ;\npublic class JFrameDemo01{\n    public static void main(String args[]){\n        JFrame f = new JFrame(\"第一个Swing窗体\") ;\n        f.setSize(230,80) ;             // 设置组件的大小\n        f.setBackground(Color.WHITE) ;  // 将背景设置成白色\n        JLabel label=new JLabel(\"label\");\n        f.add(label);\n        f.setLocation(300,200) ;        // 设置组件的显示位置\n        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);      //设置窗口关闭及结束进程\n        f.setVisible(true) ;            // 让组件可见\n    }\n};\n```\n\n上述这段代码即为创建一个简单窗口的方法，但仍然有几个需要注意的点\n\n- JFream需要setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 很多同学觉得这一步没有太大用处把他删了程序也能运行，但是这有一个很重要的问题就是窗口关闭不代表程序关闭，窗口关闭只是JFream一个实例被关闭，而不是结束程序。\n- 另外就是千万记得setVisible(true);\n\n## setLayout\n\n上面我们的程序中我们调用了一个JLabel组件，我们看到它被排在了窗口的最左边，很显然这是随机插入的，那么怎么add就能到我们需要的位置呢，以及如果插入多个Label怎么处理，这就需要我们来给fream/panel，设置模板。\n\n### BoardLayout\n\n## 让程序更多交互——JDialog\n\nJDialog是除JFrame一外的另一个顶级模块，Dialog和Fream的不同之处在于Dialog是依托于JFreamc存在的，即JFrame关闭，JDialog也会关闭。\n\n```java\nimport javax.swing.JButton;\nimport javax.swing.JDialog;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\n\npublic class MyDialogExample {\n\n    public static void main(String[] args) {\n        // 创建 JFrame\n        JFrame mainFrame = new JFrame(\"Main Frame\");\n        mainFrame.setSize(400, 300);\n        mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\n        // 创建一个按钮，点击时显示对话框\n        JButton showDialogButton = new JButton(\"Show Dialog\");\n        showDialogButton.addActionListener(e -> showMyDialog(mainFrame));\n\n        // 将按钮添加到 JFrame\n        JPanel panel = new JPanel();\n        panel.add(showDialogButton);\n        mainFrame.add(panel);\n\n        // 设置 JFrame 可见\n        mainFrame.setVisible(true);\n    }\n\n    // 创建并显示自定义对话框\n    private static void showMyDialog(JFrame parentFrame) {\n        // 创建 JDialog\n        JDialog myDialog = new JDialog(parentFrame, \"My Dialog\", true);\n        myDialog.setSize(300, 200);\n\n        // 在对话框中添加组件\n        JPanel dialogPanel = new JPanel();\n        dialogPanel.add(new JLabel(\"This is a custom dialog.\"));\n        myDialog.add(dialogPanel);\n\n        // 设置对话框可见\n        myDialog.setVisible(true);\n    }\n}\n\n```\n\n关于Jdialog,需要强调以下几点。\n\n#### dialog的相对位置\n\ndailog是基于JFraem存在的所以我们在实际开发中希望JFrame的位置最好是相对JFrame的，最好的方式即放在JFrame中间，怎么解决呢？\n\n```java\n JDialog waitDialog=new JDialog(frame);\n         waitDialog.setBounds(600,600,200,150);\n         waitDialog.setLocationRelativeTo(frame);\n         waitDialog.setLocation(frame.getWidth()/2-100,frame.getWidth()/2-50);\n```\n\n只需要调用setLocationRelativeTo()函数，再设置Dialog的Location，即为相对位置啦。\n\n## 自定义你的UI组件\n\n![p1.png](https://s2.loli.net/2023/12/24/gzoUHeBYk16ZMrE.png)\n可以看到我们实际要做的游戏中的大多数UI控件都不是JAVA swing直接为我们提供的那些丑不拉级的UI控件，而此时就需要我们封装我们自己的UI控件，这里主要提供两种方法供大家使用。\n\n### JPanel+Graphics drawimage\n\n```java\n public  Image background=((Image) new ImageIcon(\"src/pic/label.png\").getImage());\n```\n\n然后再paintCompoent函数中绘制背景\n\n```java\nprotected void paintComponent(Graphics g) {\n        super.paintComponent(g);\n        g.drawImage(background, 0, 0, this.getWidth(), this.getHeight(), this);\n    }\n```\n\n### JButton setIcon\n\n```java\nImageIcon icon = new ImageIcon(\"src/pic/btn.png\");//根据路径创建图标\n            Image temp1 = icon.getImage().getScaledInstance(update.getWidth(), \n             update.getHeight(), icon.getImage().SCALE_SMOOTH);\n            icon = new ImageIcon(temp1);\n            update.setIcon(icon);\n```\n\n一般适用于JButton和JLabel的创建。\n\n创建完以后我们就发现一个问题，就是BUTTON旁边的白边太突兀，太丑了，我们想把它去掉，怎么办，这个时候不要急，我们只需要下面两行代码就能解决。\n\n```java\nthis.setBorderPainted(false);\nthis.setFocusPainted(false);\n```\n\n### 如何更新UI组件\n\n有时候我们的面板上的UI组件会需要更新，这是就需要我们调用以下的三件套来实现更新UI的效果。\n\n```java\npanel.removeAll();\n//重写panel中的组件；\npanel.repaint();\npanel.updateUI();\n```\n\n# JAVA网络编程\n\n然后，应为我们要完成的是联机模式的五子棋嘛，这是就需要我们学习一些网络编程的知识了。\n\n## TCP协议与UDP协议\n\n### TCP（传输控制协议）\n\n- 连接性： TCP是面向连接的协议，意味着在通信之前需要建立连接，然后进行数据传输，最后释放连接。\n\n- 可靠性： TCP提供可靠的数据传输，确保数据的完整性和顺序性。如果有数据包丢失，TCP会进行重传，以保证所有数据都被正确地接收。\n\n- 流控制和拥塞控制： TCP具有流控制和拥塞控制机制，可以根据网络的状态动态调整数据的传输速率，以防止网络拥塞。\n\n- 适用场景： 适用于对数据完整性要求较高的应用，如文件传输、网页访问、电子邮件等。\n\n### UDP（用户数据报协议）\n\n- 连接性： UDP是无连接的协议，通信双方不需要建立连接即可直接发送数据。\n\n- 可靠性： UDP不提供可靠的数据传输，不保证数据的完整性和顺序性。因此，它更轻量级，但也更容易丢失数据包。\n\n- 流控制和拥塞控制： UDP没有流控制和拥塞控制机制，传输速率由应用程序自己控制。\n\n- 适用场景： 适用于对实时性要求较高、可以容忍少量数据丢失的应用，如音频和视频流传输、在线游戏等。\n\n### 优劣比较\n\n#### TCP的优势\n\n- 数据完整性和顺序性得到保障，适用于对可靠性要求高的应用。\n- 适用于大文件传输，因为可以确保所有数据正确到达。\n\n#### TCP的劣势\n\n- 较高的开销，包括连接的建立和释放。\n- 不适合实时性要求很高的应用，因为连接的建立和拆除都需要一定的时间。\n\n#### UDP的优势\n\n- 低延迟，适用于实时性要求高的应用。\n- 简单、轻量级，适用于简单的数据传输场景。\n\n#### UDP的劣势\n\n- 不提供数据完整性和顺序性的保障，应用需要自行处理丢失数据的情况。\n- 不适合大文件传输，因为无法保证所有数据都正确到达。\n\n因此选择通讯协议时，需要·根据项目的实际情况来选择TCP和UDP协议，如果是对传输实时性要求高的项目，比如大型MMORPG游戏，就需要使用UDP协议来提升用户体验，如果是对于数据传输顺序要求较高，对实时性要求较低，比如五子棋，就可使用TCP通信。\n\n## Scoket\n\n服务器端\n\n```java\n    package socket.socket1.socket;\n\nimport java.io.BufferedReader;\n\nimport java.io.BufferedWriter;\n\nimport java.io.IOException;\n\nimport java.io.InputStreamReader;\n\nimport java.net.ServerSocket;\n\nimport java.net.Socket;\n\npublic class ServerSocketTest {\n\npublic static void main(String[] args) {\n\ntry {\n\n// 初始化服务端socket并且绑定9999端口\n\n            ServerSocket serverSocket  =new ServerSocket(9999);\n\n            //等待客户端的连接\n\n            Socket socket = serverSocket.accept();\n\n            //获取输入流\n\n            BufferedReader bufferedReader =new BufferedReader(new InputStreamReader(socket.getInputStream()));\n\n            //读取一行数据\n\n            String str = bufferedReader.readLine();\n\n            //输出打印\n\n            System.out.println(str);\n\n        }catch (IOException e) {\n\ne.printStackTrace();\n\n        }\n\n}\n\n}\n\n```\n\n客户端\n\n```java\npackage socket.socket1.socket;\n\nimport java.io.BufferedWriter;\n\nimport java.io.IOException;\n\nimport java.io.OutputStreamWriter;\n\nimport java.net.Socket;\n\npublic class ClientSocket {\n\npublic static void main(String[] args) {\n\ntry {\n\nSocket socket =new Socket(\"localhost\",9999);\n\n            BufferedWriter bufferedWriter =new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));\n\n            String str=\"你好，这是我的第一个socket\";\n\n            bufferedWriter.write(str);\n\n            //刷新输入流\n\n            bufferedWriter.flush();\n\n            //关闭socket的输出流\n\n            socket.shutdownOutput();\n\n        }catch (IOException e) {\n\ne.printStackTrace();\n\n        }\n\n}\n\n}\n\n\n```\n\n这里要强调一个点就是客户端为什么要调用一个shuttdownOutput()函数,这个函数其实再这里可以替换成socket.close()函数，为什么要调用这两个函数呢，原因就在于socket再执行过程中会形成阻塞，阻塞的函数一个是accept()函数，另一个就是read()函数，以及一切读取的函数，这样代码运行到此处时，如果没有接受到信息，代码就会停在这里不动，直到接收到。\n\n<br>\n那么回过头来看我们的代码，如果我们没有给服务端传输客户端已经关闭的消息，服务端的read 就会接着阻塞在那里，等待客户端传输信息，但此时客户端已经关闭进程了，此时就会抛出一个Connection reset的异常\n\n<br>\n\n我们就可以使用客户端和服务器通讯了，成功以后我们会发现客户端只能传输一条语句，就推出了，这明显和我们的预期不符，所以我们接下来就是要实现客户端和服务器之间的实时通讯\n\n## 利用while(true)接收多条消息\n\n服务端\n\n```java\npackage socket.socket1.socket;\n\nimport java.io.BufferedReader;\n\nimport java.io.BufferedWriter;\n\nimport java.io.IOException;\n\nimport java.io.InputStreamReader;\n\nimport java.net.ServerSocket;\n\nimport java.net.Socket;\n\npublic class ServerSocketTest {\n\npublic static void main(String[] args) {\n\ntry {\n\n// 初始化服务端socket并且绑定9999端口\n\n            ServerSocket serverSocket  =new ServerSocket(9999);\n\n            //等待客户端的连接\n\n            Socket socket = serverSocket.accept();\n\n            //获取输入流,并且指定统一的编码格式\n\n            BufferedReader bufferedReader =new BufferedReader(new InputStreamReader(socket.getInputStream(),\"UTF-8\"));\n            //读取一行数据\n            String str;\n            //通过while循环不断读取信息，\n            while ((str = bufferedReader.readLine())!=null){\n\n                System.out.println(str);\n            }\n\n}catch (IOException e) {\n\ne.printStackTrace();\n\n        }\n\n}\n\n```\n\n客户端\n\n```java\npackage socket.socket1.socket;\n\nimport java.io.*;\n\nimport java.net.Socket;\n\npublic class ClientSocket {\n\npublic static void main(String[] args) {\n\ntry {\n\n//初始化一个socket\n\n            Socket socket =new Socket(\"127.0.0.1\",9999);\n\n            //通过socket获取字符流\n\n            BufferedWriter bufferedWriter =new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));\n\n            //通过标准输入流获取字符流\n\n            BufferedReader bufferedReader =new BufferedReader(new InputStreamReader(System.in,\"UTF-8\"));\n\n          while (true){\n\nString str = bufferedReader.readLine();\n\n              bufferedWriter.write(str);\n\n              bufferedWriter.write(\"\\n\");\n\n              bufferedWriter.flush();\n\n          }\n\n}catch (IOException e) {\n\ne.printStackTrace();\n\n        }\n\n}\n\n}\n\n\n```\n\n# JAVA多线程\n\n### 双线程即时通讯客户端\n\n我们想，我们的客户端想要无时无刻的和服务器通讯，就需要无时无刻的准备收到服务器的消息，因为我们也不知道服务器到底什么时候给我们发消息。\n\n<br>\n\n而在刚刚的代码中，我们又知道了socket的read会发生阻塞，所以如果我们一只检测服务端传来的消息，我们就被迫阻塞在那个地方，没有办法进行其他操作，怎么办，此时就需要我们使用多线程的知识，构建Receive 和Send两个线程来进行客户端和服务器端之间的实时通讯。\n\n## 多用户与服务器的连接\n\n当我们的服务器有多位用户时，是不是每一个用户就需要给分配一个线程？因此动态的加载新线程是很有必要的。\n","source":"_posts/JAVA联机五子棋（一）.md","raw":"---\ntitle: JAVA设计联机五子棋\ndate: 2023-12-23 22:49:15\ntags: JAVA \n---\n\n项目已上传至github   <https://github.com/DemonWhiteY/Gobang_online>\n\n百度网盘 链接：<https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS>\n提取码：YYDS\n--来自百度网盘超级会员V3的分享\n\n网盘下载可以看到Server文件夹和Client文件夹，控制台打开 java -jar GObang.jar 注意，要先打开服务端文件，再打开客户端文件，由于是联机游戏，最少需要打开两次客户端才能相互邀请正常游戏。\n\n先来看看游戏最终效果\n![屏幕截图 2023-12-25 205853.png](https://s2.loli.net/2023/12/25/zPb7nTuekA5JQXF.png)\n\n联机大厅具有以下功能：\n\n- 更改用户名字\n- 用户刷新\n- 用户邀请\n- 用户更改服务器IP和端口\n\n<br>\n\n![p1.png](https://s2.loli.net/2023/12/24/gzoUHeBYk16ZMrE.png)\n\n游戏主界面具有以下功能\n\n- 玩家交替下棋，对方回合不得下棋。\n- 玩家点击下棋，拖拽移动\n- 玩家悔棋，最大悔棋次数3\n- 认输\n- 求和，最大求和次数3\n- 显示对战玩家昵称\n- 超时，没人30秒，超时警告，超时3次输掉比赛。\n\n# JAVAGUI设计——swing与awt\n\n在实现JAVA制作的五子棋之前，我们要先来补充一些基础知识，其中第一部分就是JAVA中swing与awt组件的知识\n\n## 基本框架——JFream与JPanel\n\nJFream属于JAVAGUI的最顶层组件，故名思意，就是JAVA最高的框架，所有的GUI组件都是写在JFream中的。\n\nJPanel呢，则是相当于一个容器，画板的存在，因为一个JFream上如果存放太多东西容易导致布局的翁乱，因此经常在JFream下嵌套几个JFream来解决这样的问题。\n\n### 创建一个简单的JFream窗口\n\n```java\nimport javax.swing.*;\nimport java.awt.Color ;\npublic class JFrameDemo01{\n    public static void main(String args[]){\n        JFrame f = new JFrame(\"第一个Swing窗体\") ;\n        f.setSize(230,80) ;             // 设置组件的大小\n        f.setBackground(Color.WHITE) ;  // 将背景设置成白色\n        JLabel label=new JLabel(\"label\");\n        f.add(label);\n        f.setLocation(300,200) ;        // 设置组件的显示位置\n        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);      //设置窗口关闭及结束进程\n        f.setVisible(true) ;            // 让组件可见\n    }\n};\n```\n\n上述这段代码即为创建一个简单窗口的方法，但仍然有几个需要注意的点\n\n- JFream需要setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 很多同学觉得这一步没有太大用处把他删了程序也能运行，但是这有一个很重要的问题就是窗口关闭不代表程序关闭，窗口关闭只是JFream一个实例被关闭，而不是结束程序。\n- 另外就是千万记得setVisible(true);\n\n## setLayout\n\n上面我们的程序中我们调用了一个JLabel组件，我们看到它被排在了窗口的最左边，很显然这是随机插入的，那么怎么add就能到我们需要的位置呢，以及如果插入多个Label怎么处理，这就需要我们来给fream/panel，设置模板。\n\n### BoardLayout\n\n## 让程序更多交互——JDialog\n\nJDialog是除JFrame一外的另一个顶级模块，Dialog和Fream的不同之处在于Dialog是依托于JFreamc存在的，即JFrame关闭，JDialog也会关闭。\n\n```java\nimport javax.swing.JButton;\nimport javax.swing.JDialog;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\n\npublic class MyDialogExample {\n\n    public static void main(String[] args) {\n        // 创建 JFrame\n        JFrame mainFrame = new JFrame(\"Main Frame\");\n        mainFrame.setSize(400, 300);\n        mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\n        // 创建一个按钮，点击时显示对话框\n        JButton showDialogButton = new JButton(\"Show Dialog\");\n        showDialogButton.addActionListener(e -> showMyDialog(mainFrame));\n\n        // 将按钮添加到 JFrame\n        JPanel panel = new JPanel();\n        panel.add(showDialogButton);\n        mainFrame.add(panel);\n\n        // 设置 JFrame 可见\n        mainFrame.setVisible(true);\n    }\n\n    // 创建并显示自定义对话框\n    private static void showMyDialog(JFrame parentFrame) {\n        // 创建 JDialog\n        JDialog myDialog = new JDialog(parentFrame, \"My Dialog\", true);\n        myDialog.setSize(300, 200);\n\n        // 在对话框中添加组件\n        JPanel dialogPanel = new JPanel();\n        dialogPanel.add(new JLabel(\"This is a custom dialog.\"));\n        myDialog.add(dialogPanel);\n\n        // 设置对话框可见\n        myDialog.setVisible(true);\n    }\n}\n\n```\n\n关于Jdialog,需要强调以下几点。\n\n#### dialog的相对位置\n\ndailog是基于JFraem存在的所以我们在实际开发中希望JFrame的位置最好是相对JFrame的，最好的方式即放在JFrame中间，怎么解决呢？\n\n```java\n JDialog waitDialog=new JDialog(frame);\n         waitDialog.setBounds(600,600,200,150);\n         waitDialog.setLocationRelativeTo(frame);\n         waitDialog.setLocation(frame.getWidth()/2-100,frame.getWidth()/2-50);\n```\n\n只需要调用setLocationRelativeTo()函数，再设置Dialog的Location，即为相对位置啦。\n\n## 自定义你的UI组件\n\n![p1.png](https://s2.loli.net/2023/12/24/gzoUHeBYk16ZMrE.png)\n可以看到我们实际要做的游戏中的大多数UI控件都不是JAVA swing直接为我们提供的那些丑不拉级的UI控件，而此时就需要我们封装我们自己的UI控件，这里主要提供两种方法供大家使用。\n\n### JPanel+Graphics drawimage\n\n```java\n public  Image background=((Image) new ImageIcon(\"src/pic/label.png\").getImage());\n```\n\n然后再paintCompoent函数中绘制背景\n\n```java\nprotected void paintComponent(Graphics g) {\n        super.paintComponent(g);\n        g.drawImage(background, 0, 0, this.getWidth(), this.getHeight(), this);\n    }\n```\n\n### JButton setIcon\n\n```java\nImageIcon icon = new ImageIcon(\"src/pic/btn.png\");//根据路径创建图标\n            Image temp1 = icon.getImage().getScaledInstance(update.getWidth(), \n             update.getHeight(), icon.getImage().SCALE_SMOOTH);\n            icon = new ImageIcon(temp1);\n            update.setIcon(icon);\n```\n\n一般适用于JButton和JLabel的创建。\n\n创建完以后我们就发现一个问题，就是BUTTON旁边的白边太突兀，太丑了，我们想把它去掉，怎么办，这个时候不要急，我们只需要下面两行代码就能解决。\n\n```java\nthis.setBorderPainted(false);\nthis.setFocusPainted(false);\n```\n\n### 如何更新UI组件\n\n有时候我们的面板上的UI组件会需要更新，这是就需要我们调用以下的三件套来实现更新UI的效果。\n\n```java\npanel.removeAll();\n//重写panel中的组件；\npanel.repaint();\npanel.updateUI();\n```\n\n# JAVA网络编程\n\n然后，应为我们要完成的是联机模式的五子棋嘛，这是就需要我们学习一些网络编程的知识了。\n\n## TCP协议与UDP协议\n\n### TCP（传输控制协议）\n\n- 连接性： TCP是面向连接的协议，意味着在通信之前需要建立连接，然后进行数据传输，最后释放连接。\n\n- 可靠性： TCP提供可靠的数据传输，确保数据的完整性和顺序性。如果有数据包丢失，TCP会进行重传，以保证所有数据都被正确地接收。\n\n- 流控制和拥塞控制： TCP具有流控制和拥塞控制机制，可以根据网络的状态动态调整数据的传输速率，以防止网络拥塞。\n\n- 适用场景： 适用于对数据完整性要求较高的应用，如文件传输、网页访问、电子邮件等。\n\n### UDP（用户数据报协议）\n\n- 连接性： UDP是无连接的协议，通信双方不需要建立连接即可直接发送数据。\n\n- 可靠性： UDP不提供可靠的数据传输，不保证数据的完整性和顺序性。因此，它更轻量级，但也更容易丢失数据包。\n\n- 流控制和拥塞控制： UDP没有流控制和拥塞控制机制，传输速率由应用程序自己控制。\n\n- 适用场景： 适用于对实时性要求较高、可以容忍少量数据丢失的应用，如音频和视频流传输、在线游戏等。\n\n### 优劣比较\n\n#### TCP的优势\n\n- 数据完整性和顺序性得到保障，适用于对可靠性要求高的应用。\n- 适用于大文件传输，因为可以确保所有数据正确到达。\n\n#### TCP的劣势\n\n- 较高的开销，包括连接的建立和释放。\n- 不适合实时性要求很高的应用，因为连接的建立和拆除都需要一定的时间。\n\n#### UDP的优势\n\n- 低延迟，适用于实时性要求高的应用。\n- 简单、轻量级，适用于简单的数据传输场景。\n\n#### UDP的劣势\n\n- 不提供数据完整性和顺序性的保障，应用需要自行处理丢失数据的情况。\n- 不适合大文件传输，因为无法保证所有数据都正确到达。\n\n因此选择通讯协议时，需要·根据项目的实际情况来选择TCP和UDP协议，如果是对传输实时性要求高的项目，比如大型MMORPG游戏，就需要使用UDP协议来提升用户体验，如果是对于数据传输顺序要求较高，对实时性要求较低，比如五子棋，就可使用TCP通信。\n\n## Scoket\n\n服务器端\n\n```java\n    package socket.socket1.socket;\n\nimport java.io.BufferedReader;\n\nimport java.io.BufferedWriter;\n\nimport java.io.IOException;\n\nimport java.io.InputStreamReader;\n\nimport java.net.ServerSocket;\n\nimport java.net.Socket;\n\npublic class ServerSocketTest {\n\npublic static void main(String[] args) {\n\ntry {\n\n// 初始化服务端socket并且绑定9999端口\n\n            ServerSocket serverSocket  =new ServerSocket(9999);\n\n            //等待客户端的连接\n\n            Socket socket = serverSocket.accept();\n\n            //获取输入流\n\n            BufferedReader bufferedReader =new BufferedReader(new InputStreamReader(socket.getInputStream()));\n\n            //读取一行数据\n\n            String str = bufferedReader.readLine();\n\n            //输出打印\n\n            System.out.println(str);\n\n        }catch (IOException e) {\n\ne.printStackTrace();\n\n        }\n\n}\n\n}\n\n```\n\n客户端\n\n```java\npackage socket.socket1.socket;\n\nimport java.io.BufferedWriter;\n\nimport java.io.IOException;\n\nimport java.io.OutputStreamWriter;\n\nimport java.net.Socket;\n\npublic class ClientSocket {\n\npublic static void main(String[] args) {\n\ntry {\n\nSocket socket =new Socket(\"localhost\",9999);\n\n            BufferedWriter bufferedWriter =new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));\n\n            String str=\"你好，这是我的第一个socket\";\n\n            bufferedWriter.write(str);\n\n            //刷新输入流\n\n            bufferedWriter.flush();\n\n            //关闭socket的输出流\n\n            socket.shutdownOutput();\n\n        }catch (IOException e) {\n\ne.printStackTrace();\n\n        }\n\n}\n\n}\n\n\n```\n\n这里要强调一个点就是客户端为什么要调用一个shuttdownOutput()函数,这个函数其实再这里可以替换成socket.close()函数，为什么要调用这两个函数呢，原因就在于socket再执行过程中会形成阻塞，阻塞的函数一个是accept()函数，另一个就是read()函数，以及一切读取的函数，这样代码运行到此处时，如果没有接受到信息，代码就会停在这里不动，直到接收到。\n\n<br>\n那么回过头来看我们的代码，如果我们没有给服务端传输客户端已经关闭的消息，服务端的read 就会接着阻塞在那里，等待客户端传输信息，但此时客户端已经关闭进程了，此时就会抛出一个Connection reset的异常\n\n<br>\n\n我们就可以使用客户端和服务器通讯了，成功以后我们会发现客户端只能传输一条语句，就推出了，这明显和我们的预期不符，所以我们接下来就是要实现客户端和服务器之间的实时通讯\n\n## 利用while(true)接收多条消息\n\n服务端\n\n```java\npackage socket.socket1.socket;\n\nimport java.io.BufferedReader;\n\nimport java.io.BufferedWriter;\n\nimport java.io.IOException;\n\nimport java.io.InputStreamReader;\n\nimport java.net.ServerSocket;\n\nimport java.net.Socket;\n\npublic class ServerSocketTest {\n\npublic static void main(String[] args) {\n\ntry {\n\n// 初始化服务端socket并且绑定9999端口\n\n            ServerSocket serverSocket  =new ServerSocket(9999);\n\n            //等待客户端的连接\n\n            Socket socket = serverSocket.accept();\n\n            //获取输入流,并且指定统一的编码格式\n\n            BufferedReader bufferedReader =new BufferedReader(new InputStreamReader(socket.getInputStream(),\"UTF-8\"));\n            //读取一行数据\n            String str;\n            //通过while循环不断读取信息，\n            while ((str = bufferedReader.readLine())!=null){\n\n                System.out.println(str);\n            }\n\n}catch (IOException e) {\n\ne.printStackTrace();\n\n        }\n\n}\n\n```\n\n客户端\n\n```java\npackage socket.socket1.socket;\n\nimport java.io.*;\n\nimport java.net.Socket;\n\npublic class ClientSocket {\n\npublic static void main(String[] args) {\n\ntry {\n\n//初始化一个socket\n\n            Socket socket =new Socket(\"127.0.0.1\",9999);\n\n            //通过socket获取字符流\n\n            BufferedWriter bufferedWriter =new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));\n\n            //通过标准输入流获取字符流\n\n            BufferedReader bufferedReader =new BufferedReader(new InputStreamReader(System.in,\"UTF-8\"));\n\n          while (true){\n\nString str = bufferedReader.readLine();\n\n              bufferedWriter.write(str);\n\n              bufferedWriter.write(\"\\n\");\n\n              bufferedWriter.flush();\n\n          }\n\n}catch (IOException e) {\n\ne.printStackTrace();\n\n        }\n\n}\n\n}\n\n\n```\n\n# JAVA多线程\n\n### 双线程即时通讯客户端\n\n我们想，我们的客户端想要无时无刻的和服务器通讯，就需要无时无刻的准备收到服务器的消息，因为我们也不知道服务器到底什么时候给我们发消息。\n\n<br>\n\n而在刚刚的代码中，我们又知道了socket的read会发生阻塞，所以如果我们一只检测服务端传来的消息，我们就被迫阻塞在那个地方，没有办法进行其他操作，怎么办，此时就需要我们使用多线程的知识，构建Receive 和Send两个线程来进行客户端和服务器端之间的实时通讯。\n\n## 多用户与服务器的连接\n\n当我们的服务器有多位用户时，是不是每一个用户就需要给分配一个线程？因此动态的加载新线程是很有必要的。\n","slug":"JAVA联机五子棋（一）","published":1,"updated":"2023-12-25T13:44:30.099Z","_id":"clqkxmeje0000qcdycz0q3z2p","comments":1,"layout":"post","photos":[],"link":"","content":"<p>项目已上传至github   <a href=\"https://github.com/DemonWhiteY/Gobang_online\">https://github.com/DemonWhiteY/Gobang_online</a></p>\n<p>百度网盘 链接：<a href=\"https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS\">https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS</a><br>提取码：YYDS<br>–来自百度网盘超级会员V3的分享</p>\n<p>网盘下载可以看到Server文件夹和Client文件夹，控制台打开 java -jar GObang.jar 注意，要先打开服务端文件，再打开客户端文件，由于是联机游戏，最少需要打开两次客户端才能相互邀请正常游戏。</p>\n<p>先来看看游戏最终效果<br><img src=\"https://s2.loli.net/2023/12/25/zPb7nTuekA5JQXF.png\" alt=\"屏幕截图 2023-12-25 205853.png\"></p>\n<p>联机大厅具有以下功能：</p>\n<ul>\n<li>更改用户名字</li>\n<li>用户刷新</li>\n<li>用户邀请</li>\n<li>用户更改服务器IP和端口</li>\n</ul>\n<br>\n\n<p><img src=\"https://s2.loli.net/2023/12/24/gzoUHeBYk16ZMrE.png\" alt=\"p1.png\"></p>\n<p>游戏主界面具有以下功能</p>\n<ul>\n<li>玩家交替下棋，对方回合不得下棋。</li>\n<li>玩家点击下棋，拖拽移动</li>\n<li>玩家悔棋，最大悔棋次数3</li>\n<li>认输</li>\n<li>求和，最大求和次数3</li>\n<li>显示对战玩家昵称</li>\n<li>超时，没人30秒，超时警告，超时3次输掉比赛。</li>\n</ul>\n<h1 id=\"JAVAGUI设计——swing与awt\"><a href=\"#JAVAGUI设计——swing与awt\" class=\"headerlink\" title=\"JAVAGUI设计——swing与awt\"></a>JAVAGUI设计——swing与awt</h1><p>在实现JAVA制作的五子棋之前，我们要先来补充一些基础知识，其中第一部分就是JAVA中swing与awt组件的知识</p>\n<h2 id=\"基本框架——JFream与JPanel\"><a href=\"#基本框架——JFream与JPanel\" class=\"headerlink\" title=\"基本框架——JFream与JPanel\"></a>基本框架——JFream与JPanel</h2><p>JFream属于JAVAGUI的最顶层组件，故名思意，就是JAVA最高的框架，所有的GUI组件都是写在JFream中的。</p>\n<p>JPanel呢，则是相当于一个容器，画板的存在，因为一个JFream上如果存放太多东西容易导致布局的翁乱，因此经常在JFream下嵌套几个JFream来解决这样的问题。</p>\n<h3 id=\"创建一个简单的JFream窗口\"><a href=\"#创建一个简单的JFream窗口\" class=\"headerlink\" title=\"创建一个简单的JFream窗口\"></a>创建一个简单的JFream窗口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color ;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JFrameDemo01</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String args[])</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">JFrame</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JFrame</span>(<span class=\"string\">&quot;第一个Swing窗体&quot;</span>) ;</span><br><span class=\"line\">        f.setSize(<span class=\"number\">230</span>,<span class=\"number\">80</span>) ;             <span class=\"comment\">// 设置组件的大小</span></span><br><span class=\"line\">        f.setBackground(Color.WHITE) ;  <span class=\"comment\">// 将背景设置成白色</span></span><br><span class=\"line\">        JLabel label=<span class=\"keyword\">new</span> <span class=\"title class_\">JLabel</span>(<span class=\"string\">&quot;label&quot;</span>);</span><br><span class=\"line\">        f.add(label);</span><br><span class=\"line\">        f.setLocation(<span class=\"number\">300</span>,<span class=\"number\">200</span>) ;        <span class=\"comment\">// 设置组件的显示位置</span></span><br><span class=\"line\">        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);      <span class=\"comment\">//设置窗口关闭及结束进程</span></span><br><span class=\"line\">        f.setVisible(<span class=\"literal\">true</span>) ;            <span class=\"comment\">// 让组件可见</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>上述这段代码即为创建一个简单窗口的方法，但仍然有几个需要注意的点</p>\n<ul>\n<li>JFream需要setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 很多同学觉得这一步没有太大用处把他删了程序也能运行，但是这有一个很重要的问题就是窗口关闭不代表程序关闭，窗口关闭只是JFream一个实例被关闭，而不是结束程序。</li>\n<li>另外就是千万记得setVisible(true);</li>\n</ul>\n<h2 id=\"setLayout\"><a href=\"#setLayout\" class=\"headerlink\" title=\"setLayout\"></a>setLayout</h2><p>上面我们的程序中我们调用了一个JLabel组件，我们看到它被排在了窗口的最左边，很显然这是随机插入的，那么怎么add就能到我们需要的位置呢，以及如果插入多个Label怎么处理，这就需要我们来给fream&#x2F;panel，设置模板。</p>\n<h3 id=\"BoardLayout\"><a href=\"#BoardLayout\" class=\"headerlink\" title=\"BoardLayout\"></a>BoardLayout</h3><h2 id=\"让程序更多交互——JDialog\"><a href=\"#让程序更多交互——JDialog\" class=\"headerlink\" title=\"让程序更多交互——JDialog\"></a>让程序更多交互——JDialog</h2><p>JDialog是除JFrame一外的另一个顶级模块，Dialog和Fream的不同之处在于Dialog是依托于JFreamc存在的，即JFrame关闭，JDialog也会关闭。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JButton;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JDialog;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JFrame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JLabel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JPanel;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyDialogExample</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建 JFrame</span></span><br><span class=\"line\">        <span class=\"type\">JFrame</span> <span class=\"variable\">mainFrame</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JFrame</span>(<span class=\"string\">&quot;Main Frame&quot;</span>);</span><br><span class=\"line\">        mainFrame.setSize(<span class=\"number\">400</span>, <span class=\"number\">300</span>);</span><br><span class=\"line\">        mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建一个按钮，点击时显示对话框</span></span><br><span class=\"line\">        <span class=\"type\">JButton</span> <span class=\"variable\">showDialogButton</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JButton</span>(<span class=\"string\">&quot;Show Dialog&quot;</span>);</span><br><span class=\"line\">        showDialogButton.addActionListener(e -&gt; showMyDialog(mainFrame));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 将按钮添加到 JFrame</span></span><br><span class=\"line\">        <span class=\"type\">JPanel</span> <span class=\"variable\">panel</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JPanel</span>();</span><br><span class=\"line\">        panel.add(showDialogButton);</span><br><span class=\"line\">        mainFrame.add(panel);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 设置 JFrame 可见</span></span><br><span class=\"line\">        mainFrame.setVisible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建并显示自定义对话框</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">showMyDialog</span><span class=\"params\">(JFrame parentFrame)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建 JDialog</span></span><br><span class=\"line\">        <span class=\"type\">JDialog</span> <span class=\"variable\">myDialog</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JDialog</span>(parentFrame, <span class=\"string\">&quot;My Dialog&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        myDialog.setSize(<span class=\"number\">300</span>, <span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 在对话框中添加组件</span></span><br><span class=\"line\">        <span class=\"type\">JPanel</span> <span class=\"variable\">dialogPanel</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JPanel</span>();</span><br><span class=\"line\">        dialogPanel.add(<span class=\"keyword\">new</span> <span class=\"title class_\">JLabel</span>(<span class=\"string\">&quot;This is a custom dialog.&quot;</span>));</span><br><span class=\"line\">        myDialog.add(dialogPanel);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 设置对话框可见</span></span><br><span class=\"line\">        myDialog.setVisible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>关于Jdialog,需要强调以下几点。</p>\n<h4 id=\"dialog的相对位置\"><a href=\"#dialog的相对位置\" class=\"headerlink\" title=\"dialog的相对位置\"></a>dialog的相对位置</h4><p>dailog是基于JFraem存在的所以我们在实际开发中希望JFrame的位置最好是相对JFrame的，最好的方式即放在JFrame中间，怎么解决呢？</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JDialog waitDialog=<span class=\"keyword\">new</span> <span class=\"title class_\">JDialog</span>(frame);</span><br><span class=\"line\">        waitDialog.setBounds(<span class=\"number\">600</span>,<span class=\"number\">600</span>,<span class=\"number\">200</span>,<span class=\"number\">150</span>);</span><br><span class=\"line\">        waitDialog.setLocationRelativeTo(frame);</span><br><span class=\"line\">        waitDialog.setLocation(frame.getWidth()/<span class=\"number\">2</span>-<span class=\"number\">100</span>,frame.getWidth()/<span class=\"number\">2</span>-<span class=\"number\">50</span>);</span><br></pre></td></tr></table></figure>\n\n<p>只需要调用setLocationRelativeTo()函数，再设置Dialog的Location，即为相对位置啦。</p>\n<h2 id=\"自定义你的UI组件\"><a href=\"#自定义你的UI组件\" class=\"headerlink\" title=\"自定义你的UI组件\"></a>自定义你的UI组件</h2><p><img src=\"https://s2.loli.net/2023/12/24/gzoUHeBYk16ZMrE.png\" alt=\"p1.png\"><br>可以看到我们实际要做的游戏中的大多数UI控件都不是JAVA swing直接为我们提供的那些丑不拉级的UI控件，而此时就需要我们封装我们自己的UI控件，这里主要提供两种方法供大家使用。</p>\n<h3 id=\"JPanel-Graphics-drawimage\"><a href=\"#JPanel-Graphics-drawimage\" class=\"headerlink\" title=\"JPanel+Graphics drawimage\"></a>JPanel+Graphics drawimage</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span>  Image background=((Image) <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(<span class=\"string\">&quot;src/pic/label.png&quot;</span>).getImage());</span><br></pre></td></tr></table></figure>\n\n<p>然后再paintCompoent函数中绘制背景</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">paintComponent</span><span class=\"params\">(Graphics g)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.paintComponent(g);</span><br><span class=\"line\">        g.drawImage(background, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"built_in\">this</span>.getWidth(), <span class=\"built_in\">this</span>.getHeight(), <span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JButton-setIcon\"><a href=\"#JButton-setIcon\" class=\"headerlink\" title=\"JButton setIcon\"></a>JButton setIcon</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ImageIcon</span> <span class=\"variable\">icon</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(<span class=\"string\">&quot;src/pic/btn.png&quot;</span>);<span class=\"comment\">//根据路径创建图标</span></span><br><span class=\"line\">            <span class=\"type\">Image</span> <span class=\"variable\">temp1</span> <span class=\"operator\">=</span> icon.getImage().getScaledInstance(update.getWidth(), </span><br><span class=\"line\">             update.getHeight(), icon.getImage().SCALE_SMOOTH);</span><br><span class=\"line\">            icon = <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(temp1);</span><br><span class=\"line\">            update.setIcon(icon);</span><br></pre></td></tr></table></figure>\n\n<p>一般适用于JButton和JLabel的创建。</p>\n<p>创建完以后我们就发现一个问题，就是BUTTON旁边的白边太突兀，太丑了，我们想把它去掉，怎么办，这个时候不要急，我们只需要下面两行代码就能解决。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">this</span>.setBorderPainted(<span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"built_in\">this</span>.setFocusPainted(<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如何更新UI组件\"><a href=\"#如何更新UI组件\" class=\"headerlink\" title=\"如何更新UI组件\"></a>如何更新UI组件</h3><p>有时候我们的面板上的UI组件会需要更新，这是就需要我们调用以下的三件套来实现更新UI的效果。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">panel.removeAll();</span><br><span class=\"line\"><span class=\"comment\">//重写panel中的组件；</span></span><br><span class=\"line\">panel.repaint();</span><br><span class=\"line\">panel.updateUI();</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"JAVA网络编程\"><a href=\"#JAVA网络编程\" class=\"headerlink\" title=\"JAVA网络编程\"></a>JAVA网络编程</h1><p>然后，应为我们要完成的是联机模式的五子棋嘛，这是就需要我们学习一些网络编程的知识了。</p>\n<h2 id=\"TCP协议与UDP协议\"><a href=\"#TCP协议与UDP协议\" class=\"headerlink\" title=\"TCP协议与UDP协议\"></a>TCP协议与UDP协议</h2><h3 id=\"TCP（传输控制协议）\"><a href=\"#TCP（传输控制协议）\" class=\"headerlink\" title=\"TCP（传输控制协议）\"></a>TCP（传输控制协议）</h3><ul>\n<li><p>连接性： TCP是面向连接的协议，意味着在通信之前需要建立连接，然后进行数据传输，最后释放连接。</p>\n</li>\n<li><p>可靠性： TCP提供可靠的数据传输，确保数据的完整性和顺序性。如果有数据包丢失，TCP会进行重传，以保证所有数据都被正确地接收。</p>\n</li>\n<li><p>流控制和拥塞控制： TCP具有流控制和拥塞控制机制，可以根据网络的状态动态调整数据的传输速率，以防止网络拥塞。</p>\n</li>\n<li><p>适用场景： 适用于对数据完整性要求较高的应用，如文件传输、网页访问、电子邮件等。</p>\n</li>\n</ul>\n<h3 id=\"UDP（用户数据报协议）\"><a href=\"#UDP（用户数据报协议）\" class=\"headerlink\" title=\"UDP（用户数据报协议）\"></a>UDP（用户数据报协议）</h3><ul>\n<li><p>连接性： UDP是无连接的协议，通信双方不需要建立连接即可直接发送数据。</p>\n</li>\n<li><p>可靠性： UDP不提供可靠的数据传输，不保证数据的完整性和顺序性。因此，它更轻量级，但也更容易丢失数据包。</p>\n</li>\n<li><p>流控制和拥塞控制： UDP没有流控制和拥塞控制机制，传输速率由应用程序自己控制。</p>\n</li>\n<li><p>适用场景： 适用于对实时性要求较高、可以容忍少量数据丢失的应用，如音频和视频流传输、在线游戏等。</p>\n</li>\n</ul>\n<h3 id=\"优劣比较\"><a href=\"#优劣比较\" class=\"headerlink\" title=\"优劣比较\"></a>优劣比较</h3><h4 id=\"TCP的优势\"><a href=\"#TCP的优势\" class=\"headerlink\" title=\"TCP的优势\"></a>TCP的优势</h4><ul>\n<li>数据完整性和顺序性得到保障，适用于对可靠性要求高的应用。</li>\n<li>适用于大文件传输，因为可以确保所有数据正确到达。</li>\n</ul>\n<h4 id=\"TCP的劣势\"><a href=\"#TCP的劣势\" class=\"headerlink\" title=\"TCP的劣势\"></a>TCP的劣势</h4><ul>\n<li>较高的开销，包括连接的建立和释放。</li>\n<li>不适合实时性要求很高的应用，因为连接的建立和拆除都需要一定的时间。</li>\n</ul>\n<h4 id=\"UDP的优势\"><a href=\"#UDP的优势\" class=\"headerlink\" title=\"UDP的优势\"></a>UDP的优势</h4><ul>\n<li>低延迟，适用于实时性要求高的应用。</li>\n<li>简单、轻量级，适用于简单的数据传输场景。</li>\n</ul>\n<h4 id=\"UDP的劣势\"><a href=\"#UDP的劣势\" class=\"headerlink\" title=\"UDP的劣势\"></a>UDP的劣势</h4><ul>\n<li>不提供数据完整性和顺序性的保障，应用需要自行处理丢失数据的情况。</li>\n<li>不适合大文件传输，因为无法保证所有数据都正确到达。</li>\n</ul>\n<p>因此选择通讯协议时，需要·根据项目的实际情况来选择TCP和UDP协议，如果是对传输实时性要求高的项目，比如大型MMORPG游戏，就需要使用UDP协议来提升用户体验，如果是对于数据传输顺序要求较高，对实时性要求较低，比如五子棋，就可使用TCP通信。</p>\n<h2 id=\"Scoket\"><a href=\"#Scoket\" class=\"headerlink\" title=\"Scoket\"></a>Scoket</h2><p>服务器端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">package</span> socket.socket1.socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServerSocketTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化服务端socket并且绑定9999端口</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">ServerSocket</span> <span class=\"variable\">serverSocket</span>  <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">9999</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//等待客户端的连接</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> serverSocket.accept();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//获取输入流</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">BufferedReader</span> <span class=\"variable\">bufferedReader</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(socket.getInputStream()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//读取一行数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> bufferedReader.readLine();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//输出打印</span></span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(str);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">e.printStackTrace();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>客户端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> socket.socket1.socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStreamWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClientSocket</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(<span class=\"string\">&quot;localhost&quot;</span>,<span class=\"number\">9999</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">BufferedWriter</span> <span class=\"variable\">bufferedWriter</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">BufferedWriter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">OutputStreamWriter</span>(socket.getOutputStream()));</span><br><span class=\"line\"></span><br><span class=\"line\">            String str=<span class=\"string\">&quot;你好，这是我的第一个socket&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            bufferedWriter.write(str);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//刷新输入流</span></span><br><span class=\"line\"></span><br><span class=\"line\">            bufferedWriter.flush();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//关闭socket的输出流</span></span><br><span class=\"line\"></span><br><span class=\"line\">            socket.shutdownOutput();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">e.printStackTrace();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这里要强调一个点就是客户端为什么要调用一个shuttdownOutput()函数,这个函数其实再这里可以替换成socket.close()函数，为什么要调用这两个函数呢，原因就在于socket再执行过程中会形成阻塞，阻塞的函数一个是accept()函数，另一个就是read()函数，以及一切读取的函数，这样代码运行到此处时，如果没有接受到信息，代码就会停在这里不动，直到接收到。</p>\n<br>\n那么回过头来看我们的代码，如果我们没有给服务端传输客户端已经关闭的消息，服务端的read 就会接着阻塞在那里，等待客户端传输信息，但此时客户端已经关闭进程了，此时就会抛出一个Connection reset的异常\n\n<br>\n\n<p>我们就可以使用客户端和服务器通讯了，成功以后我们会发现客户端只能传输一条语句，就推出了，这明显和我们的预期不符，所以我们接下来就是要实现客户端和服务器之间的实时通讯</p>\n<h2 id=\"利用while-true-接收多条消息\"><a href=\"#利用while-true-接收多条消息\" class=\"headerlink\" title=\"利用while(true)接收多条消息\"></a>利用while(true)接收多条消息</h2><p>服务端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> socket.socket1.socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServerSocketTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化服务端socket并且绑定9999端口</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">ServerSocket</span> <span class=\"variable\">serverSocket</span>  <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">9999</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//等待客户端的连接</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> serverSocket.accept();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//获取输入流,并且指定统一的编码格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">BufferedReader</span> <span class=\"variable\">bufferedReader</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(socket.getInputStream(),<span class=\"string\">&quot;UTF-8&quot;</span>));</span><br><span class=\"line\">            <span class=\"comment\">//读取一行数据</span></span><br><span class=\"line\">            String str;</span><br><span class=\"line\">            <span class=\"comment\">//通过while循环不断读取信息，</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((str = bufferedReader.readLine())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(str);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;<span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">e.printStackTrace();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>客户端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> socket.socket1.socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClientSocket</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//初始化一个socket</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(<span class=\"string\">&quot;127.0.0.1&quot;</span>,<span class=\"number\">9999</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//通过socket获取字符流</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">BufferedWriter</span> <span class=\"variable\">bufferedWriter</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">BufferedWriter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">OutputStreamWriter</span>(socket.getOutputStream()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//通过标准输入流获取字符流</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">BufferedReader</span> <span class=\"variable\">bufferedReader</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(System.in,<span class=\"string\">&quot;UTF-8&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> bufferedReader.readLine();</span><br><span class=\"line\"></span><br><span class=\"line\">              bufferedWriter.write(str);</span><br><span class=\"line\"></span><br><span class=\"line\">              bufferedWriter.write(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">              bufferedWriter.flush();</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;<span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">e.printStackTrace();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"JAVA多线程\"><a href=\"#JAVA多线程\" class=\"headerlink\" title=\"JAVA多线程\"></a>JAVA多线程</h1><h3 id=\"双线程即时通讯客户端\"><a href=\"#双线程即时通讯客户端\" class=\"headerlink\" title=\"双线程即时通讯客户端\"></a>双线程即时通讯客户端</h3><p>我们想，我们的客户端想要无时无刻的和服务器通讯，就需要无时无刻的准备收到服务器的消息，因为我们也不知道服务器到底什么时候给我们发消息。</p>\n<br>\n\n<p>而在刚刚的代码中，我们又知道了socket的read会发生阻塞，所以如果我们一只检测服务端传来的消息，我们就被迫阻塞在那个地方，没有办法进行其他操作，怎么办，此时就需要我们使用多线程的知识，构建Receive 和Send两个线程来进行客户端和服务器端之间的实时通讯。</p>\n<h2 id=\"多用户与服务器的连接\"><a href=\"#多用户与服务器的连接\" class=\"headerlink\" title=\"多用户与服务器的连接\"></a>多用户与服务器的连接</h2><p>当我们的服务器有多位用户时，是不是每一个用户就需要给分配一个线程？因此动态的加载新线程是很有必要的。</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>项目已上传至github   <a href=\"https://github.com/DemonWhiteY/Gobang_online\">https://github.com/DemonWhiteY/Gobang_online</a></p>\n<p>百度网盘 链接：<a href=\"https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS\">https://pan.baidu.com/s/1c7dflsJ9Q-Scg-0DVgOdkg?pwd=YYDS</a><br>提取码：YYDS<br>–来自百度网盘超级会员V3的分享</p>\n<p>网盘下载可以看到Server文件夹和Client文件夹，控制台打开 java -jar GObang.jar 注意，要先打开服务端文件，再打开客户端文件，由于是联机游戏，最少需要打开两次客户端才能相互邀请正常游戏。</p>\n<p>先来看看游戏最终效果<br><img src=\"https://s2.loli.net/2023/12/25/zPb7nTuekA5JQXF.png\" alt=\"屏幕截图 2023-12-25 205853.png\"></p>\n<p>联机大厅具有以下功能：</p>\n<ul>\n<li>更改用户名字</li>\n<li>用户刷新</li>\n<li>用户邀请</li>\n<li>用户更改服务器IP和端口</li>\n</ul>\n<br>\n\n<p><img src=\"https://s2.loli.net/2023/12/24/gzoUHeBYk16ZMrE.png\" alt=\"p1.png\"></p>\n<p>游戏主界面具有以下功能</p>\n<ul>\n<li>玩家交替下棋，对方回合不得下棋。</li>\n<li>玩家点击下棋，拖拽移动</li>\n<li>玩家悔棋，最大悔棋次数3</li>\n<li>认输</li>\n<li>求和，最大求和次数3</li>\n<li>显示对战玩家昵称</li>\n<li>超时，没人30秒，超时警告，超时3次输掉比赛。</li>\n</ul>\n<h1 id=\"JAVAGUI设计——swing与awt\"><a href=\"#JAVAGUI设计——swing与awt\" class=\"headerlink\" title=\"JAVAGUI设计——swing与awt\"></a>JAVAGUI设计——swing与awt</h1><p>在实现JAVA制作的五子棋之前，我们要先来补充一些基础知识，其中第一部分就是JAVA中swing与awt组件的知识</p>\n<h2 id=\"基本框架——JFream与JPanel\"><a href=\"#基本框架——JFream与JPanel\" class=\"headerlink\" title=\"基本框架——JFream与JPanel\"></a>基本框架——JFream与JPanel</h2><p>JFream属于JAVAGUI的最顶层组件，故名思意，就是JAVA最高的框架，所有的GUI组件都是写在JFream中的。</p>\n<p>JPanel呢，则是相当于一个容器，画板的存在，因为一个JFream上如果存放太多东西容易导致布局的翁乱，因此经常在JFream下嵌套几个JFream来解决这样的问题。</p>\n<h3 id=\"创建一个简单的JFream窗口\"><a href=\"#创建一个简单的JFream窗口\" class=\"headerlink\" title=\"创建一个简单的JFream窗口\"></a>创建一个简单的JFream窗口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color ;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JFrameDemo01</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String args[])</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">JFrame</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JFrame</span>(<span class=\"string\">&quot;第一个Swing窗体&quot;</span>) ;</span><br><span class=\"line\">        f.setSize(<span class=\"number\">230</span>,<span class=\"number\">80</span>) ;             <span class=\"comment\">// 设置组件的大小</span></span><br><span class=\"line\">        f.setBackground(Color.WHITE) ;  <span class=\"comment\">// 将背景设置成白色</span></span><br><span class=\"line\">        JLabel label=<span class=\"keyword\">new</span> <span class=\"title class_\">JLabel</span>(<span class=\"string\">&quot;label&quot;</span>);</span><br><span class=\"line\">        f.add(label);</span><br><span class=\"line\">        f.setLocation(<span class=\"number\">300</span>,<span class=\"number\">200</span>) ;        <span class=\"comment\">// 设置组件的显示位置</span></span><br><span class=\"line\">        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);      <span class=\"comment\">//设置窗口关闭及结束进程</span></span><br><span class=\"line\">        f.setVisible(<span class=\"literal\">true</span>) ;            <span class=\"comment\">// 让组件可见</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>上述这段代码即为创建一个简单窗口的方法，但仍然有几个需要注意的点</p>\n<ul>\n<li>JFream需要setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 很多同学觉得这一步没有太大用处把他删了程序也能运行，但是这有一个很重要的问题就是窗口关闭不代表程序关闭，窗口关闭只是JFream一个实例被关闭，而不是结束程序。</li>\n<li>另外就是千万记得setVisible(true);</li>\n</ul>\n<h2 id=\"setLayout\"><a href=\"#setLayout\" class=\"headerlink\" title=\"setLayout\"></a>setLayout</h2><p>上面我们的程序中我们调用了一个JLabel组件，我们看到它被排在了窗口的最左边，很显然这是随机插入的，那么怎么add就能到我们需要的位置呢，以及如果插入多个Label怎么处理，这就需要我们来给fream&#x2F;panel，设置模板。</p>\n<h3 id=\"BoardLayout\"><a href=\"#BoardLayout\" class=\"headerlink\" title=\"BoardLayout\"></a>BoardLayout</h3><h2 id=\"让程序更多交互——JDialog\"><a href=\"#让程序更多交互——JDialog\" class=\"headerlink\" title=\"让程序更多交互——JDialog\"></a>让程序更多交互——JDialog</h2><p>JDialog是除JFrame一外的另一个顶级模块，Dialog和Fream的不同之处在于Dialog是依托于JFreamc存在的，即JFrame关闭，JDialog也会关闭。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JButton;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JDialog;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JFrame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JLabel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JPanel;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyDialogExample</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建 JFrame</span></span><br><span class=\"line\">        <span class=\"type\">JFrame</span> <span class=\"variable\">mainFrame</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JFrame</span>(<span class=\"string\">&quot;Main Frame&quot;</span>);</span><br><span class=\"line\">        mainFrame.setSize(<span class=\"number\">400</span>, <span class=\"number\">300</span>);</span><br><span class=\"line\">        mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建一个按钮，点击时显示对话框</span></span><br><span class=\"line\">        <span class=\"type\">JButton</span> <span class=\"variable\">showDialogButton</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JButton</span>(<span class=\"string\">&quot;Show Dialog&quot;</span>);</span><br><span class=\"line\">        showDialogButton.addActionListener(e -&gt; showMyDialog(mainFrame));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 将按钮添加到 JFrame</span></span><br><span class=\"line\">        <span class=\"type\">JPanel</span> <span class=\"variable\">panel</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JPanel</span>();</span><br><span class=\"line\">        panel.add(showDialogButton);</span><br><span class=\"line\">        mainFrame.add(panel);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 设置 JFrame 可见</span></span><br><span class=\"line\">        mainFrame.setVisible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建并显示自定义对话框</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">showMyDialog</span><span class=\"params\">(JFrame parentFrame)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建 JDialog</span></span><br><span class=\"line\">        <span class=\"type\">JDialog</span> <span class=\"variable\">myDialog</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JDialog</span>(parentFrame, <span class=\"string\">&quot;My Dialog&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        myDialog.setSize(<span class=\"number\">300</span>, <span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 在对话框中添加组件</span></span><br><span class=\"line\">        <span class=\"type\">JPanel</span> <span class=\"variable\">dialogPanel</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JPanel</span>();</span><br><span class=\"line\">        dialogPanel.add(<span class=\"keyword\">new</span> <span class=\"title class_\">JLabel</span>(<span class=\"string\">&quot;This is a custom dialog.&quot;</span>));</span><br><span class=\"line\">        myDialog.add(dialogPanel);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 设置对话框可见</span></span><br><span class=\"line\">        myDialog.setVisible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>关于Jdialog,需要强调以下几点。</p>\n<h4 id=\"dialog的相对位置\"><a href=\"#dialog的相对位置\" class=\"headerlink\" title=\"dialog的相对位置\"></a>dialog的相对位置</h4><p>dailog是基于JFraem存在的所以我们在实际开发中希望JFrame的位置最好是相对JFrame的，最好的方式即放在JFrame中间，怎么解决呢？</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JDialog waitDialog=<span class=\"keyword\">new</span> <span class=\"title class_\">JDialog</span>(frame);</span><br><span class=\"line\">        waitDialog.setBounds(<span class=\"number\">600</span>,<span class=\"number\">600</span>,<span class=\"number\">200</span>,<span class=\"number\">150</span>);</span><br><span class=\"line\">        waitDialog.setLocationRelativeTo(frame);</span><br><span class=\"line\">        waitDialog.setLocation(frame.getWidth()/<span class=\"number\">2</span>-<span class=\"number\">100</span>,frame.getWidth()/<span class=\"number\">2</span>-<span class=\"number\">50</span>);</span><br></pre></td></tr></table></figure>\n\n<p>只需要调用setLocationRelativeTo()函数，再设置Dialog的Location，即为相对位置啦。</p>\n<h2 id=\"自定义你的UI组件\"><a href=\"#自定义你的UI组件\" class=\"headerlink\" title=\"自定义你的UI组件\"></a>自定义你的UI组件</h2><p><img src=\"https://s2.loli.net/2023/12/24/gzoUHeBYk16ZMrE.png\" alt=\"p1.png\"><br>可以看到我们实际要做的游戏中的大多数UI控件都不是JAVA swing直接为我们提供的那些丑不拉级的UI控件，而此时就需要我们封装我们自己的UI控件，这里主要提供两种方法供大家使用。</p>\n<h3 id=\"JPanel-Graphics-drawimage\"><a href=\"#JPanel-Graphics-drawimage\" class=\"headerlink\" title=\"JPanel+Graphics drawimage\"></a>JPanel+Graphics drawimage</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span>  Image background=((Image) <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(<span class=\"string\">&quot;src/pic/label.png&quot;</span>).getImage());</span><br></pre></td></tr></table></figure>\n\n<p>然后再paintCompoent函数中绘制背景</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">paintComponent</span><span class=\"params\">(Graphics g)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.paintComponent(g);</span><br><span class=\"line\">        g.drawImage(background, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"built_in\">this</span>.getWidth(), <span class=\"built_in\">this</span>.getHeight(), <span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JButton-setIcon\"><a href=\"#JButton-setIcon\" class=\"headerlink\" title=\"JButton setIcon\"></a>JButton setIcon</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ImageIcon</span> <span class=\"variable\">icon</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(<span class=\"string\">&quot;src/pic/btn.png&quot;</span>);<span class=\"comment\">//根据路径创建图标</span></span><br><span class=\"line\">            <span class=\"type\">Image</span> <span class=\"variable\">temp1</span> <span class=\"operator\">=</span> icon.getImage().getScaledInstance(update.getWidth(), </span><br><span class=\"line\">             update.getHeight(), icon.getImage().SCALE_SMOOTH);</span><br><span class=\"line\">            icon = <span class=\"keyword\">new</span> <span class=\"title class_\">ImageIcon</span>(temp1);</span><br><span class=\"line\">            update.setIcon(icon);</span><br></pre></td></tr></table></figure>\n\n<p>一般适用于JButton和JLabel的创建。</p>\n<p>创建完以后我们就发现一个问题，就是BUTTON旁边的白边太突兀，太丑了，我们想把它去掉，怎么办，这个时候不要急，我们只需要下面两行代码就能解决。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">this</span>.setBorderPainted(<span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"built_in\">this</span>.setFocusPainted(<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如何更新UI组件\"><a href=\"#如何更新UI组件\" class=\"headerlink\" title=\"如何更新UI组件\"></a>如何更新UI组件</h3><p>有时候我们的面板上的UI组件会需要更新，这是就需要我们调用以下的三件套来实现更新UI的效果。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">panel.removeAll();</span><br><span class=\"line\"><span class=\"comment\">//重写panel中的组件；</span></span><br><span class=\"line\">panel.repaint();</span><br><span class=\"line\">panel.updateUI();</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"JAVA网络编程\"><a href=\"#JAVA网络编程\" class=\"headerlink\" title=\"JAVA网络编程\"></a>JAVA网络编程</h1><p>然后，应为我们要完成的是联机模式的五子棋嘛，这是就需要我们学习一些网络编程的知识了。</p>\n<h2 id=\"TCP协议与UDP协议\"><a href=\"#TCP协议与UDP协议\" class=\"headerlink\" title=\"TCP协议与UDP协议\"></a>TCP协议与UDP协议</h2><h3 id=\"TCP（传输控制协议）\"><a href=\"#TCP（传输控制协议）\" class=\"headerlink\" title=\"TCP（传输控制协议）\"></a>TCP（传输控制协议）</h3><ul>\n<li><p>连接性： TCP是面向连接的协议，意味着在通信之前需要建立连接，然后进行数据传输，最后释放连接。</p>\n</li>\n<li><p>可靠性： TCP提供可靠的数据传输，确保数据的完整性和顺序性。如果有数据包丢失，TCP会进行重传，以保证所有数据都被正确地接收。</p>\n</li>\n<li><p>流控制和拥塞控制： TCP具有流控制和拥塞控制机制，可以根据网络的状态动态调整数据的传输速率，以防止网络拥塞。</p>\n</li>\n<li><p>适用场景： 适用于对数据完整性要求较高的应用，如文件传输、网页访问、电子邮件等。</p>\n</li>\n</ul>\n<h3 id=\"UDP（用户数据报协议）\"><a href=\"#UDP（用户数据报协议）\" class=\"headerlink\" title=\"UDP（用户数据报协议）\"></a>UDP（用户数据报协议）</h3><ul>\n<li><p>连接性： UDP是无连接的协议，通信双方不需要建立连接即可直接发送数据。</p>\n</li>\n<li><p>可靠性： UDP不提供可靠的数据传输，不保证数据的完整性和顺序性。因此，它更轻量级，但也更容易丢失数据包。</p>\n</li>\n<li><p>流控制和拥塞控制： UDP没有流控制和拥塞控制机制，传输速率由应用程序自己控制。</p>\n</li>\n<li><p>适用场景： 适用于对实时性要求较高、可以容忍少量数据丢失的应用，如音频和视频流传输、在线游戏等。</p>\n</li>\n</ul>\n<h3 id=\"优劣比较\"><a href=\"#优劣比较\" class=\"headerlink\" title=\"优劣比较\"></a>优劣比较</h3><h4 id=\"TCP的优势\"><a href=\"#TCP的优势\" class=\"headerlink\" title=\"TCP的优势\"></a>TCP的优势</h4><ul>\n<li>数据完整性和顺序性得到保障，适用于对可靠性要求高的应用。</li>\n<li>适用于大文件传输，因为可以确保所有数据正确到达。</li>\n</ul>\n<h4 id=\"TCP的劣势\"><a href=\"#TCP的劣势\" class=\"headerlink\" title=\"TCP的劣势\"></a>TCP的劣势</h4><ul>\n<li>较高的开销，包括连接的建立和释放。</li>\n<li>不适合实时性要求很高的应用，因为连接的建立和拆除都需要一定的时间。</li>\n</ul>\n<h4 id=\"UDP的优势\"><a href=\"#UDP的优势\" class=\"headerlink\" title=\"UDP的优势\"></a>UDP的优势</h4><ul>\n<li>低延迟，适用于实时性要求高的应用。</li>\n<li>简单、轻量级，适用于简单的数据传输场景。</li>\n</ul>\n<h4 id=\"UDP的劣势\"><a href=\"#UDP的劣势\" class=\"headerlink\" title=\"UDP的劣势\"></a>UDP的劣势</h4><ul>\n<li>不提供数据完整性和顺序性的保障，应用需要自行处理丢失数据的情况。</li>\n<li>不适合大文件传输，因为无法保证所有数据都正确到达。</li>\n</ul>\n<p>因此选择通讯协议时，需要·根据项目的实际情况来选择TCP和UDP协议，如果是对传输实时性要求高的项目，比如大型MMORPG游戏，就需要使用UDP协议来提升用户体验，如果是对于数据传输顺序要求较高，对实时性要求较低，比如五子棋，就可使用TCP通信。</p>\n<h2 id=\"Scoket\"><a href=\"#Scoket\" class=\"headerlink\" title=\"Scoket\"></a>Scoket</h2><p>服务器端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">package</span> socket.socket1.socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServerSocketTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化服务端socket并且绑定9999端口</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">ServerSocket</span> <span class=\"variable\">serverSocket</span>  <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">9999</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//等待客户端的连接</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> serverSocket.accept();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//获取输入流</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">BufferedReader</span> <span class=\"variable\">bufferedReader</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(socket.getInputStream()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//读取一行数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> bufferedReader.readLine();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//输出打印</span></span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(str);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">e.printStackTrace();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>客户端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> socket.socket1.socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStreamWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClientSocket</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(<span class=\"string\">&quot;localhost&quot;</span>,<span class=\"number\">9999</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">BufferedWriter</span> <span class=\"variable\">bufferedWriter</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">BufferedWriter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">OutputStreamWriter</span>(socket.getOutputStream()));</span><br><span class=\"line\"></span><br><span class=\"line\">            String str=<span class=\"string\">&quot;你好，这是我的第一个socket&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            bufferedWriter.write(str);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//刷新输入流</span></span><br><span class=\"line\"></span><br><span class=\"line\">            bufferedWriter.flush();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//关闭socket的输出流</span></span><br><span class=\"line\"></span><br><span class=\"line\">            socket.shutdownOutput();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">e.printStackTrace();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这里要强调一个点就是客户端为什么要调用一个shuttdownOutput()函数,这个函数其实再这里可以替换成socket.close()函数，为什么要调用这两个函数呢，原因就在于socket再执行过程中会形成阻塞，阻塞的函数一个是accept()函数，另一个就是read()函数，以及一切读取的函数，这样代码运行到此处时，如果没有接受到信息，代码就会停在这里不动，直到接收到。</p>\n<br>\n那么回过头来看我们的代码，如果我们没有给服务端传输客户端已经关闭的消息，服务端的read 就会接着阻塞在那里，等待客户端传输信息，但此时客户端已经关闭进程了，此时就会抛出一个Connection reset的异常\n\n<br>\n\n<p>我们就可以使用客户端和服务器通讯了，成功以后我们会发现客户端只能传输一条语句，就推出了，这明显和我们的预期不符，所以我们接下来就是要实现客户端和服务器之间的实时通讯</p>\n<h2 id=\"利用while-true-接收多条消息\"><a href=\"#利用while-true-接收多条消息\" class=\"headerlink\" title=\"利用while(true)接收多条消息\"></a>利用while(true)接收多条消息</h2><p>服务端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> socket.socket1.socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServerSocketTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化服务端socket并且绑定9999端口</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">ServerSocket</span> <span class=\"variable\">serverSocket</span>  <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">9999</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//等待客户端的连接</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> serverSocket.accept();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//获取输入流,并且指定统一的编码格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">BufferedReader</span> <span class=\"variable\">bufferedReader</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(socket.getInputStream(),<span class=\"string\">&quot;UTF-8&quot;</span>));</span><br><span class=\"line\">            <span class=\"comment\">//读取一行数据</span></span><br><span class=\"line\">            String str;</span><br><span class=\"line\">            <span class=\"comment\">//通过while循环不断读取信息，</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((str = bufferedReader.readLine())!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.println(str);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;<span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">e.printStackTrace();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>客户端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> socket.socket1.socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClientSocket</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//初始化一个socket</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(<span class=\"string\">&quot;127.0.0.1&quot;</span>,<span class=\"number\">9999</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//通过socket获取字符流</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">BufferedWriter</span> <span class=\"variable\">bufferedWriter</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">BufferedWriter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">OutputStreamWriter</span>(socket.getOutputStream()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//通过标准输入流获取字符流</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">BufferedReader</span> <span class=\"variable\">bufferedReader</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(System.in,<span class=\"string\">&quot;UTF-8&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> bufferedReader.readLine();</span><br><span class=\"line\"></span><br><span class=\"line\">              bufferedWriter.write(str);</span><br><span class=\"line\"></span><br><span class=\"line\">              bufferedWriter.write(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">              bufferedWriter.flush();</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;<span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">e.printStackTrace();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"JAVA多线程\"><a href=\"#JAVA多线程\" class=\"headerlink\" title=\"JAVA多线程\"></a>JAVA多线程</h1><h3 id=\"双线程即时通讯客户端\"><a href=\"#双线程即时通讯客户端\" class=\"headerlink\" title=\"双线程即时通讯客户端\"></a>双线程即时通讯客户端</h3><p>我们想，我们的客户端想要无时无刻的和服务器通讯，就需要无时无刻的准备收到服务器的消息，因为我们也不知道服务器到底什么时候给我们发消息。</p>\n<br>\n\n<p>而在刚刚的代码中，我们又知道了socket的read会发生阻塞，所以如果我们一只检测服务端传来的消息，我们就被迫阻塞在那个地方，没有办法进行其他操作，怎么办，此时就需要我们使用多线程的知识，构建Receive 和Send两个线程来进行客户端和服务器端之间的实时通讯。</p>\n<h2 id=\"多用户与服务器的连接\"><a href=\"#多用户与服务器的连接\" class=\"headerlink\" title=\"多用户与服务器的连接\"></a>多用户与服务器的连接</h2><p>当我们的服务器有多位用户时，是不是每一个用户就需要给分配一个线程？因此动态的加载新线程是很有必要的。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clgyio1y900005kdybwt16mmz","category_id":"clgyyinl40001todyevbxa7nz","_id":"clgyyinl8000btody8g37dt9k"},{"post_id":"clgyio1y900005kdybwt16mmz","category_id":"clgyyinl50003todyek653qsw","_id":"clgyyinl8000dtody5z01er9q"},{"post_id":"clgyio1y900005kdybwt16mmz","category_id":"clgyyinl60007todyah9v7psg","_id":"clgyyinl8000ftodyape2a9bt"},{"post_id":"clgyf4gsw0004vcdybyqn9cig","category_id":"clilotsre00015wdyexrr5h9j","_id":"clilotsrf00045wdy01p0eni0"},{"post_id":"clgyf4gsw0004vcdybyqn9cig","category_id":"clilotsre00035wdy8j0s6v46","_id":"clilotsrf00055wdy2e9s236x"}],"PostTag":[{"post_id":"clgyio1y900005kdybwt16mmz","tag_id":"clgyy8wqk000084dycj81d2zy","_id":"clgyy8wqn000284dydy6e1p4n"},{"post_id":"clgyio1y900005kdybwt16mmz","tag_id":"clgyy8wqm000184dy894s3d8p","_id":"clgyyinl60005tody2td1cuoh"},{"post_id":"clgyio1y900005kdybwt16mmz","tag_id":"clgyyinl30000todyb81sc1zm","_id":"clgyyinl60006todyderlg5se"},{"post_id":"clgyio1y900005kdybwt16mmz","tag_id":"clgyyinl50002tody1i0rcg31","_id":"clgyyinl70009tody6m8h7ajw"},{"post_id":"clgyf4gsw0004vcdybyqn9cig","tag_id":"clgyyinl7000atodyhw7uch37","_id":"clgyyinl8000gtody7bqza165"},{"post_id":"clgyf4gsw0004vcdybyqn9cig","tag_id":"clilotsrc00005wdy6hvk59wz","_id":"clilotsre00025wdyd34j3gtq"},{"post_id":"clqizw9730000ucdy0m2ogw1p","tag_id":"clqi9hwvx0001tgdy00oo4uoq","_id":"clqkpm5530001swdyg5aihtgn"},{"post_id":"clqkpm5510000swdy4j6pg1f8","tag_id":"clqi9hwvx0001tgdy00oo4uoq","_id":"clqkpm5530002swdybfi1fczs"},{"post_id":"clqkxmeje0000qcdycz0q3z2p","tag_id":"clqi9hwvx0001tgdy00oo4uoq","_id":"clqkxmejk0001qcdyf54b1lk8"}],"Tag":[{"name":"Unity2D","_id":"clgyy8wqk000084dycj81d2zy"},{"name":"环境配置","_id":"clgyy8wqm000184dy894s3d8p"},{"name":"环境配置，游戏，C#","_id":"clgyyccoh0000o8dyc4sz15jj"},{"name":"算法，动态规划，入门","_id":"clgyyee6b0006o8dy055dh7rb"},{"name":"游戏","_id":"clgyyinl30000todyb81sc1zm"},{"name":"C#","_id":"clgyyinl50002tody1i0rcg31"},{"name":"算法","_id":"clgyyinl60004todye7e39e0y"},{"name":"动态规划","_id":"clgyyinl70008todya5fd0909"},{"name":"入门","_id":"clgyyinl7000atodyhw7uch37"},{"name":"C++","_id":"clilotsrc00005wdy6hvk59wz"},{"name":"JAVA","_id":"clqi9hwvx0001tgdy00oo4uoq"}]}}